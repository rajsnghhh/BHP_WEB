{"version":3,"sources":["./src/app/login/reset/reset.component.ts","./src/app/login/reset/reset.component.html","./src/app/login/account-routing.module.ts","./src/app/login/account.module.ts","./src/app/login/layout/layout.component.ts","./src/app/login/layout/layout.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html"],"names":[],"mappings":"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","file":"login-account-module.js","sourcesContent":["import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { first } from 'rxjs/operators';\r\nimport { ConfirmationDialogService } from 'src/app/modules/shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { ValidationService } from 'src/app/modules/shared/services/validation.service';\r\nimport { LoginService } from '../login.service';\r\nimport { Reset } from '../user';\r\n\r\n@Component({\r\n  selector: 'app-reset',\r\n  templateUrl: './reset.component.html',\r\n  styleUrls: ['./reset.component.css']\r\n})\r\nexport class ResetComponent implements OnInit {\r\n  form: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  show: boolean = false;\r\n  loader: boolean = true;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private accountService: LoginService,\r\n    private toaster: ToastrService,\r\n    public validationService: ValidationService,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n  ) {\r\n    // redirect to home if already logged in\r\n    if (this.accountService.userValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      newPassword: ['', Validators.required],\r\n      confirmPassword: ['', [Validators.required]]\r\n    });\r\n\r\n    if (this.accountService.userFirstTime == undefined) {\r\n      this.router.navigate(['/']);\r\n      this.showError('Please login again');\r\n    }\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.form.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let newPassword = this.form.get('newPassword').value;\r\n    let confirmPassword = this.form.get('confirmPassword').value;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    setTimeout(() => {\r\n      if (newPassword == confirmPassword) {\r\n        this.accountService.reset(this.f.newPassword.value)\r\n          .pipe(first())\r\n          .subscribe(\r\n            (data: Reset) => {\r\n              console.log(data, 'resetData');\r\n              if (data.status) {\r\n                this.showSuccess('Success');\r\n                this.router.navigate(['/'], { relativeTo: this.route });\r\n              } else {\r\n                this.showError(data.message);\r\n              }\r\n              this.loader = true;\r\n              this.loading = false;\r\n            },\r\n            error => {\r\n              this.loader = true;\r\n              console.log(error)\r\n              this.showError('Error');\r\n              this.loading = false;\r\n            });\r\n      } else {\r\n        this.loading = false;\r\n        this.checkBothPasswordSame('Error');\r\n      }\r\n    }, 1000);\r\n\r\n  }\r\n\r\n  password() {\r\n    this.show = !this.show;\r\n  }\r\n\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error in password reset', {\r\n      timeOut: 4000,\r\n    });\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Password reset successful', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  checkBothPasswordSame(message) {\r\n    this.toaster.error(message, 'New Password & Confirm Password does not match ', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n}\r\n","<app-loader [hidden]=\"loader\"></app-loader>\r\n<img\r\n  src=\"../../../assets/login_bg.jpg\"\r\n  alt=\"\"\r\n  style=\"width: 100vw; height: 100vh; margin-left: -551px; margin-top: -54px\"\r\n/>\r\n<div class=\"overlay\"></div>\r\n\r\n<div\r\n  class=\"card\"\r\n  style=\"\r\n    position: absolute;\r\n    top: 40%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 40%;\r\n    box-shadow: rgba(255, 255, 255, 0.1) 0px 10px 30px;\r\n    opacity: 0.95;\r\n    border: 1px;\r\n    border-radius: 10px;\r\n  \"\r\n>\r\n  <h4\r\n    class=\"card-header\"\r\n    style=\"\r\n      background-color: #156060;\r\n      color: #ffffff;\r\n      border-radius: 8px 8px 0px 0px;\r\n      font-size: large;\r\n      text-align: center;\r\n    \"\r\n  >\r\n    Reset Password\r\n  </h4>\r\n  <div class=\"card-body\" style=\"padding: 0rem 1rem\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"newPassword\"\r\n          >New Password <span class=\"text-danger\">*</span></label\r\n        >\r\n        <div style=\"display: grid; grid-template-columns: 5fr -0.1fr\">\r\n          <input\r\n            [type]=\"show ? 'text' : 'password'\"\r\n            style=\"border: 1px solid black\"\r\n            placeholder=\"Enter new password\"\r\n            formControlName=\"newPassword\"\r\n            class=\"form-control\"\r\n            [maxlength]=\"20\"\r\n            [minlength]=\"4\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.newPassword.errors }\"\r\n          />\r\n          <div style=\"margin: -26px 0px 0px 450px; z-index: 99999\">\r\n            <div *ngIf=\"show; else elseblock\">\r\n              <i class=\"fa fa-eye\" (click)=\"password()\" *ngIf=\"show\"></i>\r\n            </div>\r\n            <ng-template #elseblock\r\n              ><i class=\"fa fa-eye-slash\" (click)=\"password()\"></i\r\n            ></ng-template>\r\n          </div>\r\n          <div></div>\r\n          <div\r\n            *ngIf=\"submitted && f.newPassword.errors\"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            <div\r\n              *ngIf=\"f.newPassword.errors.required\"\r\n              style=\"margin-left: 41px\"\r\n            >\r\n              Password is required\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <div class=\"form-group\">\r\n        <label for=\"confirmPassword\"\r\n          >Confirm Password &nbsp;<span class=\"text-danger\">*</span></label\r\n        >\r\n\r\n        <input\r\n          type=\"password\"\r\n          style=\"border: 1px solid black\"\r\n          formControlName=\"confirmPassword\"\r\n          placeholder=\"Enter again\"\r\n          class=\"form-control\"\r\n          [maxlength]=\"20\"\r\n          [minlength]=\"4\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\"\r\n        />\r\n\r\n        <div\r\n          *ngIf=\"submitted && f.confirmPassword.errors\"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          <div\r\n            *ngIf=\"f.confirmPassword.errors.required\"\r\n            style=\"margin-left: 41px\"\r\n          >\r\n            Password is required\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <button\r\n          [disabled]=\"loading\"\r\n          class=\"btn\"\r\n          style=\"\r\n            margin-left: 35%;\r\n            margin-top: 34px;\r\n            transform: translate(-50%, -50%);\r\n            padding: 4px 14px 4px 14px;\r\n            background-color: #156060;\r\n            color: #ffffff;\r\n          \"\r\n        >\r\n          <span\r\n            *ngIf=\"loading\"\r\n            class=\"spinner-border spinner-border-sm mr-1\"\r\n          ></span>\r\n          <span class=\"fa-passwd-reset fa-stack\">\r\n            <i class=\"fa fa-undo fa-stack-2x\"></i>\r\n            <i class=\"fa fa-lock\" style=\"margin-left: 12px\"></i>\r\n          </span>\r\n          Reset\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-danger\"\r\n          routerLink=\"../login\"\r\n          style=\"padding: 8px 14px 8px 14px; margin: 0px 0px 8px -36px\"\r\n        >\r\n          <i class=\"fa fa-times fa-lg\" aria-hidden=\"true\"></i> Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { LoginComponent } from './login.component';\r\nimport { ResetComponent } from './reset/reset.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: LayoutComponent,\r\n    children: [\r\n      { path: '', component: LoginComponent },\r\n      { path: 'reset', component: ResetComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { LoginComponent } from './login.component';\r\nimport { ResetComponent } from './reset/reset.component';\r\nimport { LoaderModule } from '../modules/shared/loader/loader.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LayoutComponent,\r\n    LoginComponent,\r\n    ResetComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AccountRoutingModule,\r\n    ReactiveFormsModule,\r\n    LoaderModule\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { first } from 'rxjs/operators';\r\nimport { ValidationService } from '../modules/shared/services/validation.service';\r\nimport { LoginService } from './login.service';\r\nimport { RootObject } from './user';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  show: boolean = false;\r\n  loader: boolean = true;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private accountService: LoginService,\r\n    public validationService: ValidationService,\r\n    private toaster: ToastrService\r\n  ) {\r\n    // redirect to home if already logged in\r\n    if (this.accountService.userValue) {\r\n      this.router.navigate(['/core']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', [Validators.required]],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.loader = false;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      this.loader = true;\r\n      return;\r\n    }\r\n    this.loading = false;\r\n\r\n    setTimeout(() => {\r\n      this.accountService.login((\"BK\" + this.f.username.value).trim(), this.f.password.value)\r\n        .pipe(first())\r\n        .subscribe(\r\n          (data: RootObject) => {\r\n            console.log(\"menudata\", data)\r\n            console.log(data.message, 'loginData')\r\n            if (data.status) {\r\n              if (data.message.indexOf(\"first\") !== -1) {\r\n                this.accountService.logout();\r\n                this.accountService.userFirstTime = data;\r\n                this.router.navigate(['/reset']);\r\n              } else {\r\n                this.router.navigate(['/core']);\r\n                this.showSuccess('Login Successful');\r\n              }\r\n              this.loader = true;\r\n            } else {\r\n              this.loader = true;\r\n              this.accountService.logout();\r\n              this.loading = false;\r\n              this.showError('Please Enter Valid credentials');\r\n            }\r\n          });\r\n    }, 2000);\r\n\r\n  }\r\n\r\n  password() {\r\n    this.show = !this.show;\r\n  }\r\n\r\n  showError(message) {\r\n    this.toaster.error(message, 'Login Failed', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Welcome', {\r\n      timeOut: 1000,\r\n    });\r\n  }\r\n}\r\n","<app-loader [hidden]=\"loader\"></app-loader>\r\n<img\r\n  src=\"assets/login_bg.jpg\"\r\n  alt=\"\"\r\n  style=\"width: 100vw; height: 100vh; margin-left: -551px; margin-top: -54px\"\r\n/>\r\n<div class=\"overlay\"></div>\r\n<div\r\n  class=\"card\"\r\n  style=\"\r\n    position: absolute;\r\n    top: 40%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 25%;\r\n    box-shadow: rgba(255, 255, 255, 0.1) 0px 10px 30px;\r\n    opacity: 0.95;\r\n    border: 1px;\r\n    border-radius: 10px;\r\n  \"\r\n>\r\n  <h4\r\n    class=\"card-header\"\r\n    style=\"\r\n      background-color: #156060;\r\n      color: #ffffff;\r\n      border-radius: 8px 8px 0px 0px;\r\n      font-size: medium;\r\n      padding: 6px 0px 0px 0px;\r\n    \"\r\n  >\r\n    <img\r\n      src=\"assets/bk_logo1.png\"\r\n      style=\"width: 34px; margin: 0px 20px 0px 12px\"\r\n    />\r\n    Bandhan Health Programme\r\n  </h4>\r\n  <div class=\"card-body\" style=\"padding: 0rem 1rem\">\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\"\r\n          >Username <span class=\"text-danger\">*</span></label\r\n        >\r\n\r\n        <div style=\"display: grid; grid-template-columns: 0.1fr 1fr\">\r\n          <p\r\n            style=\"\r\n              margin: 1px 0px 4px 0px;\r\n              font-weight: bold;\r\n              border-bottom: 1px solid black;\r\n              border-top: 1px solid black;\r\n              border-left: 1px solid black;\r\n              padding: 6px 7px 0px 7px;\r\n              border-radius: 5px 0px 0px 5px;\r\n            \"\r\n          >\r\n            BK\r\n          </p>\r\n          <input\r\n            style=\"display: block\"\r\n            type=\"text\"\r\n            style=\"\r\n              border-bottom: 1px solid black;\r\n              border-top: 1px solid black;\r\n              border-right: 1px solid black;\r\n              margin: 1px 7px 4px -1px;\r\n              border-radius: 0px 5px 5px 0px;\r\n            \"\r\n            (keypress)=\"validationService.onlyInteger($event)\"\r\n            formControlName=\"username\"\r\n            placeholder=\"Enter Username\"\r\n            class=\"form-control\"\r\n            [maxlength]=\"20\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\r\n          />\r\n          <div></div>\r\n          <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <br />\r\n      <div class=\"form-group\">\r\n        <label for=\"password\"\r\n          >Password <span class=\"text-danger\">*</span></label\r\n        >\r\n        <div style=\"display: grid; grid-template-columns: 5fr -0.1fr\">\r\n          <input\r\n            [type]=\"show ? 'text' : 'password'\"\r\n            style=\"border: 1px solid black\"\r\n            formControlName=\"password\"\r\n            placeholder=\"Enter password\"\r\n            class=\"form-control\"\r\n            [maxlength]=\"20\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n          />\r\n          <div style=\"margin: -26px 0px 0px 255px; z-index: 99999\">\r\n            <div *ngIf=\"show; else elseblock\">\r\n              <i class=\"fa fa-eye\" (click)=\"password()\" *ngIf=\"show\"></i>\r\n            </div>\r\n            <ng-template #elseblock\r\n              ><i class=\"fa fa-eye-slash\" (click)=\"password()\"></i\r\n            ></ng-template>\r\n          </div>\r\n          <div></div>\r\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.password.errors.required\" style=\"margin-left: 41px\">\r\n              Password is required\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <button\r\n          [disabled]=\"loading\"\r\n          class=\"btn btn-primary\"\r\n          style=\"\r\n            margin-left: 50%;\r\n            margin-top: 34px;\r\n            transform: translate(-50%, -50%);\r\n            background-color: #156060;\r\n            border-color: #156060;\r\n          \"\r\n        >\r\n          <span\r\n            *ngIf=\"loading\"\r\n            class=\"spinner-border spinner-border-sm mr-1\"\r\n          ></span>\r\n          <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\r\n          Login\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}