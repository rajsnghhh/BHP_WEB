{"version":3,"sources":["./src/app/modules/admin-user/user-table-view/user-table.component.ts","./src/app/modules/admin-user/user-table-view/user-table.component.html","./src/app/modules/admin-user/admin-user.module.ts","./src/app/modules/admin-user/user-create/user-create-form.component.ts","./src/app/modules/admin-user/user-create/user-create-form.component.html","./src/app/modules/admin-user/admin-user-routing.module.ts"],"names":[],"mappings":"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","file":"modules-admin-user-admin-user-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaselineSurveyService } from '../../baseline-survey/baseline-survey.service';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ConfirmationDialogService } from '../../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { SidebarService } from '../../shared/sidebar/sidebar.service';\r\nimport { UserCreateFormComponent } from '../user-create/user-create-form.component';\r\n\r\n@Component({\r\n  selector: 'app-user-table',\r\n  templateUrl: './user-table.component.html',\r\n  styleUrls: ['./user-table.component.css']\r\n})\r\nexport class UserTableComponent implements OnInit {\r\n  userForm: FormGroup;\r\n  regionList: Array<any> = [];\r\n  branchList: Array<any> = [];\r\n  userList: Array<any> = [];\r\n  regionId: any;\r\n  branchId: any;\r\n  loader: boolean = true;\r\n  createAccess: boolean;\r\n  updateAccess: boolean;\r\n  deleteAccess: boolean;\r\n\r\n  constructor(public dialog: MatDialog, private fb: FormBuilder, private httpService: HttpService,\r\n    private http: HttpClient, private baselineService: BaselineSurveyService, private toaster: ToastrService,\r\n    private confirmationDialogService: ConfirmationDialogService, private sidebarService: SidebarService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}user/getListOfAllRegions`, Dto).subscribe((res: any) => {\r\n      this.regionList = res.responseObject;\r\n    });\r\n\r\n    this.createAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'System Administration')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 1)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'create')?.accessType ? true : false;\r\n\r\n    this.updateAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'System Administration')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 1)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'update')?.accessType ? true : false;\r\n\r\n    this.deleteAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'System Administration')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 1)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'delete')?.accessType ? true : false;\r\n  }\r\n\r\n  openCreateUser() {\r\n    const dialogRef = this.dialog.open(UserCreateFormComponent, {\r\n      width: '1000px',\r\n      height: '550px',\r\n      data: {\r\n        createMode: true,\r\n        regionList: this.regionList\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getUserList(this.branchId, this.regionId);\r\n    });\r\n  }\r\n\r\n  openEditUser(i) {\r\n    const dialogRef = this.dialog.open(UserCreateFormComponent, {\r\n      width: '1000px',\r\n      height: '550px',\r\n      data: {\r\n        createMode: false,\r\n        regionList: this.regionList,\r\n        branchList: this.branchList,\r\n        userData: this.userList[i]\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getUserList(this.branchId, this.regionId);\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.userForm = this.fb.group({\r\n      region: ['', Validators.required],\r\n      branch: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.userForm.controls;\r\n  }\r\n\r\n  changeRegion(region) {\r\n    this.regionId = this.regionList.find((reg) => reg.regionName == region)?.regionMasterId;\r\n    let req = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      regionId: this.regionId,\r\n    };\r\n    this.baselineService.listOfBranchesOfARegion(req).subscribe(\r\n      (res) => {\r\n        this.branchList = res?.responseObject;\r\n      },\r\n      (error) => {\r\n        this.branchList = null;\r\n      }\r\n    );\r\n    if (this.userForm.value.region == '') {\r\n      this.branchList = [];\r\n    }\r\n  }\r\n  changeBranch(value) {\r\n    this.branchId = this.branchList?.find(branch => branch.branchName == value)?.branchId;\r\n    this.getUserList(this.branchId, this.regionId);\r\n  }\r\n\r\n  getUserList(branchId: any, regionId: any) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      branchId: branchId,\r\n      regionMasterId: regionId\r\n    }\r\n    this.loader = false;\r\n    if (branchId != undefined || regionId != undefined) {\r\n      this.http.post(`${this.httpService.baseURL}user/getListOfAllBranchAndRegionWiseUsers`, Dto).subscribe((res: any) => {\r\n        this.userList = res.responseObject?.branchWiseUserList.concat(res.responseObject?.regionWiseUserList);\r\n        console.log(this.userList);\r\n        this.loader = true;\r\n      }, error => {\r\n        this.showError('Error');\r\n        this.loader = true;\r\n      })\r\n    } else {\r\n      this.loader = true;\r\n    }\r\n\r\n  }\r\n\r\n  resetPasswords(i) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      userId: this.userList[i].userId,\r\n    }\r\n    this.confirmationDialogService.confirm('', 'Do you want to reset password ?').then(() => {\r\n      this.http.post(`${this.httpService.baseURL}user/resteUserLoginPassword`, Dto).subscribe((res) => {\r\n        this.resetPwSuccess('Success');\r\n      })\r\n    }).catch(() => '');\r\n  }\r\n\r\n  deleteUser(i) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      userId: this.userList[i].userId,\r\n    }\r\n    this.confirmationDialogService.confirm('', 'Do you want to delete ?').then(() => {\r\n      this.http.post(`${this.httpService.baseURL}user/deleteUser`, Dto).subscribe((res: any) => {\r\n        if (this.userList[i].activeHouseholdCount == 0 && this.userList[i].activeSsCount == 0) {\r\n          this.showSuccess('Success');\r\n          this.getUserList(this.branchId, this.regionId);\r\n        } else {\r\n          this.showError('User mapped with Household / SS')\r\n        }\r\n      })\r\n    }).catch(() => '');\r\n  }\r\n\r\n  deactivateUser(i) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      userId: this.userList[i].userId,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}user/deactivateUser`, Dto).subscribe((res: any) => {\r\n      this.getUserList(this.branchId, this.regionId);\r\n    });\r\n  }\r\n\r\n  activateUser(i) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      userId: this.userList[i].userId,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}user/activateUser`, Dto).subscribe((res: any) => {\r\n      this.getUserList(this.branchId, this.regionId);\r\n    });\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'User Deleted', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  resetPwSuccess(message) {\r\n    this.toaster.success(message, 'Password Reset Successs', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n}\r\n","<app-loader [hidden]=\"loader\"></app-loader>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"white_box QA_section mb_30\">\r\n        <div id=\"header-fixed\" style=\"display: flex\">\r\n          <h2 class=\"page-title\">User</h2>\r\n        </div>\r\n\r\n        <div class=\"add_button\" *ngIf=\"createAccess\">\r\n          <button class=\"btn btn-primary\" (click)=\"openCreateUser()\">\r\n            <i class=\"fa fa-address-card-o\" ></i>Create User\r\n          </button>\r\n        </div>\r\n\r\n        <br>\r\n\r\n        <form class=\"form-signin\" [formGroup]=\"userForm\">\r\n          <div class=\"row\">\r\n            <div class=\"form-group col-md\">\r\n              <label for=\"region\"\r\n                >Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n              >\r\n              <select\r\n                class=\"form-select\"\r\n                (change)=\"changeRegion($event.target.value)\"\r\n                formControlName=\"region\"\r\n                [ngClass]=\"{\r\n                  'is-invalid': f.region.invalid && f.region.touched,\r\n                  'is-valid': f.region.valid && (f.region.dirty || f.region.touched)\r\n                }\"\r\n              >\r\n                <option value=\"\">-- Select Region --</option>\r\n                <option *ngFor=\"let region of regionList\">\r\n                  {{region.regionName}}\r\n                </option>\r\n              </select>\r\n              <div *ngIf=\"f.region.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.region.errors.required\">\r\n                  Region selection is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n      \r\n            <div class=\"form-group col-md\">\r\n              <label for=\"branch\"\r\n                >Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n              >\r\n              <select\r\n                class=\"form-select\"\r\n                (change)=\"changeBranch($event.target.value)\"\r\n                formControlName=\"branch\"\r\n                id=\"branch\"\r\n                [ngClass]=\"{\r\n                  'is-invalid': f.branch.invalid && f.branch.touched,\r\n                  'is-valid': f.branch.valid && (f.branch.dirty || f.branch.touched)\r\n                }\"\r\n              >\r\n                <option value=\"\">-- Select Branch --</option>\r\n                <option *ngFor=\"let branch of branchList\" >\r\n                  {{ branch.branchName }}\r\n                </option>\r\n              </select>\r\n              <div *ngIf=\"f.branch.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.branch.errors.required\">\r\n                  Branch selection is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <div class=\"white_box_tittle list_header\" >\r\n          <div class=\"QA_table \">\r\n              <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\r\n                  <table\r\n                      class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\r\n                      role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\r\n      \r\n                      <thead>\r\n                          <tr>\r\n                              <th>SL No</th>\r\n                              <th>Name</th>\r\n                              <th>Login Id</th>\r\n                              <th>Mobile No</th>\r\n                              <th>Role</th>\r\n                              <th>Action</th>\r\n                          </tr>\r\n                      </thead>\r\n      \r\n                      <tbody>\r\n      \r\n                          <tr *ngFor=\"let item of userList;index as i\">\r\n                              <td>{{i+1}}</td>\r\n                              <td>{{item.userFirstName}}  {{item.userMiddleName}}  {{item.userLastName}}</td>\r\n                              <td>{{item.loginId}}</td>\r\n                              <td>{{item.mobileNumber}}</td>\r\n                              <td>{{item.roleShortName}}</td>\r\n                              <td style=\"padding: 0px 0px 0px 32px;\">\r\n                                  <i class=\"fas fa-edit\" title=\"Edit User\" *ngIf=\"updateAccess\" (click)=\"openEditUser(i)\"></i>\r\n                                  <span class=\"fa-passwd-reset fa-stack\" title=\"Reset Password\" (click)=\"resetPasswords(i)\">\r\n                                    <i class=\"fa fa-undo fa-stack-2x\"></i>\r\n                                    <i class=\"fa fa-lock fa-stack-1x\"></i>\r\n                                  </span> &nbsp;\r\n                                  <i class=\"fas fa-trash\" title=\"Delete User\" *ngIf=\"deleteAccess\" (click)=\"deleteUser(i)\"></i>\r\n                                  <i *ngIf=\"item.userActiveFlag == 'Y'\" class=\"fa fa-unlock fa-lg\" title=\"Want to deactivate ?\" (click)=\"deactivateUser(i)\"></i>\r\n                                  <i *ngIf=\"item.userActiveFlag == 'N'\" class=\"fa fa-lock fa-lg activate\" title=\"Want to activate ?\" (click)=\"activateUser(i)\"></i>\r\n                              </td>\r\n                          </tr>\r\n                      </tbody>\r\n                  </table>\r\n              </div>\r\n          </div>\r\n      </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdminUserRoutingModule } from './admin-user-routing.module';\r\nimport { UserCreateFormComponent } from './user-create/user-create-form.component';\r\nimport { UserTableComponent } from './user-table-view/user-table.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { LoaderModule } from '../shared/loader/loader.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserTableComponent, UserCreateFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AdminUserRoutingModule, ReactiveFormsModule, FormsModule,\r\n    MatTabsModule, MatNativeDateModule, MatDialogModule, LoaderModule,\r\n    NgMultiSelectDropDownModule.forRoot()\r\n  ],\r\n  schemas: [NO_ERRORS_SCHEMA],\r\n})\r\nexport class AdminUserModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { AfterViewChecked, AfterViewInit, Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaselineSurveyService } from '../../baseline-survey/baseline-survey.service';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ValidationService } from '../../shared/services/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-user-create-form',\r\n  templateUrl: './user-create-form.component.html',\r\n  styleUrls: ['./user-create-form.component.css']\r\n})\r\nexport class UserCreateFormComponent implements OnInit {\r\n  userForm: FormGroup;\r\n\r\n\r\n  selectMultiRegion: boolean;\r\n  selectSingleRegion: boolean;\r\n  selectSingleBranch: boolean;\r\n  selectBaseBranch: Boolean;\r\n  regionId: any;\r\n  roleMasterId: any;\r\n  currentBranchId: any;\r\n  regionList: Array<any> = [];\r\n  branchList: Array<any> = [];\r\n  roleList: Array<any> = [];\r\n  dropdownSettings: IDropdownSettings = {};\r\n  region: Array<any> = [];\r\n  branch: Array<any> = [];\r\n  disableMultiRegion: boolean;\r\n  // branchVillageMapId: any;\r\n  regionMultiId: Array<any> = [];\r\n  // baseBranchList: Array<any> = [];\r\n\r\n  constructor(@Optional() public dialogRef: MatDialogRef<UserCreateFormComponent>, public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private toaster: ToastrService, private fb: FormBuilder,\r\n    public validationService: ValidationService, private modalService: NgbModal, private httpService: HttpService,\r\n    private http: HttpClient, private baselineService: BaselineSurveyService,\r\n  ) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data, 'Edit')\r\n    this.createForm();\r\n    this.regionList = this.data.regionList;\r\n\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}user/getListOfAllRoles`, Dto).subscribe((res: any) => {\r\n      this.roleList = res.responseObject;\r\n    });\r\n\r\n    if (this.data.createMode) {\r\n      this.userForm.reset();\r\n      this.userForm.get('userRole').enable();\r\n      this.disableMultiRegion = false;\r\n      this.userForm.get('region').enable();\r\n      this.userForm.get('branch').enable();\r\n      this.userForm.get('baseBranch').enable();\r\n    } else {\r\n      if (this.data.userData.activeHouseholdCount == 0 && this.data.userData.activeSsCount == 0) {\r\n        this.userForm.get('userRole').enable();\r\n        this.disableMultiRegion = false;\r\n        this.userForm.get('region').enable();\r\n        this.userForm.get('branch').enable();\r\n        this.userForm.get('baseBranch').enable();\r\n      } else {\r\n        this.userForm.get('userRole').disable();\r\n        this.disableMultiRegion = true;\r\n        this.userForm.get('region').disable();\r\n        this.userForm.get('branch').disable();\r\n        this.userForm.get('baseBranch').disable();\r\n      }\r\n\r\n      let Dto = {\r\n        dataAccessDTO: this.httpService.dataAccessDTO,\r\n        userId: this.data.userData.userId\r\n      }\r\n      this.http.post(`${this.httpService.baseURL}user/getUserDetails`, Dto).subscribe((res: any) => {\r\n        // this.branchVillageMapId = res.responseObject.branchList[0].branchName;\r\n        // this.branchList = this.data.branchList;\r\n        this.changeRole(this.data.userData.roleShortName);\r\n\r\n        let value = (res.responseObject.regionList.filter(item => item.regionMasterId))\r\n        value.forEach(e => {\r\n          let data = e.regionMasterId.toString()\r\n          this.regionMultiId.push(data);\r\n        });\r\n        if (res.responseObject.roleShortName.indexOf('HCO') == -1 && res.responseObject.roleShortName.indexOf('AC') == -1) {\r\n          this.getBaseBranch(this.regionMultiId);\r\n        }\r\n        else {\r\n          this.changeRegion(res.responseObject.regionList[0]?.regionName);\r\n        }\r\n\r\n\r\n        // this.changeBranch(res.responseObject.branchList[0]?.branchName);\r\n        this.userForm.patchValue({\r\n          userRole: res.responseObject.roleShortName,\r\n          multiRegion: res.responseObject?.regionList,\r\n          region: res.responseObject.regionList[0]?.regionName,\r\n          branch: res.responseObject.branchList[0]?.branchId,\r\n          baseBranch: res.responseObject?.currentBranchId,\r\n          firstName: res.responseObject.userFirstName,\r\n          middleName: res.responseObject.userMiddleName,\r\n          lastName: res.responseObject.userLastName,\r\n          loginId: res.responseObject.loginId.slice(2),\r\n          primaryMobile: res.responseObject.mobileNumber,\r\n          secondaryMobile: res.responseObject.mobileNumberSecondary,\r\n          primaryEmail: res.responseObject.email.trim(),\r\n          secondaryEmail: res?.responseObject?.emailSecondary?.trim(),\r\n        });\r\n        this.userForm.get('baseBranch').patchValue(res.responseObject?.currentBranchId);\r\n        // console.log(res.responseObject.branchList[0]?.branchName)\r\n      });\r\n\r\n    }\r\n\r\n    this.dropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'regionMasterId',\r\n      textField: 'regionName',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      allowSearchFilter: true,\r\n      itemsShowLimit: 3,\r\n    };\r\n  }\r\n\r\n\r\n  createForm() {\r\n    this.userForm = this.fb.group({\r\n      userRole: [null, Validators.required],\r\n      multiRegion: [''],\r\n      region: [null],\r\n      branch: [null],\r\n      baseBranch: [null],\r\n      firstName: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      middleName: ['', Validators.compose([Validators.minLength(3)])],\r\n      lastName: ['', Validators.compose([Validators.minLength(3)])],\r\n      loginId: ['', Validators.required],\r\n      primaryMobile: ['', Validators.compose([Validators.required, Validators.minLength(10), Validators.pattern(\"[6789][0-9]{9}\")])],\r\n      secondaryMobile: ['', Validators.compose([Validators.minLength(10), Validators.pattern(\"[6789][0-9]{9}\")])],\r\n      primaryEmail: ['', [Validators.required, Validators.email]],\r\n      secondaryEmail: ['', Validators.email],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.userForm.controls;\r\n  }\r\n\r\n  changeRole(value) {\r\n    this.roleMasterId = this.roleList.find(role => role.roleShortName == value)?.roleMasterId;\r\n    if (value?.indexOf('HCO') != -1) {\r\n      this.selectMultiRegion = false;\r\n      this.selectSingleRegion = true;\r\n      this.selectSingleBranch = true;\r\n      this.selectBaseBranch = false;\r\n      this.userForm.get('region').setValidators(Validators.required);\r\n      this.userForm.get('branch').setValidators(Validators.required);\r\n      this.userForm.get('multiRegion').clearAsyncValidators();\r\n      this.userForm.controls.region.setValue(null);\r\n      this.userForm.controls.branch.setValue(null);\r\n    } else if (value == 'AC') {\r\n      this.selectMultiRegion = false;\r\n      this.selectSingleRegion = true;\r\n      this.selectSingleBranch = false;\r\n      this.selectBaseBranch = true;\r\n      this.userForm.get('region').setValidators(Validators.required);\r\n      this.userForm.get('branch').clearAsyncValidators();\r\n      this.userForm.get('multiRegion').clearAsyncValidators();\r\n      this.userForm.controls.region.setValue(null);\r\n    } else {\r\n      this.selectMultiRegion = true;\r\n      this.selectSingleRegion = false;\r\n      this.selectSingleBranch = false;\r\n      this.selectBaseBranch = true;\r\n      this.userForm.get('multiRegion').setValidators(Validators.required);\r\n      this.userForm.get('branch').clearAsyncValidators();\r\n      this.userForm.get('region').clearAsyncValidators();\r\n      this.userForm.controls.baseBranch.setValue(null);\r\n    }\r\n    // this.userForm.controls.region.setValue(null);\r\n    // this.userForm.controls.branch.setValue(null);\r\n    // this.userForm.controls.baseBranch.setValue(null);\r\n    this.branchList = [];\r\n  }\r\n\r\n  onDeSelect(i) {\r\n    this.regionMultiId = [];\r\n    let value = (this.userForm.value.multiRegion.filter(item => item.regionMasterId))\r\n    value.forEach(e => {\r\n      let data = e.regionMasterId.toString()\r\n      this.regionMultiId.push(data);\r\n    });\r\n    this.getBaseBranch(this.regionMultiId);\r\n  }\r\n\r\n  onItemSelect(i) {\r\n    this.regionMultiId = [];\r\n    let value = (this.userForm.value.multiRegion.filter(item => item.regionMasterId))\r\n    value.forEach(e => {\r\n      let data = e.regionMasterId.toString()\r\n      this.regionMultiId.push(data);\r\n    });\r\n\r\n    this.getBaseBranch(this.regionMultiId);\r\n  }\r\n\r\n  getBaseBranch(regionMultiId) {\r\n    console.log(this.regionMultiId);\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      regionId: regionMultiId\r\n    }\r\n    if (this.regionMultiId.length != 0) {\r\n      this.http.post(`${this.httpService.baseURL}branch/getListOfBranchesOfMultiRegion`, Dto).subscribe((res: any) => {\r\n        this.branchList = res?.responseObject;\r\n      })\r\n    }\r\n  }\r\n\r\n  changeRegion(region) {\r\n    this.regionId = this.regionList.find((reg) => reg.regionName == region)?.regionMasterId;\r\n    this.region = [{ 'regionMasterId': this.regionId }]\r\n    let req = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      regionId: this.regionId,\r\n    };\r\n    this.baselineService.listOfBranchesOfARegion(req).subscribe(\r\n      (res) => {\r\n        this.branchList = res?.responseObject;\r\n      },\r\n      (error) => {\r\n        this.branchList = null;\r\n      }\r\n    );\r\n    if (this.userForm.value.region == '') {\r\n      this.branchList = [];\r\n    }\r\n  }\r\n  changeBranch(value) {\r\n    this.currentBranchId = value;\r\n    this.branch = [{ 'branchId': this.currentBranchId }]\r\n  }\r\n\r\n  changeBaseBranch(value) {\r\n    this.currentBranchId = value;\r\n  }\r\n\r\n  onSave() {\r\n    console.log(this.userForm);\r\n    if (this.userForm.value.multiRegion != null) {\r\n      this.userForm.value.multiRegion.forEach(x => delete x.regionName);\r\n    }\r\n    // this.changeBranch(this.userForm.value.branch);\r\n    this.userForm.markAllAsTouched();\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      userId: this.data.createMode ? 0 : this.data.userData.userId,\r\n      userFirstName: this.userForm.value.firstName ? this.validationService.camelize(this.userForm.value.firstName.trim()) : null,\r\n      userMiddleName: this.userForm.value.middleName ? this.validationService.camelize(this.userForm.value.middleName.trim()) : null,\r\n      userLastName: this.userForm.value.lastName ? this.validationService.camelize(this.userForm.value.lastName.trim()) : null,\r\n      loginId: 'BK' + this.userForm.value.loginId,\r\n      email: this.userForm.value.primaryEmail,\r\n      emailSecondary: this.userForm.value.secondaryEmail,\r\n      mobileNumber: this.userForm.value.primaryMobile,\r\n      mobileNumberSecondary: this.userForm.value.secondaryMobile,\r\n      currentBranchId: (this.data.userData.roleShortName?.indexOf('HCO') != -1) ? this.data.userData.currentBranchId : this.userForm.value.branch || this.userForm.value.baseBranch,\r\n      roleShortName: (this.data.userData.roleShortName?.indexOf('HCO') != -1) ? this.data.userData.roleShortName : this.userForm.value.userRole,\r\n      roleMasterId: this.roleList.find(role => role.roleShortName == ((this.data.userData.roleShortName?.indexOf('HCO') != -1) ? this.data.userData.roleShortName : this.userForm.value.userRole))?.roleMasterId,\r\n      branchList: (this.userForm.value.userRole?.indexOf('HCO') != -1) ?\r\n        this.branch : null,\r\n      regionList: (this.userForm.value.userRole?.indexOf('HCO') != -1 || this.userForm.value.userRole?.indexOf('AC') != -1) ?\r\n        this.region : this.userForm.value.multiRegion\r\n    }\r\n    console.log(Dto);\r\n    if (this.userForm.valid) {\r\n      this.http.post(`${this.httpService.baseURL}user/saveOrUpdate`, Dto).subscribe((res: any) => {\r\n        if (res.status) {\r\n          this.showSuccess('Success');\r\n          this.dialogRef.close();\r\n        } else {\r\n          this.showError('Error');\r\n        }\r\n      });\r\n    } else {\r\n      this.showError('User Form is not valid ')\r\n    }\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'New User Created', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n","<h1 mat-dialog-title>\r\n  <div class=\"dialog-header\">\r\n    <h2 class=\"dialog-title\">Create User</h2>\r\n    <div><i class=\"fas fa-times\" (click)=\"closeDialog()\"></i></div>\r\n  </div>\r\n</h1>\r\n\r\n<div mat-dialog-content>\r\n  <form class=\"form-signin\" [formGroup]=\"userForm\">\r\n    <div class=\"row\">\r\n      <div class=\"form-group col-md-4\">\r\n        <label for=\"userRole\"\r\n          >Role:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <select\r\n          class=\"form-select\"\r\n          formControlName=\"userRole\"\r\n          (change)=\"changeRole($event.target.value)\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.userRole.invalid && f.userRole.touched,\r\n            'is-valid':\r\n              f.userRole.valid && (f.userRole.dirty || f.userRole.touched)\r\n          }\"\r\n        >\r\n          <option [value]=\"null\">-- Select Role --</option>\r\n          <option *ngFor=\"let role of roleList\" [value]=\"role.roleShortName\">\r\n            {{role.roleShortName}}\r\n          </option>\r\n        </select>\r\n        <div *ngIf=\"f.userRole.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.userRole.errors.required\">Role is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\" *ngIf=\"selectMultiRegion\">\r\n        <!-- <button class=\"btn btn-link\" (click)=\"createModal(selectRegion)\"> \r\n       +&nbsp;Select&nbsp;Region&nbsp;<span class=\"text-danger\">*&nbsp;</span>\r\n      </button> -->\r\n      <label for=\"multiRegion\"\r\n          >Select Multiple Region&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <ng-multiselect-dropdown\r\n          [placeholder]=\"'Select Multiple Region'\"\r\n          [settings]=\"dropdownSettings\"\r\n          [data]=\"regionList\"\r\n          [disabled]=\"disableMultiRegion\"\r\n          formControlName=\"multiRegion\"\r\n          (onSelect)=\"onItemSelect($event)\"\r\n          (onDeSelect)=\"onDeSelect($event)\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.multiRegion.invalid && f.multiRegion.touched,\r\n            'is-valid': f.multiRegion.valid && (f.multiRegion.dirty || f.multiRegion.touched)\r\n          }\"\r\n        >\r\n        </ng-multiselect-dropdown>\r\n        <div *ngIf=\"f.multiRegion.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.multiRegion.errors.required\">\r\n            Region selection is required\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <ng-template #selectRegion let-modal>\r\n\r\n      <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n  \r\n              <div class=\"row\">\r\n                  <div class=\"col-md-7\">\r\n                      <h3 class=\"modal-title\" id=\"modal-basic-title\">Select Region</h3>\r\n                  </div>\r\n  \r\n                  <div class=\"col-md-2\">\r\n                      <span class=\"close\" (click)=\"selectRegionModalDismiss()\"\r\n                          style=\"cursor: pointer;font-size: 35px;\">&times;</span>\r\n                  </div>\r\n              </div>\r\n  \r\n          </div>\r\n  \r\n          <div class=\"modal-body\">\r\n            <div class=\"form-check\" *ngFor=\"let item of items\">\r\n              <label class=\"checkbox-inline\">\r\n                <input type=\"checkbox\" formControlName=\"selectRegion\" class=\"form-check\"\r\n                (change)=\"getSelectedValue(item.name)\" > &nbsp;{{item.name}}\r\n              </label>\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </ng-template> -->\r\n\r\n      <div class=\"form-group col-md\" *ngIf=\"selectSingleRegion\">\r\n        <label for=\"region\"\r\n          >Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <select\r\n          class=\"form-select\"\r\n          (change)=\"changeRegion($event.target.value)\"\r\n          formControlName=\"region\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.region.invalid && f.region.touched,\r\n            'is-valid': f.region.valid && (f.region.dirty || f.region.touched)\r\n          }\"\r\n        >\r\n          <option [value]=\"null\">-- Select Region --</option>\r\n          <option *ngFor=\"let region of regionList\" [value]=\"region.regionName\">\r\n            {{region.regionName}}\r\n          </option>\r\n        </select>\r\n        <div *ngIf=\"f.region.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.region.errors.required\">\r\n            Region selection is required\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\" *ngIf=\"selectSingleBranch\">\r\n        <label for=\"branch\"\r\n          >Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <select\r\n          class=\"form-select\"\r\n          (change)=\"changeBranch($event.target.value)\"\r\n          formControlName=\"branch\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.branch.invalid && f.branch.touched,\r\n            'is-valid': f.branch.valid && (f.branch.dirty || f.branch.touched)\r\n          }\"\r\n        >\r\n          <option [value]=\"null\">-- Select Branch --</option>\r\n          <option *ngFor=\"let branch of branchList\" [value]=\"branch.branchId\">\r\n            {{ branch.branchName }}\r\n          </option>\r\n        </select>\r\n        <div *ngIf=\"f.branch.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.branch.errors.required\">\r\n            Branch selection is required\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\" *ngIf=\"selectBaseBranch\">\r\n        <label for=\"baseBranch\"\r\n          >Base Branch :</label\r\n        >\r\n        <select\r\n          class=\"form-select\"\r\n          (change)=\"changeBaseBranch($event.target.value)\"\r\n          formControlName=\"baseBranch\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.baseBranch.invalid && f.baseBranch.touched,\r\n            'is-valid': f.baseBranch.valid && (f.baseBranch.dirty || f.baseBranch.touched)\r\n          }\"\r\n        >\r\n        <option [value]=\"null\">-- Select Branch --</option>\r\n        <option *ngFor=\"let baseBranch of branchList\" [value]=\"baseBranch.branchId\">\r\n          {{ baseBranch.branchName }}\r\n        </option>\r\n        </select>\r\n        <div *ngIf=\"f.branch.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.branch.errors.required\">\r\n            Branch selection is required\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"firstName\"\r\n          >First Name:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter First Name\"\r\n          formControlName=\"firstName\"\r\n          maxlength=\"20\"\r\n          (keypress)=\"validationService.onlyAlphabets($event)\"\r\n          style=\"text-transform: capitalize\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.firstName.invalid && f.firstName.touched,\r\n            'is-valid':\r\n              f.firstName.valid && (f.firstName.dirty || f.firstName.touched)\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.firstName.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n          <div *ngIf=\"f.firstName.errors.minlength\">\r\n            Minimum length should be 3\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"middleName\">Middle Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          maxlength=\"20\"\r\n          (keypress)=\"validationService.onlyAlphabets($event)\"\r\n          style=\"text-transform: capitalize\"\r\n          placeholder=\"Enter Middle Name\"\r\n          formControlName=\"middleName\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.middleName.invalid && f.middleName.touched\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.middleName.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.middleName.errors.minlength\">\r\n            Minimum length should be 3\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"lastName\">Last Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          maxlength=\"20\"\r\n          (keypress)=\"validationService.onlyAlphabets($event)\"\r\n          style=\"text-transform: capitalize\"\r\n          placeholder=\"Enter Last Name\"\r\n          formControlName=\"lastName\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.lastName.invalid && f.lastName.touched\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.lastName.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.lastName.errors.minlength\">\r\n            Minimum length should be 3\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <br />\r\n    <div class=\"row\">\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"loginId\"\r\n          >Login ID / Employee ID:&nbsp;<span class=\"text-danger\"\r\n            >*&nbsp;</span\r\n          ></label\r\n        >\r\n        <div class=\"loginId\" style=\"display: grid; grid-template-columns: 0.1fr 1fr\">\r\n          <p>\r\n            BK\r\n          </p>\r\n          <input\r\n            style=\"display: block\"\r\n            type=\"text\"\r\n            (keypress)=\"validationService.onlyInteger($event)\"\r\n            formControlName=\"loginId\"\r\n            placeholder=\"Enter Username\"\r\n            class=\"form-control\"\r\n            [maxlength]=\"6\"\r\n            [ngClass]=\"{\r\n              'is-invalid': f.loginId.invalid && f.loginId.touched,\r\n              'is-valid':\r\n                f.loginId.valid && (f.loginId.dirty || f.loginId.touched)\r\n            }\"\r\n          />\r\n          <div></div>\r\n          <div *ngIf=\"f.loginId.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.loginId.errors.required\">\r\n              Login ID / Employee ID is required\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"primaryMobile\"\r\n          >Primary Mobile No:&nbsp;<span class=\"text-danger\"\r\n            >*&nbsp;</span\r\n          ></label\r\n        >\r\n        <input\r\n          type=\"\"\r\n          class=\"form-control\"\r\n          maxlength=\"10\"\r\n          (keypress)=\"validationService.onlyInteger($event)\"\r\n          placeholder=\"Enter Mobile No\"\r\n          formControlName=\"primaryMobile\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.primaryMobile.invalid && f.primaryMobile.touched,\r\n            'is-valid':\r\n              f.primaryMobile.valid && (f.primaryMobile.dirty || f.primaryMobile.touched)\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.primaryMobile.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.primaryMobile.errors.required\">\r\n            Primary Mobile No is required\r\n          </div>\r\n          <div *ngIf=\"f.primaryMobile.errors.minlength\">\r\n            Mobile No. should be of 10 digit\r\n          </div>\r\n          <div *ngIf=\"f.primaryMobile.errors.pattern\">\r\n            Mobile No. should be starting with 6, 7, 8 or 9\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"secondaryMobile\">Secondary Mobile No:</label>\r\n        <input\r\n          type=\"\"\r\n          class=\"form-control\"\r\n          maxlength=\"10\"\r\n          (keypress)=\"validationService.onlyInteger($event)\"\r\n          placeholder=\"Enter Mobile No\"\r\n          formControlName=\"secondaryMobile\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.secondaryMobile.invalid && f.secondaryMobile.touched\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.secondaryMobile.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.secondaryMobile.errors.minlength\">\r\n            Mobile No. should be of 10 digit\r\n          </div>\r\n          <div *ngIf=\"f.secondaryMobile.errors.pattern\">\r\n            Mobile No. should be starting with 6, 7, 8 or 9\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <br />\r\n    <div class=\"row\">\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"primaryEmail\"\r\n          >Primary Email:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter Email\"\r\n          formControlName=\"primaryEmail\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.primaryEmail.invalid && f.primaryEmail.touched,\r\n            'is-valid':\r\n              f.primaryEmail.valid &&\r\n              (f.primaryEmail.dirty || f.primaryEmail.touched)\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.primaryEmail.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.primaryEmail.errors.required\">Email is required</div>\r\n          <div *ngIf=\"f.primaryEmail.errors.email\">Email is not valid</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"secondaryEmail\">Secondary Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter Email\"\r\n          formControlName=\"secondaryEmail\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.secondaryEmail.invalid && f.secondaryEmail.touched,\r\n            'is-valid':\r\n              f.secondaryEmail.valid &&\r\n              (f.secondaryEmail.dirty || f.secondaryEmail.touched)\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.secondaryEmail.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.secondaryEmail.errors.email\">Email is not valid</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSave()\">\r\n      Save\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserTableComponent } from './user-table-view/user-table.component';\r\n\r\nconst routes: Routes = [{ path: '', component: UserTableComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminUserRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}