{"version":3,"sources":["./src/app/modules/block-setup/block-setup-form/block-setup-form.component.ts","./src/app/modules/block-setup/block-setup-form/block-setup-form.component.html","./src/app/modules/block-setup/block-setup-routing.module.ts","./src/app/modules/block-setup/block-setup.module.ts","./src/app/modules/block-setup/block-home/block-home.component.ts","./src/app/modules/block-setup/block-home/block-home.component.html"],"names":[],"mappings":"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","file":"modules-block-setup-block-setup-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ValidationService } from '../../shared/services/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-block-setup-form',\r\n  templateUrl: './block-setup-form.component.html',\r\n  styleUrls: ['./block-setup-form.component.css']\r\n})\r\nexport class BlockSetupFormComponent implements OnInit {\r\n  blockForm: FormGroup;\r\n  stateList: Array<any> = [];\r\n  stateWiseDistrictList: Array<any> = [];\r\n\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpClient, private toaster: ToastrService,\r\n    private httpService: HttpService, public validationService: ValidationService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, public dialogRef: MatDialogRef<BlockSetupFormComponent>) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.blockForm.get('district').enable();\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}state/getListOfAllStates`, Dto).subscribe((res: any) => {\r\n      this.stateList = res.responseObject.stateList;\r\n    });\r\n\r\n    if (this.data.editMode == false) {\r\n      this.blockForm.get('state').enable();\r\n      this.blockForm.get('district').enable();\r\n    } else {\r\n      this.blockForm.get('state').disable();\r\n      this.blockForm.get('district').disable();\r\n      this.changeState(this.data.blockInfo.stateMasterId);\r\n      this.blockForm.patchValue({\r\n        state: this.data.blockInfo.stateMasterId,\r\n        district: this.data.blockInfo.districtMasterId,\r\n        blockName: this.data.blockInfo.blockName,\r\n        pinCode: this.data.blockInfo.pinCode,\r\n      })\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.blockForm = this.fb.group({\r\n      state: ['', Validators.required],\r\n      district: ['', Validators.required],\r\n      blockName: ['', Validators.required],\r\n      pinCode: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.blockForm.controls;\r\n  }\r\n\r\n  changeState(value) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      stateId: value\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n      this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n    });\r\n  }\r\n\r\n  onSave() {\r\n    this.blockForm.markAllAsTouched();\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      blockMasterId: this.data.editMode ? this.data.blockInfo.blockMasterId : \"0\",\r\n      districtMasterId: this.blockForm.controls.district.value,\r\n      blockName: this.validationService.camelize(this.blockForm.value.blockName.trim()),\r\n      pinCode: this.blockForm.value.pinCode,\r\n    }\r\n    if (this.blockForm.valid) {\r\n      this.http.post(`${this.httpService.baseURL}block/saveOrUpdate`, Dto).subscribe((res: any) => {\r\n        if (res.status) {\r\n          this.dialogRef.close();\r\n          this.showSuccess('Block Created');\r\n        } else {\r\n          this.showError(res.message);\r\n        }\r\n      }, error => {\r\n        this.dialogRef.close();\r\n        this.showError('Error')\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  /* Show success message toaster */\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Success', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  /* Show Error message toaster */\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n}\r\n","<h1 mat-dialog-title>\r\n  <div class=\"dialog-header\">\r\n    <h2 class=\"dialog-title\">Create New Block</h2>\r\n    <div><i class=\"fas fa-times\" (click)=\"closeDialog()\"></i></div>\r\n  </div>\r\n</h1>\r\n\r\n<div mat-dialog-content>\r\n  <form class=\"form-signin\" [formGroup]=\"blockForm\">\r\n    <div class=\"row\">\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"state\"\r\n          >State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <select\r\n          class=\"form-select\"\r\n          (change)=\"changeState($event.target.value)\"\r\n          formControlName=\"state\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.state.invalid && f.state.touched,\r\n            'is-valid': f.state.valid && (f.state.dirty || f.state.touched)\r\n          }\"\r\n        >\r\n        <option value=\"\">-- Select state --</option>\r\n        <option *ngFor=\"let state of stateList\" [value]=\"state.stateMasterId\">\r\n          {{state.stateName}}\r\n        </option>\r\n        </select>\r\n        <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.state.errors.required\">State selection is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"district\"\r\n          >District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <select\r\n          class=\"form-select\"\r\n          formControlName=\"district\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.district.invalid && f.district.touched,\r\n            'is-valid':\r\n              f.district.valid && (f.district.dirty || f.district.touched)\r\n          }\"\r\n        >\r\n        <option value=\"\">-- Select district --</option>\r\n        <option *ngFor=\"let district of stateWiseDistrictList\" [value]=\"district.districtMasterId\">\r\n          {{district.districtName}}\r\n        </option>\r\n        </select>\r\n        <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.state.errors.required\">\r\n            District selection is required\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- <br /> -->\r\n    <div class=\"row\">\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"blockName\"\r\n          >Block Name :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter Block Name\"\r\n          formControlName=\"blockName\"\r\n          style=\"text-transform: capitalize\"\r\n          spellcheck=\"false\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.blockName.invalid && f.blockName.touched,\r\n            'is-valid':\r\n              f.blockName.valid && (f.blockName.dirty || f.blockName.touched)\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.blockName.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.blockName.errors.required\">Block Name is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"pinCode\"\r\n          >Pin Code :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter Pin Code\"\r\n          formControlName=\"pinCode\"\r\n          (keypress)=\"validationService.onlyInteger($event)\"\r\n          maxlength=\"6\"\r\n          minlength=\"6\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.pinCode.invalid && f.pinCode.touched,\r\n            'is-valid':\r\n              f.pinCode.valid && (f.pinCode.dirty || f.pinCode.touched)\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.pinCode.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.pinCode.errors.required\">Pin Code is required</div>\r\n          <div *ngIf=\"f.pinCode.errors?.minlength\">Minimum 6 digit required</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n  <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSave()\">Save</button>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BlockHomeComponent } from './block-home/block-home.component';\r\n\r\nconst routes: Routes = [{ path: '', component: BlockHomeComponent },];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BlockSetupRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BlockSetupRoutingModule } from './block-setup-routing.module';\r\nimport { BlockSetupFormComponent } from './block-setup-form/block-setup-form.component';\r\nimport { BlockHomeComponent } from './block-home/block-home.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { LoaderModule } from '../shared/loader/loader.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [BlockSetupFormComponent, BlockHomeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BlockSetupRoutingModule, ReactiveFormsModule, FormsModule,\r\n    MatTabsModule, MatNativeDateModule, MatDialogModule, MatMenuModule,\r\n    MatIconModule, LoaderModule\r\n  ]\r\n})\r\nexport class BlockSetupModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ConfirmationDialogService } from '../../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { SidebarService } from '../../shared/sidebar/sidebar.service';\r\nimport { BlockSetupFormComponent } from '../block-setup-form/block-setup-form.component';\r\n\r\n@Component({\r\n  selector: 'app-block-home',\r\n  templateUrl: './block-home.component.html',\r\n  styleUrls: ['./block-home.component.css']\r\n})\r\nexport class BlockHomeComponent implements OnInit {\r\n  stateSelectForm: FormGroup;\r\n  stateList: Array<any> = [];\r\n  stateWiseDistrictList: Array<any> = [];\r\n  districtWiseBlockList: Array<any> = [];\r\n  stateId: any;\r\n  districtId: any;\r\n  loader: boolean = true;\r\n  createAccess: boolean;\r\n  updateAccess: boolean;\r\n  deleteAccess: boolean;\r\n\r\n  constructor(private fb: FormBuilder, private httpService: HttpService,\r\n    private http: HttpClient, private toaster: ToastrService,\r\n    private confirmationDialogService: ConfirmationDialogService, public dialog: MatDialog,\r\n    private sidebarService: SidebarService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}state/getListOfAllStates`, Dto).subscribe((res: any) => {\r\n      this.stateList = res.responseObject.stateList;\r\n    });\r\n\r\n    this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(item => item.subFunctionMasterId == 37 || item.subFunctionMasterId == 38 || item.subFunctionMasterId == 39 || item.subFunctionMasterId == 40)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'view')?.accessType ? this.router.navigate(['/block']) : this.router.navigate(['/error']);\r\n\r\n    this.createAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 37)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'create')?.accessType ? true : false;\r\n\r\n    this.updateAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 37)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'update')?.accessType ? true : false;\r\n\r\n    this.deleteAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 37)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'delete')?.accessType ? true : false;\r\n  }\r\n\r\n  openCreateBlock() {\r\n    const dialogRef = this.dialog.open(BlockSetupFormComponent, {\r\n      width: '500px',\r\n      height: '370px',\r\n      data: { editMode: false }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getBlockList(this.districtId);\r\n    });\r\n  }\r\n\r\n  openEditBlock(blockDetails) {\r\n    console.log(blockDetails)\r\n    const dialogRef = this.dialog.open(BlockSetupFormComponent, {\r\n      width: '530px',\r\n      height: '345px',\r\n      data: { editMode: true, blockInfo: blockDetails }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getBlockList(this.districtId);\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.stateSelectForm = this.fb.group({\r\n      state: ['', Validators.required],\r\n      district: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.stateSelectForm.controls;\r\n  }\r\n\r\n  changeState(value) {\r\n    this.stateId = value;\r\n    console.log(this.stateId)\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      stateId: this.stateId\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n      this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n    });\r\n    this.stateSelectForm.controls.district.setValue('');\r\n    if (!this.stateSelectForm.value.state) {\r\n      this.districtWiseBlockList = [];\r\n      this.stateWiseDistrictList = [];\r\n    }\r\n  }\r\n\r\n  changeDistrict(value) {\r\n    this.districtId = value\r\n    this.getBlockList(this.districtId);\r\n    if (!this.stateSelectForm.value.district) {\r\n      this.districtWiseBlockList = [];\r\n    }\r\n  }\r\n\r\n  getBlockList(districtId) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      districtMasterId: districtId\r\n    }\r\n    this.loader = false;\r\n    this.http.post(`${this.httpService.baseURL}block/getListOfAllBlock`, Dto).subscribe((res: any) => {\r\n      this.districtWiseBlockList = res.responseObject?.blockList;\r\n      this.loader = true;\r\n    }, error => {\r\n      this.showError('Error');\r\n      this.loader = true;\r\n    });\r\n  }\r\n\r\n  onDelete(blockDetails) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      blockMasterId: blockDetails.blockMasterId\r\n    }\r\n    this.confirmationDialogService.confirm('', `Do you want to delete ${blockDetails.blockName} ?`).then(() => {\r\n      this.http.post(`${this.httpService.baseURL}block/deleteBlock`, Dto).subscribe((res: any) => {\r\n        if (res.status) {\r\n          this.showSuccess(res.message);\r\n          this.getBlockList(this.districtId);\r\n        } else {\r\n          this.showError(res.message)\r\n        }\r\n      })\r\n    }).catch(() => '');\r\n  }\r\n\r\n  /* Show success message toaster */\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Success', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  /* Show Error message toaster */\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n}\r\n","<app-loader [hidden]=\"loader\"></app-loader>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"white_box QA_section mb_30\">\r\n\r\n          <div id=\"header-fixed\" style=\"display: flex;\">\r\n            <h2 class=\"page-title\">Block Setup</h2>\r\n        </div>\r\n        \r\n        <div class=\"add_button\" *ngIf=\"createAccess\">\r\n            <button class=\"btn btn-primary\" (click)=\"openCreateBlock()\">\r\n                <i class=\"fa fa-cubes\"></i>Create Block\r\n            </button>    \r\n        </div>\r\n<br>\r\n        <form class=\"form-signin\" [formGroup]=\"stateSelectForm\">\r\n            <div class=\"row\">\r\n              <div class=\"form-group col-md-4\">\r\n                <label for=\"state\"\r\n                  >State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n                >\r\n                <select\r\n                  class=\"form-select\"\r\n                  (change)=\"changeState($event.target.value)\"\r\n                  formControlName=\"state\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': f.state.invalid && f.state.touched,\r\n                    'is-valid': f.state.valid && (f.state.dirty || f.state.touched)\r\n                  }\"\r\n                >\r\n                <option value=\"\">-- Select state --</option>\r\n                <option *ngFor=\"let state of stateList\" [value]=\"state.stateMasterId\">\r\n                  {{state.stateName}}\r\n                </option>\r\n                </select>\r\n                <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.state.errors.required\">\r\n                    State selection is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group col-md-4\">\r\n                <label for=\"district\"\r\n                  >District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n                >\r\n                <select\r\n                  class=\"form-select\"\r\n                  (change)=\"changeDistrict($event.target.value)\"\r\n                  formControlName=\"district\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': f.district.invalid && f.district.touched,\r\n                    'is-valid': f.district.valid && (f.district.dirty || f.district.touched)\r\n                  }\"\r\n                >\r\n                <option value=\"\">-- Select district --</option>\r\n                <option *ngFor=\"let district of stateWiseDistrictList\" [value]=\"district.districtMasterId\">\r\n                  {{district.districtName}}\r\n                </option>\r\n                </select>\r\n                <div *ngIf=\"f.district.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.district.errors.required\">\r\n                    District selection is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </form>\r\n\r\n        <div class=\"white_box_tittle list_header\" >\r\n            <div class=\"QA_table \">\r\n                <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\r\n                    <table\r\n                        class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\r\n                        role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\r\n        \r\n                        <thead>\r\n                            <tr>\r\n                                <th>SL No</th>\r\n                                <th>State</th>\r\n                                <th>District</th>\r\n                                <th>Block Name</th>\r\n                                <th>Pin Code</th> \r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n        \r\n                        <tbody>\r\n        \r\n                            <tr *ngFor=\"let item of districtWiseBlockList;index as i\">\r\n                                <td>{{i+1}}</td>\r\n                                <td>{{item.stateName}}</td>\r\n                                <td>\r\n                                    {{item.districtName}}\r\n                                </td>\r\n                                <td>\r\n                                  {{item.blockName}}\r\n                                </td>\r\n                                <td>\r\n                                  {{item.pinCode}}\r\n                                </td>\r\n                                <td>\r\n                                    <i class=\"fas fa-edit\" title=\"Edit\" *ngIf=\"updateAccess\" (click)=\"openEditBlock(item)\"></i>\r\n                                    <i class=\"fas fa-trash\" title=\"Delete MUAC\" *ngIf=\"deleteAccess\" (click)=\"onDelete(item)\"></i>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}