{"version":3,"sources":["./src/app/modules/daily-activity-register/daily-activity-register.component.ts","./src/app/modules/daily-activity-register/daily-activity-register.component.html","./src/app/modules/daily-activity-register/daily-activity-register-routing.module.ts","./src/app/modules/daily-activity-register/daily-activity-register.service.ts","./src/app/modules/daily-activity-register/daily-activity-register.module.ts"],"names":[],"mappings":"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","file":"modules-daily-activity-register-daily-activity-register-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { ValidationService } from '../shared/services/validation.service';\nimport { SidebarService } from '../shared/sidebar/sidebar.service';\nimport { DailyActivityRegisterService } from './daily-activity-register.service';\n\n@Component({\n  selector: 'app-daily-activity-register',\n  templateUrl: './daily-activity-register.component.html',\n  styleUrls: ['./daily-activity-register.component.css']\n})\nexport class DailyActivityRegisterComponent implements OnInit {\n locationForm: FormGroup;\n regionList: Array<any> = [];\n branchList: Array<any> = [];\n villagesOfBranch: Array<any> = [];\n gpDtoList: Array<any> = [];\n villageDtoList: Array<any> = [];\n selectedBlock: String;\n selectedGp: String;\n branchVillageMapId: any;\n villageMasterId: any;\n\n\n  constructor(private fb: FormBuilder, public validationService: ValidationService, private sidebarService: SidebarService,\n    private dailyActivityService : DailyActivityRegisterService,  private toaster: ToastrService) { }\n\n  ngOnInit(): void {\n\n    this.locForm();\n    \n    let dataAccessDTO = {\n      userId: this.sidebarService.userId,\n      userName: this.sidebarService.loginId,\n    }\n\n    let Dto = {\n      dataAccessDTO: dataAccessDTO,\n      branchId: this.sidebarService.branchId\n    }\n\n\n    setTimeout(() => {\n      if (this.sidebarService.RoleDTOName.indexOf('HCO') != -1 || this.sidebarService.RoleDTOName.indexOf('TL') != -1) {\n        this.dailyActivityService.villagesOfBranch(Dto).subscribe((res) => {\n          if (res.sessionDTO.status == true) {\n            this.villagesOfBranch = res.responseObject;\n            console.log(this.villagesOfBranch, 'villagesOfBranch1');\n          }\n        })\n      }\n    }, 1000);\n\n\n    this.regionList = this.sidebarService.listOfRegion;\n    // this.regionBranchHide = this.sidebarService.regionBranchHide;\n  }\n\n  \n  changeRegion(region) {\n    let regionId = this.regionList.find(\n      (reg) => reg.regionName == region\n    )?.regionMasterId;\n    let req = {\n      dataAccessDTO: {\n        userId: this.sidebarService?.userId,\n        userName: this.sidebarService?.loginId,\n      },\n      regionId: regionId,\n    };\n    // this.loader = false;\n    setTimeout(() => {\n      this.dailyActivityService.listOfBranchesOfARegion(req).subscribe(\n        (res) => {\n          // this.loader = true;\n          this.branchList = res?.responseObject;\n        },\n        (error) => {\n          // this.loader = true;\n          this.branchList = null;\n        }\n      );\n    }, 500);\n    this.locationForm.controls.branch.setValue('');\n    this.locationForm.controls.block.setValue('');\n    this.locationForm.controls.gp.setValue('');\n    this.locationForm.controls.gram.setValue('');\n\n    if (this.locationForm.value.region == '') {\n      this.showError('No Data Found');\n      // this.pemDetails = [];\n      this.villageDtoList = [];\n      this.villagesOfBranch = [];\n      this.gpDtoList = [];\n    }\n  }\n\n  changeBranch(branch) {\n    this.sidebarService.branchId = this.branchList?.find(bran => bran.branchName == branch)?.branchId;\n    this.sidebarService.branchName = this.locationForm.get('branch').value\n    let Dto = {\n      dataAccessDTO: {\n        userId: this.sidebarService.userId,\n        userName: this.sidebarService.loginId,\n      },\n      branchId: this.sidebarService.branchId\n    }\n    // this.loader = false;\n    setTimeout(() => {\n      this.dailyActivityService.villagesOfBranch(Dto).subscribe((res) => {\n        // this.loader = true;\n        this.villagesOfBranch = res.responseObject;\n        console.log(this.villagesOfBranch, 'villagesOfBranch2');\n      })\n    }, 500);\n    this.locationForm.controls.block.setValue('');\n    this.locationForm.controls.gp.setValue('');\n    this.locationForm.controls.gram.setValue('');\n\n    if (this.locationForm.value.branch == '') {\n      this.showError('No Data Found');\n      // this.pemDetails = [];\n      this.villageDtoList = [];\n      this.villagesOfBranch = [];\n      this.gpDtoList = [];\n    }\n  }\n  changeBlock(blockname) {\n    this.gpDtoList = this.villagesOfBranch.find(block => block.blockName == blockname)?.gpDtoList;\n    this.selectedBlock = this.locationForm.get('block').value;\n    this.locationForm.controls.gp.setValue('');\n    this.locationForm.controls.gram.setValue('');\n    if (this.locationForm.value.block == '') {\n      this.showError('No Data Found');\n      // this.pemDetails = [];\n      this.villageDtoList = [];\n      this.gpDtoList = [];\n    }\n  }\n  changeGp(gpName) {\n    this.villageDtoList = this.villagesOfBranch.find(block => block.blockName == this.selectedBlock)?.gpDtoList.find(gp => gp.name == gpName)?.villageDtoList;\n    this.selectedGp = this.locationForm.get('gp').value;\n    this.locationForm.controls.gram.setValue('');\n    console.log(this.villageDtoList);\n\n    if (this.locationForm.value.gp == '') {\n      this.showError('No Data Found');\n      // this.pemDetails = [];\n      this.villageDtoList = [];\n    }\n  }\n\n  changeVillage(villagename) {\n    this.branchVillageMapId = this.villagesOfBranch.find(block => block.blockName == this.selectedBlock)?.gpDtoList.find(gp => gp.name == this.selectedGp)?.villageDtoList.find(vill => vill.villageName == villagename)?.branchVillageMapId;\n    this.villageMasterId = this.villageDtoList.find(vill => vill.villageName == villagename)?.villageMasterId\n    console.log(this.villageMasterId);\n\n    // this.viewPEMList();\n\n    if (this.locationForm.value.gram == '') {\n      this.showError('No Data Found');\n      // this.pemDetails = [];\n    }\n\n  }\n\n\n  locForm() {\n    this.locationForm = this.fb.group({\n      region: ['', Validators.required],\n      branch: ['', Validators.required],\n      block: ['', Validators.required],\n      gp: ['', Validators.required],\n      gram: ['', Validators.required],\n    });\n\n  }\n\n  get l() {\n    return this.locationForm.controls;\n  }\n\n\n  showSuccess(message) {\n    this.toaster.success(message, 'Daily-Activity Register', {\n      timeOut: 3000,\n    });\n  }\n\n  showError(message) {\n    this.toaster.error(message, 'Daily-Activity Register', {\n      timeOut: 3000,\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"white_box QA_section mb_30\">\n                <h2 class=\"page-title\">Daily Activity Register</h2>\n\n                <form class=\"form-signin\" [formGroup]=\"locationForm\">\n\n                    <div class=\"row\" >\n                        <div class=\"form-group col-md\">\n                            <label for=\"region\">Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeRegion($event.target.value)\"\n                                formControlName=\"region\" id=\"region\" [ngClass]=\"{\n                              'is-invalid': l.region.invalid && l.region.touched,\n                              'is-valid':\n                                l.region.valid && (l.region.dirty || l.region.touched)\n                            }\">\n                                <option value=\"\">-- Select Region --</option>\n                                <option *ngFor=\"let region of regionList\">\n                                    {{region.regionName}}\n                                </option>\n                            </select>\n                            <div *ngIf=\"l.region.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"l.region.errors.required\">Region selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"branch\">Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBranch($event.target.value)\"\n                                formControlName=\"branch\" id=\"branch\" [ngClass]=\"{\n                              'is-invalid': l.branch.invalid && l.branch.touched,\n                              'is-valid':\n                                l.branch.valid && (l.branch.dirty || l.branch.touched)\n                            }\">\n                                <option value=\"\">-- Select Branch --</option>\n                                <option *ngFor=\"let branch of branchList\">\n                                    {{ branch.branchName }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"l.branch.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"l.branch.errors.required\">Branch selection is required</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\">\n                            <label for=\"block\">Block :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBlock($event.target.value)\"\n                                formControlName=\"block\" id=\"block\" [ngClass]=\"{\n                              'is-invalid': l.block.invalid && l.block.touched,\n                              'is-valid':\n                                l.block.valid && (l.block.dirty || l.block.touched)\n                            }\">\n                                <option value=\"\">-- Select Block --</option>\n                                <option *ngFor=\"let block of villagesOfBranch\">\n                                    {{ block.blockName }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"l.block.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"l.block.errors.required\">Block selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"gp\">GP/ Municipality :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeGp($event.target.value)\" formControlName=\"gp\"\n                                id=\"gp\" [ngClass]=\"{\n                              'is-invalid': l.gp.invalid && l.gp.touched,\n                              'is-valid': l.gp.valid && (l.gp.dirty || l.gp.touched)\n                            }\">\n                                <option value=\"\">-- Select GP/ Municipality --</option>\n                                <option *ngFor=\"let gp of gpDtoList\">\n                                    {{ gp.name }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"l.gp.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"l.gp.errors.required\">\n                                    GP selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"gram\">GS/ Ward/ Village:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeVillage($event.target.value)\"\n                                formControlName=\"gram\" id=\"gram\" [ngClass]=\"{\n                              'is-invalid': l.gram.invalid && l.gram.touched,\n                              'is-valid': l.gram.valid && (l.gram.dirty || l.gram.touched)\n                            }\">\n                                <option value=\"\">-- Select Village --</option>\n                                <option *ngFor=\"let vill of villageDtoList\">\n                                    {{ vill.villageName }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"l.gram.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"l.gram.errors.required\">\n                                    Village selection is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- <div class=\"box_right d-flex lms_block col-md-6\">\n                        <div class=\"serach_field_2\">\n                            <div [ngClass]=\" searchFullscreen ? 'search_inner_fullscreen ' : ' search_inner' \">\n                                <form active=\"#\">\n                                    <div class=\"search_field\">\n                                        <input type=\"text\" name=\"search\" placeholder=\"Search pem info here...\"\n                                            [(ngModel)]=\"registerSearch\">\n                                    </div>\n                                    <button type=\"submit\"> <i class=\"fa fa-search\"></i> </button>\n                                </form>\n                            </div>\n                        </div>\n\n                    </div> -->\n\n                    <div class=\"white_box_tittle list_header\">\n\n                        <div class=\"QA_table \">\n                            <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                                <table\n                                    class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                                    role=\"grid\" aria-describedby=\"DataTables_Table_0_info\"\n                                    style=\"table-layout: fixed; \">\n\n                                  \n\n                                </table>\n                                <!-- <pagination-controls class=\"d-flex justify-content-end p-1 current ngx-pagination1\"\n                                    (pageChange)=\"p = $event\" (pageBoundsCorrection)=\"p = $event \">\n                                </pagination-controls> -->\n\n                            </div>\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DailyActivityRegisterComponent } from './daily-activity-register.component';\n\nconst routes: Routes = [{ path: '', component: DailyActivityRegisterComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DailyActivityRegisterRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DailyActivityRegisterService {\n  baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  villagesOfBranch(obj): any {\n    return this.http.post(`${this.baseURL}village/getVillagesOfABranch`, obj)\n  }\n\n  listOfBranchesOfARegion(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfBranchesOfARegion`, obj)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DailyActivityRegisterRoutingModule } from './daily-activity-register-routing.module';\nimport { DailyActivityRegisterComponent } from './daily-activity-register.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\n\n\n@NgModule({\n  declarations: [DailyActivityRegisterComponent],\n  imports: [\n    CommonModule,\n    DailyActivityRegisterRoutingModule,\n    ReactiveFormsModule,\n    Ng2SearchPipeModule,\n    NgbPaginationModule\n  ]\n})\nexport class DailyActivityRegisterModule { }\n"],"sourceRoot":"webpack:///"}