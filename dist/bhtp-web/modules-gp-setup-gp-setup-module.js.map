{"version":3,"sources":["./src/app/modules/gp-setup/gp-home/gp-home.component.ts","./src/app/modules/gp-setup/gp-home/gp-home.component.html","./src/app/modules/gp-setup/gp-setup-routing.module.ts","./src/app/modules/gp-setup/gp-setup-form/gp-setup-form.component.ts","./src/app/modules/gp-setup/gp-setup-form/gp-setup-form.component.html","./src/app/modules/gp-setup/gp-setup.module.ts"],"names":[],"mappings":"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","file":"modules-gp-setup-gp-setup-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaselineSurveyService } from '../../baseline-survey/baseline-survey.service';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ConfirmationDialogService } from '../../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { SidebarService } from '../../shared/sidebar/sidebar.service';\r\nimport { GpSetupFormComponent } from '../gp-setup-form/gp-setup-form.component';\r\n\r\n@Component({\r\n  selector: 'app-gp-home',\r\n  templateUrl: './gp-home.component.html',\r\n  styleUrls: ['./gp-home.component.css']\r\n})\r\nexport class GpHomeComponent implements OnInit {\r\n  stateSelectForm: FormGroup;\r\n  stateList: Array<any> = [];\r\n  stateWiseDistrictList: Array<any> = [];\r\n  blockList: Array<any> = [];\r\n  blockId: any;\r\n  gpMunicipality: Array<any> = [];\r\n  loader: boolean = true;\r\n  createAccess: boolean;\r\n  updateAccess: boolean;\r\n  deleteAccess: boolean;\r\n\r\n  constructor(private fb: FormBuilder, private httpService: HttpService,\r\n    private http: HttpClient, private toaster: ToastrService,\r\n    private confirmationDialogService: ConfirmationDialogService, public dialog: MatDialog,\r\n    private sidebarService: SidebarService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}state/getListOfAllStates`, Dto).subscribe((res: any) => {\r\n      this.stateList = res.responseObject.stateList;\r\n    });\r\n\r\n    this.createAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 41)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'create')?.accessType ? true : false;\r\n\r\n    this.updateAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 41)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'update')?.accessType ? true : false;\r\n\r\n    this.deleteAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 41)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'delete')?.accessType ? true : false;\r\n  }\r\n\r\n  openCreateBlock() {\r\n    const dialogRef = this.dialog.open(GpSetupFormComponent, {\r\n      width: '45vw',\r\n      maxWidth: '100vw',\r\n      height: '345px',\r\n      data: { editMode: false }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getListOfAllGpMunicipality(this.blockId);\r\n    });\r\n  }\r\n\r\n  openEditBlock(item) {\r\n    const dialogRef = this.dialog.open(GpSetupFormComponent, {\r\n      width: '45vw',\r\n      maxWidth: '100vw',\r\n      height: '345px',\r\n      data: { editMode: true, gpMunicipalityDetails: item }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getListOfAllGpMunicipality(this.blockId);\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.stateSelectForm = this.fb.group({\r\n      state: ['', Validators.required],\r\n      district: ['', Validators.required],\r\n      block: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.stateSelectForm.controls;\r\n  }\r\n\r\n  changeState(value) {\r\n    let stateId = value;\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      stateId: stateId\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n      this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n    });\r\n    if (!this.stateSelectForm.value.state) {\r\n      this.blockList = [];\r\n      this.gpMunicipality = [];\r\n    }\r\n  }\r\n\r\n  changeDistrict(value) {\r\n    this.blockList = this.stateWiseDistrictList.find(item => item.districtMasterId == value)?.blockList;\r\n    this.stateSelectForm.controls.block.setValue('');\r\n    if (!this.stateSelectForm.value.district) {\r\n      this.gpMunicipality = [];\r\n    }\r\n  }\r\n  changeBlock(value) {\r\n    this.blockId = value;\r\n    this.getListOfAllGpMunicipality(this.blockId);\r\n  }\r\n\r\n  getListOfAllGpMunicipality(blockMasterId) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      blockMasterId: blockMasterId\r\n    }\r\n    this.loader = false;\r\n    this.http.post(`${this.httpService.baseURL}gpmunicipality/getListOfAllGpMunicipality`, Dto).subscribe((res: any) => {\r\n      this.gpMunicipality = res.responseObject?.gpMunicipality;\r\n      this.loader = true;\r\n    }, error => {\r\n      this.showError('Error');\r\n      this.loader = true;\r\n    });\r\n  }\r\n\r\n  onDelete(item) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      gpMunicipalityId: item.gpMunicipalityId\r\n    }\r\n    this.confirmationDialogService.confirm('', `Do you want to delete ${item.gpMunicipalityName} ?`).then(() => {\r\n      this.http.post(`${this.httpService.baseURL}gpmunicipality/deleteGpMunicipality`, Dto).subscribe((res: any) => {\r\n        if (res.status) {\r\n          this.showSuccess(res.message);\r\n          this.getListOfAllGpMunicipality(this.blockId);\r\n        } else {\r\n          this.showError(res.message)\r\n        }\r\n      })\r\n    }).catch(() => '');\r\n  }\r\n\r\n  /* Show success message toaster */\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Success', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  /* Show Error message toaster */\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n}\r\n","<app-loader [hidden]=\"loader\"></app-loader>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"white_box QA_section mb_30\">\r\n\r\n          <div id=\"header-fixed\" style=\"display: flex;\">\r\n            <h2 class=\"page-title\">GP/Municipality  Setup</h2>\r\n        </div>\r\n        \r\n        <div class=\"add_button\" *ngIf=\"createAccess\">\r\n            <button class=\"btn btn-primary\" (click)=\"openCreateBlock()\">\r\n                <i class=\"fa fa-building-o\"></i>Create GP/Municipality\r\n            </button>    \r\n        </div>\r\n<br>\r\n        <form class=\"form-signin\" [formGroup]=\"stateSelectForm\">\r\n            <div class=\"row\">\r\n              <div class=\"form-group col-md-4\">\r\n                <label for=\"state\"\r\n                  >State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n                >\r\n                <select\r\n                  class=\"form-select\"\r\n                  (change)=\"changeState($event.target.value)\"\r\n                  formControlName=\"state\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': f.state.invalid && f.state.touched,\r\n                    'is-valid': f.state.valid && (f.state.dirty || f.state.touched)\r\n                  }\"\r\n                >\r\n                  <option value=\"\">-- Select State --</option>\r\n                  <option *ngFor=\"let state of stateList\" [value]=\"state.stateMasterId\">\r\n                    {{state.stateName}}\r\n                  </option>\r\n                </select>\r\n                <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.state.errors.required\">\r\n                    State selection is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group col-md-4\">\r\n                <label for=\"district\"\r\n                  >District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n                >\r\n                <select\r\n                  class=\"form-select\"\r\n                  (change)=\"changeDistrict($event.target.value)\"\r\n                  formControlName=\"district\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': f.district.invalid && f.district.touched,\r\n                    'is-valid': f.district.valid && (f.district.dirty || f.district.touched)\r\n                  }\"\r\n                >\r\n                  <option value=\"\">-- Select District --</option>\r\n                  <option *ngFor=\"let district of stateWiseDistrictList\" [value]=\"district.districtMasterId\">\r\n                    {{district.districtName}}\r\n                  </option>\r\n                </select>\r\n                <div *ngIf=\"f.district.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.district.errors.required\">\r\n                    District selection is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group col-md-4\">\r\n                <label for=\"block\"\r\n                  >Block :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n                >\r\n                <select\r\n                  class=\"form-select\"\r\n                  (change)=\"changeBlock($event.target.value)\"\r\n                  formControlName=\"block\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': f.block.invalid && f.block.touched,\r\n                    'is-valid': f.block.valid && (f.block.dirty || f.block.touched)\r\n                  }\"\r\n                >\r\n                  <option value=\"\">-- Select Block --</option>\r\n                  <option *ngFor=\"let block of blockList\" [value]=\"block.blockMasterId\">\r\n                    {{block.blockName}}\r\n                  </option>\r\n                </select>\r\n                <div *ngIf=\"f.block.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.block.errors.required\">\r\n                    Block selection is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </form>\r\n\r\n        <div class=\"white_box_tittle list_header\" >\r\n            <div class=\"QA_table \">\r\n                <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\r\n                    <table\r\n                        class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\r\n                        role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\r\n        \r\n                        <thead>\r\n                            <tr>\r\n                                <th>SL<br>No</th>\r\n                                <th>State</th>\r\n                                <th>District</th>\r\n                                <th>Block</th>\r\n                                <th>GP/Municipality</th>\r\n                                <th>Type</th> \r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n        \r\n                        <tbody>\r\n        \r\n                            <tr *ngFor=\"let item of gpMunicipality;index as i\">\r\n                                <td>{{i+1}}</td>\r\n                                <td>{{item.stateName}}</td>\r\n                                <td>\r\n                                  {{item.districtName}}\r\n                                </td>\r\n                                <td>\r\n                                  {{item.blockName}}\r\n                                </td>\r\n                                <td>\r\n                                  {{item.gpMunicipalityName}}\r\n                                </td>\r\n                                <td>\r\n                                  {{item.gpMunicipalityType}}\r\n                                </td>\r\n                                <td>\r\n                                    <i class=\"fas fa-edit\" title=\"Edit\" *ngIf=\"updateAccess\" (click)=\"openEditBlock(item)\"></i>\r\n                                    <i class=\"fas fa-trash\" title=\"Delete MUAC\" *ngIf=\"deleteAccess\" (click)=\"onDelete(item)\"></i>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GpHomeComponent } from './gp-home/gp-home.component';\r\n\r\nconst routes: Routes = [{ path: '', component: GpHomeComponent },];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GpSetupRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ValidationService } from '../../shared/services/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-gp-setup-form',\r\n  templateUrl: './gp-setup-form.component.html',\r\n  styleUrls: ['./gp-setup-form.component.css']\r\n})\r\nexport class GpSetupFormComponent implements OnInit {\r\n  gpForm: FormGroup;\r\n  stateList: Array<any> = [];\r\n  stateWiseDistrictList: Array<any> = [];\r\n  blockList: Array<any> = [];\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpClient, private toaster: ToastrService,\r\n    private httpService: HttpService, public validationService: ValidationService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, public dialogRef: MatDialogRef<GpSetupFormComponent>) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n\r\n    this.http.post(`${this.httpService.baseURL}state/getListOfAllStates`, Dto).subscribe((res: any) => {\r\n      this.stateList = res.responseObject.stateList;\r\n    });\r\n\r\n    if (this.data.editMode) {\r\n      let Dto = {\r\n        dataAccessDTO: this.httpService.dataAccessDTO,\r\n        stateId: this.data.gpMunicipalityDetails.stateMasterId\r\n      }\r\n      this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n        this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n        this.blockList = this.stateWiseDistrictList.find(item => item.districtMasterId == this.data.gpMunicipalityDetails.districtMasterId)?.blockList;\r\n      });\r\n      this.gpForm.patchValue({\r\n        state: this.data.gpMunicipalityDetails.stateMasterId,\r\n        district: this.data.gpMunicipalityDetails.districtMasterId,\r\n        block: this.data.gpMunicipalityDetails.blockMasterId,\r\n        gpName: this.data.gpMunicipalityDetails.gpMunicipalityName,\r\n        type: this.data.gpMunicipalityDetails.gpMunicipalityType,\r\n      })\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.gpForm = this.fb.group({\r\n      state: ['', Validators.required],\r\n      district: ['', Validators.required],\r\n      block: ['', Validators.required],\r\n      gpName: ['', Validators.required],\r\n      type: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.gpForm.controls;\r\n  }\r\n\r\n  changeState(value) {\r\n    let stateId = value;\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      stateId: stateId\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n      this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n    });\r\n    if (!this.gpForm.value.state) {\r\n      this.blockList = [];\r\n    }\r\n  }\r\n\r\n  changeDistrict(value) {\r\n    this.blockList = this.stateWiseDistrictList.find(item => item.districtMasterId == value)?.blockList;\r\n    this.gpForm.controls.block.setValue('');\r\n    if (!this.gpForm.value.district) {\r\n    }\r\n  }\r\n\r\n  onSave() {\r\n    this.gpForm.markAllAsTouched();\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      gpMunicipalityId: this.data.editMode ? this.data.gpMunicipalityDetails.gpMunicipalityId : \"0\",\r\n      gpMunicipalityType: this.gpForm.value.type,\r\n      blockMasterId: this.gpForm.value.block,\r\n      gpMunicipalityName: this.validationService.camelize(this.gpForm.value.gpName.trim()),\r\n    }\r\n    if (this.gpForm.valid) {\r\n      this.http.post(`${this.httpService.baseURL}gpmunicipality/saveOrUpdate`, Dto).subscribe((res: any) => {\r\n        if (res.status) {\r\n          this.dialogRef.close();\r\n          this.showSuccess('GP / Municipality Created');\r\n        } else {\r\n          this.showError(res.message);\r\n        }\r\n      }, error => {\r\n        this.dialogRef.close();\r\n        this.showError('Error')\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  /* Show success message toaster */\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Success', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  /* Show Error message toaster */\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n}\r\n","<h1 mat-dialog-title>\r\n    <div class=\"dialog-header\">\r\n      <h2 class=\"dialog-title\">Create New GP/Municipality</h2>\r\n      <div><i class=\"fas fa-times\" (click)=\"closeDialog()\"></i></div>\r\n    </div>\r\n  </h1>\r\n  \r\n  <div mat-dialog-content>\r\n    <form class=\"form-signin\" [formGroup]=\"gpForm\">\r\n      <div class=\"row\">\r\n        <div class=\"form-group col-md\">\r\n          <label for=\"state\"\r\n            >State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n          >\r\n          <select\r\n            class=\"form-select\"\r\n            (change)=\"changeState($event.target.value)\"\r\n            formControlName=\"state\"\r\n            [ngClass]=\"{\r\n              'is-invalid': f.state.invalid && f.state.touched,\r\n              'is-valid': f.state.valid && (f.state.dirty || f.state.touched)\r\n            }\"\r\n          >\r\n            <option value=\"\">-- Select State --</option>\r\n            <option *ngFor=\"let state of stateList\" [value]=\"state.stateMasterId\">\r\n              {{state.stateName}}\r\n            </option>\r\n          </select>\r\n          <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.state.errors.required\">State selection is required</div>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"form-group col-md\">\r\n          <label for=\"district\"\r\n            >District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n          >\r\n          <select\r\n            class=\"form-select\"\r\n            (change)=\"changeDistrict($event.target.value)\"\r\n            formControlName=\"district\"\r\n            [ngClass]=\"{\r\n              'is-invalid': f.district.invalid && f.district.touched,\r\n              'is-valid':\r\n                f.district.valid && (f.district.dirty || f.district.touched)\r\n            }\"\r\n          >\r\n            <option value=\"\">-- Select District --</option>\r\n            <option *ngFor=\"let district of stateWiseDistrictList\" [value]=\"district.districtMasterId\">\r\n              {{district.districtName}}\r\n            </option>\r\n          </select>\r\n          <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.state.errors.required\">\r\n              District selection is required\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md-4\">\r\n            <label for=\"block\"\r\n              >Block :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"block\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.block.invalid && f.block.touched,\r\n                'is-valid': f.block.valid && (f.block.dirty || f.block.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select Block --</option>\r\n              <option *ngFor=\"let block of blockList\" [value]=\"block.blockMasterId\">\r\n                {{block.blockName}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.block.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.block.errors.required\">\r\n                Block selection is required\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n\r\n      <br>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"form-group col-md\">\r\n          <label for=\"gpName\"\r\n            >GP / Municipality Name :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n          >\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"Enter gp Name\"\r\n            formControlName=\"gpName\"\r\n            style=\"text-transform: capitalize\"\r\n            spellcheck=\"false\"\r\n            [ngClass]=\"{\r\n              'is-invalid': f.gpName.invalid && f.gpName.touched,\r\n              'is-valid':\r\n                f.gpName.valid && (f.gpName.dirty || f.gpName.touched)\r\n            }\"\r\n          />\r\n          <div *ngIf=\"f.gpName.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.gpName.errors.required\">GP / Municipality Name is required</div>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"form-group col-md\">\r\n          <label for=\"type\"\r\n            >Type :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n          >\r\n         <select\r\n              class=\"form-select\"\r\n              formControlName=\"type\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.type.invalid && f.type.touched,\r\n                'is-valid': f.type.valid && (f.type.dirty || f.type.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select Block --</option>\r\n              <option value=\"GP\"> GP </option>\r\n              <option value=\"M\">Municipality</option>\r\n            </select>\r\n          <div *ngIf=\"f.type.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.type.errors.required\">Type is required</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  \r\n  <div mat-dialog-actions>\r\n    <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSave()\">Save</button>\r\n  </div>\r\n  ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { GpSetupRoutingModule } from './gp-setup-routing.module';\r\nimport { GpHomeComponent } from './gp-home/gp-home.component';\r\nimport { GpSetupFormComponent } from './gp-setup-form/gp-setup-form.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { LoaderModule } from '../shared/loader/loader.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [GpHomeComponent, GpSetupFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    GpSetupRoutingModule, ReactiveFormsModule, FormsModule,\r\n    MatTabsModule, MatNativeDateModule, MatDialogModule, MatMenuModule,\r\n    MatIconModule, LoaderModule\r\n  ]\r\n})\r\nexport class GpSetupModule { }\r\n"],"sourceRoot":"webpack:///"}