{"version":3,"sources":["./src/app/modules/region-branch-setup/region-branch-setup.module.ts","./src/app/modules/region-branch-setup/region-setup/region-setup.component.ts","./src/app/modules/region-branch-setup/region-setup/region-setup.component.html","./src/app/modules/region-branch-setup/region-branch-setup-routing.module.ts","./src/app/modules/region-branch-setup/branch-setup/branch-setup.component.ts","./src/app/modules/region-branch-setup/branch-setup/branch-setup.component.html","./src/app/modules/region-branch-setup/region-branch-home/region-branch-home.component.ts","./src/app/modules/region-branch-setup/region-branch-home/region-branch-home.component.html"],"names":[],"mappings":"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","file":"modules-region-branch-setup-region-branch-setup-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RegionBranchSetupRoutingModule } from './region-branch-setup-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { RegionBranchHomeComponent } from './region-branch-home/region-branch-home.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RegionSetupComponent } from './region-setup/region-setup.component';\r\nimport { BranchSetupComponent } from './branch-setup/branch-setup.component'\r\n\r\n@NgModule({\r\n  declarations: [RegionBranchHomeComponent, RegionSetupComponent, BranchSetupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RegionBranchSetupRoutingModule, ReactiveFormsModule, FormsModule,\r\n    MatTabsModule, MatNativeDateModule, MatDialogModule, MatMenuModule,\r\n    MatIconModule\r\n  ]\r\n})\r\nexport class RegionBranchSetupModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpService } from '../../core/http/http.service';\r\n\r\n@Component({\r\n  selector: 'app-region-setup',\r\n  templateUrl: './region-setup.component.html',\r\n  styleUrls: ['./region-setup.component.css']\r\n})\r\nexport class RegionSetupComponent implements OnInit {\r\n  regionForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpClient, private toaster: ToastrService, private httpService: HttpService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, public dialogRef: MatDialogRef<RegionSetupComponent>) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.regionForm = this.fb.group({\r\n      regionName: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.regionForm.controls;\r\n  }\r\n\r\n  camelize(str) {\r\n    let value = str.toLowerCase();\r\n    return value.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function (match, index) {\r\n      if (+match === 0) return \" \";\r\n      if (index === 0) return match.toUpperCase();\r\n      return index === 0 ? match.toLowerCase() : match.toUpperCase();\r\n    });\r\n  }\r\n\r\n  onSave() {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      regionMasterId: \"0\",\r\n      regionName: this.camelize(this.regionForm.value.regionName)\r\n    }\r\n    console.log(Dto);\r\n    this.http.post(`${this.httpService.baseURL}region/saveOrUpdate`, Dto).subscribe((res: any) => {\r\n      console.log(res);\r\n      if (res.status) {\r\n        this.dialogRef.close();\r\n        this.showSuccess('Region Created');\r\n      } else {\r\n        this.showError(res.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Success', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  /* Show Error message toaster */\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h1 mat-dialog-title>\r\n  <div class=\"dialog-header\">\r\n    <h2 class=\"dialog-title\">Create New Region</h2>\r\n    <div><i class=\"fas fa-times\" (click)=\"closeDialog()\"></i></div>\r\n  </div>\r\n</h1>\r\n<div mat-dialog-content>\r\n  <form class=\"form-signin\" [formGroup]=\"regionForm\">\r\n    <div class=\"form-group col-md\">\r\n      <label for=\"region\"\r\n        >Region Name :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n      >\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"Enter Region Name\"\r\n        formControlName=\"regionName\"\r\n        [ngClass]=\"{\r\n          'is-invalid': f.regionName.invalid && f.regionName.touched,\r\n          'is-valid': f.regionName.valid && (f.regionName.dirty || f.regionName.touched)\r\n        }\"\r\n      />\r\n      <div *ngIf=\"f.regionName.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.regionName.errors.required\">Region Name is required</div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n\r\n    <div class=\"addEditBtn\">\r\n      <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSave()\">\r\n        Save\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegionBranchHomeComponent } from './region-branch-home/region-branch-home.component';\r\n\r\nconst routes: Routes = [{ path: '', component: RegionBranchHomeComponent },];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RegionBranchSetupRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpService } from '../../core/http/http.service';\r\n\r\n@Component({\r\n  selector: 'app-branch-setup',\r\n  templateUrl: './branch-setup.component.html',\r\n  styleUrls: ['./branch-setup.component.css']\r\n})\r\nexport class BranchSetupComponent implements OnInit {\r\n  branchForm: FormGroup;\r\n  regionList: Array<any> = [];\r\n  subVerticalsList: Array<any> = [];\r\n  subVerticleProjectList: Array<any> = [];\r\n  branchTypeList: Array<any> = [];\r\n  stateList: Array<any> = [];\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpClient, private toaster: ToastrService, private httpService: HttpService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, public dialogRef: MatDialogRef<BranchSetupComponent>) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.allDropdownValue();\r\n\r\n  }\r\n\r\n  allDropdownValue() {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}user/getListOfAllRegions`, Dto).subscribe((res: any) => {\r\n      this.regionList = res.responseObject;\r\n    });\r\n    this.http.post(`${this.httpService.baseURL}subvertical/getListOfAllSubVerticals`, Dto).subscribe((res: any) => {\r\n      this.subVerticalsList = res.responseObject.subVerticalList;\r\n    });\r\n\r\n    this.http.post(`${this.httpService.baseURL}branch/getListOfALLBranchTypes`, Dto).subscribe((res: any) => {\r\n      this.branchTypeList = res.responseObject.branchTypeList;\r\n    });\r\n\r\n    this.http.post(`${this.httpService.baseURL}state/getListOfAllStates`, Dto).subscribe((res: any) => {\r\n      this.stateList = res.responseObject.stateList;\r\n    });\r\n  }\r\n\r\n  changeSubVertical(value) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      subVerticalMasterId: value\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}subvertical/getSubVerticalWiseListOfAllProjects`, Dto).subscribe((res: any) => {\r\n      this.subVerticleProjectList = res.responseObject.projectList;\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.branchForm = this.fb.group({\r\n      region: ['', Validators.required],\r\n      subVertical: ['', Validators.required],\r\n      subVerticleProject: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      district: ['', Validators.required],\r\n      selectedDistrict: ['', Validators.required],\r\n      branchName: ['', Validators.required],\r\n      branchType: ['', Validators.required],\r\n      startDate: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      primaryContactName: ['', Validators.required],\r\n      primaryMobile: ['', Validators.compose([Validators.required, Validators.minLength(10), Validators.pattern(\"[6789][0-9]{9}\")])],\r\n      primaryEmail: ['', [Validators.required, Validators.email]],\r\n      postOffice: [''],\r\n      policeStation: [''],\r\n      branchLandmark: [''],\r\n      secondaryContactName: [''],\r\n      secondaryMobile: ['', Validators.compose([Validators.minLength(10), Validators.pattern(\"[6789][0-9]{9}\")])],\r\n      secondaryEmail: ['', Validators.email],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.branchForm.controls;\r\n  }\r\n\r\n  onSave() {\r\n\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h1 mat-dialog-title>\r\n  <div class=\"dialog-header\">\r\n    <h2 class=\"dialog-title\">Create New Branch</h2>\r\n    <div><i class=\"fas fa-times\" (click)=\"closeDialog()\"></i></div>\r\n  </div>\r\n</h1>\r\n\r\n<div mat-dialog-content>\r\n  <form class=\"form-signin\" [formGroup]=\"branchForm\">\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"region\"\r\n              >Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"region\"\r\n              id=\"region\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.region.invalid && f.region.touched,\r\n                'is-valid':\r\n                  f.region.valid && (f.region.dirty || f.region.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select Region --</option>\r\n              <option *ngFor=\"let region of regionList\" [value]=\"region.regionMasterId\">\r\n                {{region.regionName}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.region.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.region.errors.required\">Region selection is required</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"subVertical\"\r\n              >Sub-Vertical :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"subVertical\"\r\n              id=\"subVertical\"\r\n              (change)=\"changeSubVertical($event.target.value)\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.subVertical.invalid && f.subVertical.touched,\r\n                'is-valid':\r\n                  f.subVertical.valid && (f.subVertical.dirty || f.subVertical.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select Sub-Vertical --</option>\r\n              <option *ngFor=\"let subVerticals of subVerticalsList\" [value]=\"subVerticals.subVerticalMasterId\">\r\n                {{subVerticals.subVerticalName}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.subVertical.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.subVertical.errors.required\">subVertical selection is required</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"subVerticleProject\"\r\n              >Project of selected Sub-Verticle :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"subVerticleProject\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.subVerticleProject .invalid && f.subVerticleProject .touched,\r\n                'is-valid':\r\n                  f.subVerticleProject .valid && (f.subVerticleProject .dirty || f.subVerticleProject .touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select Project of selected Sub-Verticle --</option>\r\n              <option *ngFor=\"let subVerticleProject of subVerticleProjectList\">\r\n                {{subVerticleProject.projectName}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.subVerticleProject .errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.subVerticleProject .errors.required\">subVerticleProject  selection is required</div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n \r\n    <br />\r\n\r\n    <div class=\"row\">\r\n\r\n          <div class=\"form-group col-md\">\r\n        <label for=\"state\"\r\n          >State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <select\r\n          class=\"form-select\"\r\n          formControlName=\"state\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.state.invalid && f.state.touched,\r\n            'is-valid':\r\n              f.state.valid && (f.state.dirty || f.state.touched)\r\n          }\"\r\n        >\r\n          <option value=\"\">-- Select state --</option>\r\n          <option *ngFor=\"let state of stateList\">\r\n            {{state.stateName}}\r\n          </option>\r\n        </select>\r\n        <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.state.errors.required\">state selection is required</div>\r\n        </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"district\"\r\n              >District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"district\"\r\n              id=\"district\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.district.invalid && f.district.touched,\r\n                'is-valid':\r\n                  f.district.valid && (f.district.dirty || f.district.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select district --</option>\r\n              <!-- <option *ngFor=\"let region of regionList\">\r\n                {{region.regionName}}\r\n              </option> -->\r\n            </select>\r\n            <div *ngIf=\"f.district.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.district.errors.required\">district selection is required</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"selectedDistrict\"\r\n              >Block of the selected district :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"selectedDistrict\"\r\n              id=\"selectedDistrict\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.selectedDistrict.invalid && f.selectedDistrict.touched,\r\n                'is-valid':\r\n                  f.selectedDistrict.valid && (f.selectedDistrict.dirty || f.selectedDistrict.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select selectedDistrict --</option>\r\n              <!-- <option *ngFor=\"let region of regionList\">\r\n                {{region.regionName}}\r\n              </option> -->\r\n            </select>\r\n            <div *ngIf=\"f.selectedDistrict.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.selectedDistrict.errors.required\">selectedDistrict selection is required</div>\r\n            </div>\r\n          </div>\r\n   \r\n        <div class=\"form-group col-md\">\r\n            <label for=\"branchName\"\r\n              >Branch Name :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter branchName Name\"\r\n              formControlName=\"branchName\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.branchName.invalid && f.branchName.touched,\r\n                'is-valid': f.branchName.valid && (f.branchName.dirty || f.branchName.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.branchName.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.branchName.errors.required\">branchName is required</div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"form-group col-md\">\r\n            <label for=\"branchType\"\r\n              >Branch Type :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"branchType\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.branchType.invalid && f.branchType.touched,\r\n                'is-valid':\r\n                  f.branchType.valid && (f.branchType.dirty || f.branchType.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select branchType --</option>\r\n              <option *ngFor=\"let branchType of branchTypeList\">\r\n                {{branchType.branchTypeDescription}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.branchType.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.branchType.errors.required\">branchType selection is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n \r\n    <br />\r\n\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-md-3\">\r\n            <label for=\"startDate\"\r\n              >Start Date :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <input\r\n              type=\"date\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter startDate Name\"\r\n              formControlName=\"startDate\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.startDate.invalid && f.startDate.touched,\r\n                'is-valid': f.startDate.valid && (f.startDate.dirty || f.startDate.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.startDate.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.startDate.errors.required\">startDate is required</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"address\"\r\n              >Address :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter address Name\"\r\n              formControlName=\"address\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.address.invalid && f.address.touched,\r\n                'is-valid': f.address.valid && (f.address.dirty || f.address.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.address.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.address.errors.required\">address is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n \r\n    <br />\r\n\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"postOffice\"\r\n              >Post Office (P.O.) of branch locality :</label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter postOffice Name\"\r\n              formControlName=\"postOffice\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.postOffice.invalid && f.postOffice.touched,\r\n                'is-valid': f.postOffice.valid && (f.postOffice.dirty || f.postOffice.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.postOffice.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.postOffice.errors.required\">postOffice is required</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"policeStation\"\r\n              >Police Station (P.S.) of branch locality :</label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter policeStation Name\"\r\n              formControlName=\"policeStation\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.policeStation.invalid && f.policeStation.touched,\r\n                'is-valid': f.policeStation.valid && (f.policeStation.dirty || f.policeStation.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.policeStation.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.policeStation.errors.required\">policeStation is required</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"branchLandmark\"\r\n              >Landmark of branch locality :</label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter branchLandmark Name\"\r\n              formControlName=\"branchLandmark\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.branchLandmark.invalid && f.branchLandmark.touched,\r\n                'is-valid': f.branchLandmark.valid && (f.branchLandmark.dirty || f.branchLandmark.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.branchLandmark.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.branchLandmark.errors.required\">branchLandmark is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <br />\r\n\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"primaryContactName\"\r\n              >Name of Primary Contact Person :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter primaryContactName Name\"\r\n              formControlName=\"primaryContactName\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.primaryContactName.invalid && f.primaryContactName.touched,\r\n                'is-valid': f.primaryContactName.valid && (f.primaryContactName.dirty || f.primaryContactName.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.primaryContactName.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.primaryContactName.errors.required\">primaryContactName is required</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"primaryMobile\"\r\n              >Primary Mobile No:&nbsp;<span class=\"text-danger\"\r\n                >*&nbsp;</span\r\n              ></label\r\n            >\r\n            <input\r\n              type=\"\"\r\n              class=\"form-control\"\r\n              maxlength=\"10\"\r\n              placeholder=\"Enter Mobile No\"\r\n              formControlName=\"primaryMobile\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.primaryMobile.invalid && f.primaryMobile.touched\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.primaryMobile.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.primaryMobile.errors.required\">\r\n                Primary Mobile No is required\r\n              </div>\r\n              <div *ngIf=\"f.primaryMobile.errors.minlength\">\r\n                Mobile No. should be of 10 digit\r\n              </div>\r\n              <div *ngIf=\"f.primaryMobile.errors.pattern\">\r\n                Mobile No. should be starting with 6, 7, 8 or 9\r\n              </div>\r\n            </div>\r\n        </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"primaryEmail\"\r\n              >Primary Email:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <input\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter Email\"\r\n              formControlName=\"primaryEmail\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.primaryEmail.invalid && f.primaryEmail.touched,\r\n                'is-valid':\r\n                  f.primaryEmail.valid &&\r\n                  (f.primaryEmail.dirty || f.primaryEmail.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.primaryEmail.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.primaryEmail.errors.required\">Email is required</div>\r\n              <div *ngIf=\"f.primaryEmail.errors.email\">Email is not valid</div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n \r\n \r\n    <br />\r\n\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"secondaryContactName\"\r\n              >Name of the secondary contact person :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter secondaryContactName Name\"\r\n              formControlName=\"secondaryContactName\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.secondaryContactName.invalid && f.secondaryContactName.touched,\r\n                'is-valid': f.secondaryContactName.valid && (f.secondaryContactName.dirty || f.secondaryContactName.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.secondaryContactName.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.secondaryContactName.errors.required\">secondaryContactName is required</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"secondaryMobile\"\r\n              >Phone number of contact person secondary:</label\r\n            >\r\n            <input\r\n              type=\"\"\r\n              class=\"form-control\"\r\n              maxlength=\"10\"\r\n              placeholder=\"Enter secondary Mobile No\"\r\n              formControlName=\"secondaryMobile\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.secondaryMobile.invalid && f.secondaryMobile.touched\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.secondaryMobile.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.secondaryMobile.errors.required\">\r\n                Primary Mobile No is required\r\n              </div>\r\n              <div *ngIf=\"f.secondaryMobile.errors.minlength\">\r\n                Mobile No. should be of 10 digit\r\n              </div>\r\n              <div *ngIf=\"f.secondaryMobile.errors.pattern\">\r\n                Mobile No. should be starting with 6, 7, 8 or 9\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"secondaryEmail\"\r\n              >Secondary Email:</label\r\n            >\r\n            <input\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter secondary Email\"\r\n              formControlName=\"secondaryEmail\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.secondaryEmail.invalid && f.secondaryEmail.touched,\r\n                'is-valid':\r\n                  f.secondaryEmail.valid &&\r\n                  (f.secondaryEmail.dirty || f.secondaryEmail.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.secondaryEmail.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.secondaryEmail.errors.required\">Email is required</div>\r\n              <div *ngIf=\"f.secondaryEmail.errors.email\">Email is not valid</div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n\r\n    <br />\r\n\r\n    <!-- <div class=\"addEditBtn\">\r\n      <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSave()\">\r\n        Save\r\n      </button>\r\n    </div> -->\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSave()\">\r\n        Save\r\n      </button>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaselineSurveyService } from '../../baseline-survey/baseline-survey.service';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ConfirmationDialogService } from '../../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { BranchSetupComponent } from '../branch-setup/branch-setup.component';\r\nimport { RegionSetupComponent } from '../region-setup/region-setup.component';\r\n\r\n@Component({\r\n  selector: 'app-region-branch-home',\r\n  templateUrl: './region-branch-home.component.html',\r\n  styleUrls: ['./region-branch-home.component.css']\r\n})\r\nexport class RegionBranchHomeComponent implements OnInit {\r\n  stateSelectForm: FormGroup;\r\n  stateList: Array<any> = [];\r\n\r\n  constructor(private fb: FormBuilder, private httpService: HttpService,\r\n    private http: HttpClient, private baselineService: BaselineSurveyService, private toaster: ToastrService,\r\n    private confirmationDialogService: ConfirmationDialogService, public dialog: MatDialog,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}state/getListOfAllStates`, Dto).subscribe((res: any) => {\r\n      this.stateList = res.responseObject.stateList;\r\n    });\r\n  }\r\n\r\n  openCreateRegion() {\r\n    const dialogRef = this.dialog.open(RegionSetupComponent, {\r\n      width: '500px',\r\n      height: '280px',\r\n      data: {}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n\r\n  openCreateBranch() {\r\n    const dialogRef = this.dialog.open(BranchSetupComponent, {\r\n      width: '95vw',\r\n      maxWidth: '100vw',\r\n      data: {}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n\r\n  openEditRegion() {\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.stateSelectForm = this.fb.group({\r\n      state: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.stateSelectForm.controls;\r\n  }\r\n\r\n  changeState(value) {\r\n\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"white_box QA_section mb_30\">\r\n\r\n          <div id=\"header-fixed\" style=\"display: flex;\">\r\n            <h2 class=\"page-title\">Region Branch Setup</h2>\r\n        </div>\r\n        \r\n        <div class=\"add_button\">\r\n            <button class=\"btn btn-primary\" (click)=\"openCreateBranch()\">\r\n                <i class=\"fas fa-code-branch\" ></i>Create Branch\r\n            </button>    \r\n            &nbsp;&nbsp;&nbsp;\r\n            <button class=\"btn btn-primary\" (click)=\"openCreateRegion()\">\r\n                <i class=\"fa fa-map-marker\" ></i>Create Region\r\n            </button>\r\n        </div>\r\n\r\n        <form class=\"form-signin\" [formGroup]=\"stateSelectForm\">\r\n            <div class=\"row\">\r\n              <div class=\"form-group col-md-4\">\r\n                <label for=\"state\"\r\n                  >State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n                >\r\n                <select\r\n                  class=\"form-select\"\r\n                  (change)=\"changeState($event.target.value)\"\r\n                  formControlName=\"state\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': f.state.invalid && f.state.touched,\r\n                    'is-valid': f.state.valid && (f.state.dirty || f.state.touched)\r\n                  }\"\r\n                >\r\n                <option value=\"\">-- Select state --</option>\r\n                <option *ngFor=\"let state of stateList\">\r\n                  {{state.stateName}}\r\n                </option>\r\n                </select>\r\n                <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.state.errors.required\">\r\n                    State selection is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </form>\r\n\r\n        <div class=\"white_box_tittle list_header\" >\r\n            <div class=\"QA_table \">\r\n                <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\r\n                    <table\r\n                        class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\r\n                        role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\r\n        \r\n                        <thead>\r\n                            <tr>\r\n                                <th>SL<br>No</th>\r\n                                <th>Region Name</th>\r\n                                <th>Branch Name</th>\r\n                                <th>District</th>\r\n                                <th>Project</th> \r\n                                <th>Status</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n        \r\n                        <tbody>\r\n        \r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td>Region 1</td>\r\n                                <td>\r\n                                    <ul>\r\n                                        <li>Branch 1</li>\r\n                                        <li>Branch 2</li>\r\n                                        <li>Branch 3</li>\r\n                                    </ul>\r\n                                </td>\r\n                                <td>\r\n                                  <ul>\r\n                                    <li>Hooghly</li>\r\n                                    <li>Kolkata</li>\r\n                                    <li>Malda</li>\r\n                                </ul>\r\n                                </td>\r\n                                <td>\r\n                                  <ul>\r\n                                    <li>BHP</li>\r\n                                    <li>THP</li>\r\n                                    <li>BSDM</li>\r\n                                </ul>\r\n                                </td>\r\n                                <td>\r\n                                  <ul>\r\n                                    <li>Active</li>\r\n                                    <li>Phased out</li>\r\n                                    <li>Active</li>\r\n                                </ul>\r\n                                </td>\r\n                                <td>\r\n                                    <button class=\"edit_button\" mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\r\n                                        <mat-icon>more_vert</mat-icon>\r\n                                    </button>\r\n                                    <mat-menu #menu=\"matMenu\">\r\n                                        <button mat-menu-item (click)=\"openEditRegion()\">Edit Region</button>\r\n                                        <button mat-menu-item [matMenuTriggerFor]=\"vertebrates\">Edit Branch</button>\r\n                                    </mat-menu>\r\n                                    <mat-menu #vertebrates=\"matMenu\">\r\n                                        <button mat-menu-item >Edit Branch 1</button>\r\n                                        <button mat-menu-item >Edit Branch 2</button>\r\n                                        <button mat-menu-item >Edit Branch 3</button>\r\n                                      </mat-menu>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}