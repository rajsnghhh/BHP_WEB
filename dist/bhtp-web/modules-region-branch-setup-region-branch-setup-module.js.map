{"version":3,"sources":["./src/app/modules/region-branch-setup/region-branch-setup.module.ts","./src/app/modules/region-branch-setup/region-setup/region-setup.component.ts","./src/app/modules/region-branch-setup/region-setup/region-setup.component.html","./src/app/modules/region-branch-setup/region-branch-setup-routing.module.ts","./src/app/modules/region-branch-setup/branch-setup/branch-setup.component.ts","./src/app/modules/region-branch-setup/branch-setup/branch-setup.component.html","./src/app/modules/region-branch-setup/region-branch-home/region-branch-home.component.ts","./src/app/modules/region-branch-setup/region-branch-home/region-branch-home.component.html"],"names":[],"mappings":"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","file":"modules-region-branch-setup-region-branch-setup-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RegionBranchSetupRoutingModule } from './region-branch-setup-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { RegionBranchHomeComponent } from './region-branch-home/region-branch-home.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RegionSetupComponent } from './region-setup/region-setup.component';\r\nimport { BranchSetupComponent } from './branch-setup/branch-setup.component'\r\nimport { LoaderModule } from '../shared/loader/loader.module';\r\n\r\n@NgModule({\r\n  declarations: [RegionBranchHomeComponent, RegionSetupComponent, BranchSetupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RegionBranchSetupRoutingModule, ReactiveFormsModule, FormsModule,\r\n    MatTabsModule, MatNativeDateModule, MatDialogModule, MatMenuModule,\r\n    MatIconModule, LoaderModule\r\n  ]\r\n})\r\nexport class RegionBranchSetupModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ValidationService } from '../../shared/services/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-region-setup',\r\n  templateUrl: './region-setup.component.html',\r\n  styleUrls: ['./region-setup.component.css']\r\n})\r\nexport class RegionSetupComponent implements OnInit {\r\n  regionForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpClient, private toaster: ToastrService,\r\n    private httpService: HttpService, public validationService: ValidationService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, public dialogRef: MatDialogRef<RegionSetupComponent>) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    if (this.data.editMode == false) {\r\n      this.regionForm.reset();\r\n    } else {\r\n      this.regionForm.patchValue({\r\n        regionName: this.data.regionName,\r\n      })\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.regionForm = this.fb.group({\r\n      regionName: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.regionForm.controls;\r\n  }\r\n\r\n  onSave() {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      regionMasterId: this.data.editMode == false ? \"0\" : this.data.regionId,\r\n      regionName: this.validationService.camelize(this.regionForm.value.regionName.trim())\r\n    }\r\n    console.log(Dto);\r\n    if (this.regionForm.valid) {\r\n      this.http.post(`${this.httpService.baseURL}region/saveOrUpdate`, Dto).subscribe((res: any) => {\r\n        console.log(res);\r\n        if (res.status) {\r\n          this.dialogRef.close();\r\n          this.data.editMode == false ? this.showSuccess('Region Created') : this.showSuccess('Region Updated');\r\n        } else {\r\n          this.showError(res.message);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Success', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  /* Show Error message toaster */\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h1 mat-dialog-title>\r\n  <div class=\"dialog-header\">\r\n    <h2 class=\"dialog-title\">Create New Region</h2>\r\n    <div><i class=\"fas fa-times\" (click)=\"closeDialog()\"></i></div>\r\n  </div>\r\n</h1>\r\n<div mat-dialog-content>\r\n  <form class=\"form-signin\" [formGroup]=\"regionForm\">\r\n    <div class=\"form-group col-md\">\r\n      <label for=\"region\"\r\n        >Region Name :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n      >\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"Enter Region Name\"\r\n        formControlName=\"regionName\"\r\n        style=\"text-transform: capitalize\"\r\n        [ngClass]=\"{\r\n          'is-invalid': f.regionName.invalid && f.regionName.touched,\r\n          'is-valid': f.regionName.valid && (f.regionName.dirty || f.regionName.touched)\r\n        }\"\r\n      />\r\n      <div *ngIf=\"f.regionName.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.regionName.errors.required\">Region Name is required</div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n\r\n    <div class=\"addEditBtn\">\r\n      <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSave()\">\r\n        Save\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegionBranchHomeComponent } from './region-branch-home/region-branch-home.component';\r\n\r\nconst routes: Routes = [{ path: '', component: RegionBranchHomeComponent },];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RegionBranchSetupRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ValidationService } from '../../shared/services/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-branch-setup',\r\n  templateUrl: './branch-setup.component.html',\r\n  styleUrls: ['./branch-setup.component.css']\r\n})\r\nexport class BranchSetupComponent implements OnInit {\r\n  branchForm: FormGroup;\r\n  regionList: Array<any> = [];\r\n  subVerticalsList: Array<any> = [];\r\n  subVerticleProjectList: Array<any> = [];\r\n  branchTypeList: Array<any> = [];\r\n  stateList: Array<any> = [];\r\n  stateWiseDistrictList: Array<any> = [];\r\n  blockList: Array<any> = [];\r\n  blockMasterId: any;\r\n  stateCode: any;\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpClient, private toaster: ToastrService, private httpService: HttpService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, public dialogRef: MatDialogRef<BranchSetupComponent>, public validationService: ValidationService,) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.allDropdownValue();\r\n    if (this.data.editMode == false) {\r\n      // this.branchForm.reset();\r\n    } else {\r\n      this.changeSubVertical(this.data.branchDetails.subverticalMasterId);\r\n\r\n      // this.chnageANything(this.data.branchDetails.stateMasterId).then((res) => {\r\n      //   this.changeDistrict(this.data.branchDetails.districtMasterId);\r\n      // });\r\n\r\n\r\n      let Dto = {\r\n        dataAccessDTO: this.httpService.dataAccessDTO,\r\n        stateId: this.data.branchDetails.stateMasterId\r\n      }\r\n      this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n        this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n        this.blockList = this.stateWiseDistrictList.find(item => item.districtMasterId == this.data.branchDetails.districtMasterId)?.blockList;\r\n      });\r\n\r\n      this.branchForm.patchValue({\r\n        region: this.data.regionMasterId,\r\n        subVertical: this.data.branchDetails.subverticalMasterId,\r\n        subVerticleProject: this.data.branchDetails.projectMasterId,\r\n        state: this.data.branchDetails.stateMasterId,\r\n        district: this.data.branchDetails.districtMasterId,\r\n        block: this.data.branchDetails.blockMasterId,\r\n        branchName: this.data.branchDetails.branchName,\r\n        branchType: this.data.branchDetails.branchTypeMasterId,\r\n        startDate: this.data.branchDetails.branchOpenDate,\r\n        address: this.data.branchDetails.branchAddressLine,\r\n        pincode: this.data.branchDetails.branchPincode,\r\n        primaryMobile: this.data.branchDetails.branchPhonePrimary,\r\n        primaryEmail: this.data.branchDetails.branchEmailPrimary,\r\n        postOffice: this.data.branchDetails.branchPostOffice,\r\n        policeStation: this.data.branchDetails.branchPoliceStation,\r\n        branchLandmark: this.data.branchDetails.branchlandMark,\r\n        secondaryMobile: this.data.branchDetails.branchPhoneSecondary,\r\n        secondaryEmail: this.data.branchDetails.branchEmailSecondary,\r\n      });\r\n      this.branchForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  allDropdownValue() {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}user/getListOfAllRegions`, Dto).subscribe((res: any) => {\r\n      this.regionList = res.responseObject;\r\n    });\r\n    this.http.post(`${this.httpService.baseURL}subvertical/getListOfAllSubVerticals`, Dto).subscribe((res: any) => {\r\n      this.subVerticalsList = res.responseObject.subVerticalList;\r\n    });\r\n\r\n    this.http.post(`${this.httpService.baseURL}branch/getListOfALLBranchTypes`, Dto).subscribe((res: any) => {\r\n      this.branchTypeList = res.responseObject.branchTypeList;\r\n    });\r\n\r\n    this.http.post(`${this.httpService.baseURL}state/getListOfAllStates`, Dto).subscribe((res: any) => {\r\n      this.stateList = res.responseObject.stateList;\r\n    });\r\n  }\r\n\r\n  changeSubVertical(value) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      subVerticalMasterId: value\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}subvertical/getSubVerticalWiseListOfAllProjects`, Dto).subscribe((res: any) => {\r\n      this.subVerticleProjectList = res.responseObject.projectList;\r\n    });\r\n  }\r\n\r\n  // chnageANything(value): Promise<any> {\r\n  //   let stateId = value;\r\n\r\n  //   let Dto = {\r\n  //     dataAccessDTO: this.httpService.dataAccessDTO,\r\n  //     stateId: stateId\r\n  //   }\r\n  //   return new Promise((resolve, reject) => {\r\n  //     this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n  //       this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n  //       resolve(res.responseObject);\r\n  //     });\r\n  //   })\r\n  // }\r\n  changeState(value) {\r\n    let stateId = value;\r\n    this.stateCode = this.stateList.find(x => x.stateMasterId == value)?.stateCode;\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      stateId: stateId\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n      this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n    });\r\n  }\r\n\r\n  changeDistrict(value) {\r\n    this.blockList = this.stateWiseDistrictList.find(item => item.districtMasterId == value)?.blockList;\r\n  }\r\n\r\n  createForm() {\r\n    this.branchForm = this.fb.group({\r\n      region: ['', Validators.required],\r\n      subVertical: ['', Validators.required],\r\n      subVerticleProject: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      district: ['', Validators.required],\r\n      block: ['', Validators.required],\r\n      branchName: ['', Validators.required],\r\n      branchType: ['', Validators.required],\r\n      startDate: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      pincode: ['', Validators.required],\r\n      primaryMobile: ['', Validators.compose([Validators.required, Validators.minLength(10), Validators.pattern(\"[6789][0-9]{9}\")])],\r\n      primaryEmail: ['', [Validators.required, Validators.email]],\r\n      postOffice: [''],\r\n      policeStation: [''],\r\n      branchLandmark: [''],\r\n      secondaryMobile: ['', Validators.compose([Validators.minLength(10), Validators.pattern(\"[6789][0-9]{9}\")])],\r\n      secondaryEmail: ['', Validators.email],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.branchForm.controls;\r\n  }\r\n\r\n  onSave() {\r\n    console.log(this.branchForm)\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      branchId: this.data.editMode == false ? \"0\" : this.data.branchDetails.branchId,\r\n      regionMasterId: this.branchForm.value.region,\r\n      projectMasterId: this.branchForm.value.subVerticleProject,\r\n      stateCode: this.stateCode,\r\n      blockMasterId: this.branchForm.value.block,\r\n      branchName: this.validationService.camelize(this.branchForm.value.branchName.trim()),\r\n      branchTypeMasterId: this.branchForm.value.branchType,\r\n      branchPincode: this.branchForm.value.pincode,\r\n      branchActiveFlag: \"Y\",\r\n      branchOpenDate: this.branchForm.value.startDate,\r\n      branchAddressLine: this.branchForm.value.address,\r\n      branchPostOffice: this.branchForm.value.postOffice,\r\n      branchPoliceStation: this.branchForm.value.policeStation,\r\n      branchlandMark: this.branchForm.value.branchLandmark,\r\n      branchPhonePrimary: this.branchForm.value.primaryMobile,\r\n      branchEmailPrimary: this.branchForm.value.primaryEmail,\r\n      branchPhoneSecondary: this.branchForm.value.secondaryMobile,\r\n      branchEmailSecondary: this.branchForm.value.secondaryEmail\r\n    }\r\n    if (this.branchForm.valid) {\r\n      this.http.post(`${this.httpService.baseURL}branch/saveOrUpdate`, Dto).subscribe((res: any) => {\r\n        console.log(res);\r\n        if (res.status) {\r\n          this.dialogRef.close();\r\n          this.showSuccess('Branch Created');\r\n        } else {\r\n          this.showError(res.message);\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Success', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  /* Show Error message toaster */\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h1 mat-dialog-title>\r\n  <div class=\"dialog-header\">\r\n    <h2 class=\"dialog-title\">Create New Branch</h2>\r\n    <div><i class=\"fas fa-times\" (click)=\"closeDialog()\"></i></div>\r\n  </div>\r\n</h1>\r\n\r\n<div mat-dialog-content>\r\n  <form class=\"form-signin\" [formGroup]=\"branchForm\">\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"region\"\r\n              >Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"region\"\r\n              id=\"region\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.region.invalid && f.region.touched,\r\n                'is-valid':\r\n                  f.region.valid && (f.region.dirty || f.region.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select Region --</option>\r\n              <option *ngFor=\"let region of regionList\" [value]=\"region.regionMasterId\">\r\n                {{region.regionName}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.region.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.region.errors.required\">Region selection is required</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"subVertical\"\r\n              >Sub-Vertical :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"subVertical\"\r\n              id=\"subVertical\"\r\n              (change)=\"changeSubVertical($event.target.value)\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.subVertical.invalid && f.subVertical.touched,\r\n                'is-valid':\r\n                  f.subVertical.valid && (f.subVertical.dirty || f.subVertical.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select Sub-Vertical --</option>\r\n              <option *ngFor=\"let subVerticals of subVerticalsList\" [value]=\"subVerticals.subVerticalMasterId\">\r\n                {{subVerticals.subVerticalName}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.subVertical.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.subVertical.errors.required\">SubVertical selection is required</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"subVerticleProject\"\r\n              >Project of selected Sub-Verticle :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"subVerticleProject\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.subVerticleProject .invalid && f.subVerticleProject .touched,\r\n                'is-valid':\r\n                  f.subVerticleProject .valid && (f.subVerticleProject .dirty || f.subVerticleProject .touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select Project of selected Sub-Verticle --</option>\r\n              <option *ngFor=\"let subVerticleProject of subVerticleProjectList\" [value]=\"subVerticleProject.projectMasterId\">\r\n                {{subVerticleProject.projectCode}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.subVerticleProject .errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.subVerticleProject .errors.required\">SubVerticleProject  selection is required</div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n \r\n    <br />\r\n\r\n    <div class=\"row\">\r\n\r\n          <div class=\"form-group col-md\">\r\n        <label for=\"state\"\r\n          >State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <select\r\n          class=\"form-select\"\r\n          formControlName=\"state\"\r\n          (change)=\"changeState($event.target.value)\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.state.invalid && f.state.touched,\r\n            'is-valid':\r\n              f.state.valid && (f.state.dirty || f.state.touched)\r\n          }\"\r\n        >\r\n          <option value=\"\">-- Select state --</option>\r\n          <option *ngFor=\"let state of stateList\" [value]=\"state.stateMasterId\">\r\n            {{state.stateName}}\r\n          </option>\r\n        </select>\r\n        <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.state.errors.required\">State selection is required</div>\r\n        </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"district\"\r\n              >District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"district\"\r\n              (change)=\"changeDistrict($event.target.value)\"\r\n              id=\"district\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.district.invalid && f.district.touched,\r\n                'is-valid':\r\n                  f.district.valid && (f.district.dirty || f.district.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select district --</option>\r\n              <option *ngFor=\"let district of stateWiseDistrictList\" [value]=\"district.districtMasterId\">\r\n                {{district.districtName}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.district.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.district.errors.required\">District selection is required</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"block\"\r\n              >Block of the selected district :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"block\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.block.invalid && f.block.touched,\r\n                'is-valid':\r\n                  f.block.valid && (f.block.dirty || f.block.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select block --</option>\r\n              <option *ngFor=\"let block of blockList\" [value]=\"block.blockMasterId\">\r\n                {{block.blockName}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.block.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.block.errors.required\">Block selection is required</div>\r\n            </div>\r\n          </div>\r\n   \r\n        <div class=\"form-group col-md\">\r\n            <label for=\"branchName\"\r\n              >Branch Name :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter branchName Name\"\r\n              formControlName=\"branchName\"\r\n              style=\"text-transform: capitalize\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.branchName.invalid && f.branchName.touched,\r\n                'is-valid': f.branchName.valid && (f.branchName.dirty || f.branchName.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.branchName.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.branchName.errors.required\">BranchName is required</div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"form-group col-md\">\r\n            <label for=\"branchType\"\r\n              >Branch Type :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"branchType\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.branchType.invalid && f.branchType.touched,\r\n                'is-valid':\r\n                  f.branchType.valid && (f.branchType.dirty || f.branchType.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select branchType --</option>\r\n              <option *ngFor=\"let branchType of branchTypeList\" [value]=\"branchType.branchTypeMasterId\">\r\n                {{branchType.branchTypeDescription}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.branchType.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.branchType.errors.required\">BranchType selection is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n \r\n    <br />\r\n\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-md-3\">\r\n            <label for=\"startDate\"\r\n              >Start Date :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <input\r\n              type=\"date\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter startDate Name\"\r\n              formControlName=\"startDate\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.startDate.invalid && f.startDate.touched,\r\n                'is-valid': f.startDate.valid && (f.startDate.dirty || f.startDate.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.startDate.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.startDate.errors.required\">StartDate is required</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"address\"\r\n              >Address :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter address Name\"\r\n              formControlName=\"address\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.address.invalid && f.address.touched,\r\n                'is-valid': f.address.valid && (f.address.dirty || f.address.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.address.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.address.errors.required\">Address is required</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md-3\">\r\n          <label for=\"pincode\">Pincode:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n          >\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"Enter Pincode\"\r\n            formControlName=\"pincode\"\r\n            maxlength=\"6\"\r\n            minlength=\"6\"\r\n            [ngClass]=\"{\r\n              'is-invalid': f.pincode.invalid && f.pincode.touched,\r\n              'is-valid': f.pincode.valid && (f.pincode.dirty || f.pincode.touched)\r\n            }\"\r\n            (keypress)=\"validationService.onlyInteger($event)\"\r\n          />\r\n          <div *ngIf=\"f.pincode.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.pincode.errors.required\">Pincode is required</div>\r\n            <div *ngIf=\"f.pincode.errors?.minlength\">Minimum 6 digit required</div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n \r\n    <br />\r\n\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"postOffice\"\r\n              >Post Office (P.O.) of branch locality :</label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter postOffice Name\"\r\n              formControlName=\"postOffice\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.postOffice.invalid && f.postOffice.touched,\r\n                'is-valid': f.postOffice.valid && (f.postOffice.dirty || f.postOffice.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.postOffice.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.postOffice.errors.required\">PostOffice is required</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"policeStation\"\r\n              >Police Station (P.S.) of branch locality :</label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter policeStation Name\"\r\n              formControlName=\"policeStation\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.policeStation.invalid && f.policeStation.touched,\r\n                'is-valid': f.policeStation.valid && (f.policeStation.dirty || f.policeStation.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.policeStation.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.policeStation.errors.required\">PoliceStation is required</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"branchLandmark\"\r\n              >Landmark of branch locality :</label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter branchLandmark Name\"\r\n              formControlName=\"branchLandmark\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.branchLandmark.invalid && f.branchLandmark.touched,\r\n                'is-valid': f.branchLandmark.valid && (f.branchLandmark.dirty || f.branchLandmark.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.branchLandmark.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.branchLandmark.errors.required\">BranchLandmark is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <br />\r\n\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"primaryMobile\"\r\n              >Primary Mobile No:&nbsp;<span class=\"text-danger\"\r\n                >*&nbsp;</span\r\n              ></label\r\n            >\r\n            <input\r\n              type=\"\"\r\n              class=\"form-control\"\r\n              maxlength=\"10\"\r\n              placeholder=\"Enter Mobile No\"\r\n              formControlName=\"primaryMobile\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.primaryMobile.invalid && f.primaryMobile.touched,\r\n                'is-valid':\r\n                  f.primaryMobile.valid &&\r\n                  (f.primaryMobile.dirty || f.primaryMobile.touched)\r\n              }\"\r\n              (keypress)=\"validationService.onlyInteger($event)\"\r\n            />\r\n            <div *ngIf=\"f.primaryMobile.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.primaryMobile.errors.required\">\r\n                Primary Mobile No is required\r\n              </div>\r\n              <div *ngIf=\"f.primaryMobile.errors.minlength\">\r\n                Mobile No. should be of 10 digit\r\n              </div>\r\n              <div *ngIf=\"f.primaryMobile.errors.pattern\">\r\n                Mobile No. should be starting with 6, 7, 8 or 9\r\n              </div>\r\n            </div>\r\n        </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"primaryEmail\"\r\n              >Primary Email:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <input\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter Email\"\r\n              formControlName=\"primaryEmail\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.primaryEmail.invalid && f.primaryEmail.touched,\r\n                'is-valid':\r\n                  f.primaryEmail.valid &&\r\n                  (f.primaryEmail.dirty || f.primaryEmail.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.primaryEmail.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.primaryEmail.errors.required\">Email is required</div>\r\n              <div *ngIf=\"f.primaryEmail.errors.email\">Email is not valid</div>\r\n            </div>\r\n          </div>\r\n\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"secondaryMobile\"\r\n              >Phone number of contact person secondary:</label\r\n            >\r\n            <input\r\n              type=\"\"\r\n              class=\"form-control\"\r\n              maxlength=\"10\"\r\n              placeholder=\"Enter secondary Mobile No\"\r\n              formControlName=\"secondaryMobile\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.secondaryMobile.invalid && f.secondaryMobile.touched\r\n              }\"\r\n              (keypress)=\"validationService.onlyInteger($event)\"\r\n            />\r\n            <div *ngIf=\"f.secondaryMobile.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.secondaryMobile.errors.minlength\">\r\n                Mobile No. should be of 10 digit\r\n              </div>\r\n              <div *ngIf=\"f.secondaryMobile.errors.pattern\">\r\n                Mobile No. should be starting with 6, 7, 8 or 9\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"secondaryEmail\"\r\n              >Secondary Email:</label\r\n            >\r\n            <input\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter secondary Email\"\r\n              formControlName=\"secondaryEmail\"\r\n            />\r\n          </div>\r\n    </div>\r\n\r\n    <br />\r\n\r\n    <!-- <div class=\"addEditBtn\">\r\n      <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSave()\">\r\n        Save\r\n      </button>\r\n    </div> -->\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSave()\">\r\n        Save\r\n      </button>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaselineSurveyService } from '../../baseline-survey/baseline-survey.service';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ConfirmationDialogService } from '../../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { SidebarService } from '../../shared/sidebar/sidebar.service';\r\nimport { BranchSetupComponent } from '../branch-setup/branch-setup.component';\r\nimport { RegionSetupComponent } from '../region-setup/region-setup.component';\r\n\r\n@Component({\r\n  selector: 'app-region-branch-home',\r\n  templateUrl: './region-branch-home.component.html',\r\n  styleUrls: ['./region-branch-home.component.css']\r\n})\r\nexport class RegionBranchHomeComponent implements OnInit {\r\n  stateSelectForm: FormGroup;\r\n  stateList: Array<any> = [];\r\n  regionAndBranchList: Array<any> = [];\r\n  stateMasterId: any;\r\n  loader: boolean = true;\r\n  createAccess: boolean;\r\n  updateAccess: boolean;\r\n  deleteAccess: boolean;\r\n\r\n  constructor(private fb: FormBuilder, private httpService: HttpService, private http: HttpClient,\r\n    private baselineService: BaselineSurveyService, private toaster: ToastrService,\r\n    private confirmationDialogService: ConfirmationDialogService, public dialog: MatDialog,\r\n    private sidebarService: SidebarService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}state/getListOfAllStates`, Dto).subscribe((res: any) => {\r\n      this.stateList = res.responseObject.stateList;\r\n      this.stateMasterId = res.responseObject.stateList[0].stateMasterId;\r\n      this.stateSelectForm.get('state').patchValue(this.stateMasterId);\r\n      this.getRegionAndBranchList(this.stateMasterId);\r\n    });\r\n\r\n    this.createAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 29)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'create')?.accessType ? true : false;\r\n\r\n    this.updateAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 29)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'update')?.accessType ? true : false;\r\n\r\n    this.deleteAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 29)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'delete')?.accessType ? true : false;\r\n\r\n  }\r\n\r\n  openCreateRegion() {\r\n    const dialogRef = this.dialog.open(RegionSetupComponent, {\r\n      width: '500px',\r\n      height: '280px',\r\n      data: { editMode: false }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getRegionAndBranchList(this.stateMasterId);\r\n    });\r\n  }\r\n\r\n  openCreateBranch() {\r\n    const dialogRef = this.dialog.open(BranchSetupComponent, {\r\n      width: '95vw',\r\n      maxWidth: '100vw',\r\n      data: { editMode: false }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getRegionAndBranchList(this.stateMasterId);\r\n    });\r\n  }\r\n\r\n  openEditRegion(regionMasterId, regionName) {\r\n    const dialogRef = this.dialog.open(RegionSetupComponent, {\r\n      width: '500px',\r\n      height: '280px',\r\n      data: { editMode: true, regionId: regionMasterId, regionName: regionName }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getRegionAndBranchList(this.stateMasterId);\r\n    });\r\n  }\r\n\r\n  openEditBranch(regionMasterId, branch) {\r\n    const dialogRef = this.dialog.open(BranchSetupComponent, {\r\n      width: '95vw',\r\n      maxWidth: '100vw',\r\n      data: { editMode: true, regionMasterId: regionMasterId, branchDetails: branch }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getRegionAndBranchList(this.stateMasterId);\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.stateSelectForm = this.fb.group({\r\n      state: [''],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.stateSelectForm.controls;\r\n  }\r\n\r\n  changeState(value) {\r\n    this.stateMasterId = value;\r\n    this.getRegionAndBranchList(this.stateMasterId);\r\n  }\r\n\r\n  getRegionAndBranchList(stateMasterId) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      stateMasterId: stateMasterId\r\n    }\r\n    this.loader = false;\r\n    this.http.post(`${this.httpService.baseURL}region/getStateWiseRegionAndBranchList`, Dto).subscribe((res: any) => {\r\n      this.regionAndBranchList = res.responseObject.regionbranchlist;\r\n      this.loader = true;\r\n    }, error => {\r\n      this.showError('Error');\r\n      this.loader = true;\r\n    });\r\n  }\r\n\r\n  deleteRegion(regionMasterId, regionName) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      regionMasterId: regionMasterId,\r\n    }\r\n    if (this.regionAndBranchList.find(x => x.regionMasterId == regionMasterId)?.branchList.length != 0) {\r\n      this.showError('Delete all branch');\r\n    } else {\r\n      this.confirmationDialogService.confirm('', `Do you want to delete ${regionName} ?`).then(() => {\r\n        this.http.post(`${this.httpService.baseURL}region/deleteRegion`, Dto).subscribe((res) => {\r\n          this.showSuccess('Success');\r\n          this.getRegionAndBranchList(this.stateMasterId);\r\n        })\r\n      }).catch(() => '');\r\n    }\r\n\r\n  }\r\n\r\n  deleteBranch(branchId, branchName) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      branchId: branchId,\r\n    }\r\n    this.confirmationDialogService.confirm('', `Do you want to delete ${branchName} ?`).then(() => {\r\n      this.http.post(`${this.httpService.baseURL}branch/deleteBranch`, Dto).subscribe((res: any) => {\r\n        if (res.status == true) {\r\n          this.showSuccess(res.message);\r\n          this.getRegionAndBranchList(this.stateMasterId);\r\n        } else {\r\n          this.showError(res.message)\r\n        }\r\n      })\r\n    }).catch(() => '');\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Deleted', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n}\r\n","<app-loader [hidden]=\"loader\"></app-loader>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"white_box QA_section mb_30\">\r\n\r\n          <div id=\"header-fixed\" style=\"display: flex;\">\r\n            <h2 class=\"page-title\">Region Branch Setup</h2>\r\n        </div>\r\n        \r\n        <div class=\"add_button\" *ngIf=\"createAccess\">\r\n            <button class=\"btn btn-primary\" (click)=\"openCreateBranch()\">\r\n                <i class=\"fas fa-code-branch\" ></i>Create Branch\r\n            </button>    \r\n            &nbsp;&nbsp;&nbsp;\r\n            <button class=\"btn btn-primary\" (click)=\"openCreateRegion()\">\r\n                <i class=\"fa fa-map-marker\" ></i>Create Region\r\n            </button>\r\n        </div>\r\n\r\n        <form class=\"form-signin\" [formGroup]=\"stateSelectForm\">\r\n            <div class=\"row\">\r\n              <div class=\"form-group col-md-4\">\r\n                <label for=\"state\"\r\n                  >Select State :</label\r\n                >\r\n                <select\r\n                  class=\"form-select\"\r\n                  (change)=\"changeState($event.target.value)\"\r\n                  formControlName=\"state\"\r\n                >\r\n                <option value=\"\">-- Select state --</option>\r\n                <option *ngFor=\"let state of stateList\" [value]=\"state.stateMasterId\">\r\n                  {{state.stateName}}\r\n                </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n        </form>\r\n\r\n        <div class=\"white_box_tittle list_header\" >\r\n            <div class=\"QA_table \">\r\n                <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\r\n                    <table\r\n                        class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\r\n                        role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\r\n        \r\n                        <thead>\r\n                            <tr>\r\n                                <th>SL No</th>\r\n                                <th>Region Name</th>\r\n                                <th>Branch Name</th>\r\n                                <th>District</th>\r\n                                <th>Project</th> \r\n                                <th>Status</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n        \r\n                        <tbody>\r\n        \r\n                            <tr *ngFor=\"let item of regionAndBranchList;index as i\">\r\n                                <td>{{i+1}}</td>\r\n                                <td>{{item.regionName}}</td>\r\n                                <td>\r\n                                    <ul *ngFor=\"let branch of item.branchList\">\r\n                                        <li *ngIf=\"branch.stateMasterId == stateMasterId || stateMasterId == undefined\" [title]=\"branch.branchName\">\r\n                                          {{branch.branchName.length > 15 ? (branch.branchName.slice(0,14) + '...') : branch.branchName}}</li>\r\n                                    </ul>\r\n                                </td>\r\n                                <td>\r\n                                  <ul *ngFor=\"let branch of item.branchList\">\r\n                                    <li *ngIf=\"branch.stateMasterId == stateMasterId || stateMasterId == undefined\" [title]=\"branch.districtName\">\r\n                                      {{branch.districtName.length > 15 ? (branch.districtName.slice(0,14) + '...') : branch.districtName}}</li>\r\n                                  </ul>\r\n                                </td>\r\n                                <td>\r\n                                  <ul *ngFor=\"let branch of item.branchList\">\r\n                                    <li *ngIf=\"branch.stateMasterId == stateMasterId || stateMasterId == undefined\" [title]=\"branch.projectName\">\r\n                                      {{branch.projectCode}}</li>\r\n                                  </ul>\r\n                                </td>\r\n                                <td>\r\n                                  <ul *ngFor=\"let branch of item.branchList\">\r\n                                    <li *ngIf=\"branch.stateMasterId == stateMasterId || stateMasterId == undefined\">{{branch.branchActiveFlag == 'Y' ? 'Active' : 'Phased out'}}</li>\r\n                                  </ul>\r\n                                </td>\r\n                                <td>\r\n                                    \r\n                                    <i class=\"fa fa-ellipsis-v fa-lg\" *ngIf=\"updateAccess\" aria-hidden=\"true\" mat-icon-button [matMenuTriggerFor]=\"menu\" title=\"Edit\" ></i>\r\n                                    <mat-menu #menu=\"matMenu\">\r\n                                        <button mat-menu-item (click)=\"openEditRegion(item.regionMasterId,item.regionName)\">Edit {{item.regionName}}</button>\r\n                                        <button mat-menu-item [matMenuTriggerFor]=\"vertebrates\">Edit Branch</button>\r\n                                    </mat-menu>\r\n                                    <mat-menu #vertebrates=\"matMenu\">\r\n                                        <button mat-menu-item *ngFor=\"let branch of item.branchList\" (click)=\"openEditBranch(item.regionMasterId,branch)\">Edit {{branch.branchName}}</button>\r\n                                      </mat-menu>\r\n                                    \r\n                                     &nbsp;\r\n                                    <i class=\"fas fa-trash\" *ngIf=\"deleteAccess\" aria-hidden=\"true\" mat-icon-button [matMenuTriggerFor]=\"menu1\" title=\"Delete\"></i>\r\n                                    <mat-menu #menu1=\"matMenu\">\r\n                                        <button mat-menu-item (click)=\"deleteRegion(item.regionMasterId,item.regionName)\">Delete {{item.regionName}}</button>\r\n                                        <button mat-menu-item [matMenuTriggerFor]=\"vertebrates1\">Delete Branch</button>\r\n                                    </mat-menu>\r\n                                    <mat-menu #vertebrates1=\"matMenu\">\r\n                                        <button mat-menu-item *ngFor=\"let branch of item.branchList\" (click)=\"deleteBranch(branch.branchId,branch.branchName)\">Delete {{branch.branchName}}</button>\r\n                                      </mat-menu>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}