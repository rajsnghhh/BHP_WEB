{"version":3,"sources":["./src/app/modules/role-access/role-access.component.ts","./src/app/modules/role-access/role-access.component.html","./src/app/modules/role-access/role-access-routing.module.ts","./src/app/modules/core/http/http.service.ts","./src/app/modules/role-access/role-access.module.ts","./src/app/modules/role-access/role-access.service.ts"],"names":[],"mappings":"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","file":"modules-role-access-role-access-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpService } from 'src/app/modules/core/http/http.service';\r\nimport { RoleAccessService } from './role-access.service';\r\nimport { DataAccessDTO } from '../core/models/dataAccessDTO.model';\r\nimport { MainFunctionDTO } from '../core/models/mainFunctionDTO.model';\r\nimport { RoleMasterDTO } from '../core/models/roleMasterDTO.model';\r\nimport { RoleFunctionMapDTO } from '../core/models/roleSubFunctionMapDTO.model';\r\nimport { SubFunctionMasterDTO } from '../core/models/subFunctionDTO.model';\r\n\r\n@Component({\r\n  selector: 'app-role-access',\r\n  templateUrl: './role-access.component.html',\r\n  styleUrls: ['./role-access.component.css']\r\n})\r\nexport class RoleAccessComponent implements OnInit {\r\n  roleAccessForm: FormGroup;\r\n  roleList: Array<any> = [];\r\n  roleFunctionMapView: any;\r\n  mainFunctionList: Array<any> = [];\r\n  subFunctionList: Array<any> = [];\r\n  // subFunctionFilterList: any = [];\r\n  // accessType: any;\r\n  // currentIndex: any = -1;\r\n  // main_functions: MainFunctionDTO[];\r\n  // mainFunctionId: any = '';\r\n  // subFunctions: SubFunctionMasterDTO[];\r\n  // subFunctionsDropDown: any = [];\r\n  // selectedSubFunction: string = ''\r\n  // actionTypes: any = [];\r\n  // roleList: RoleMasterDTO[];\r\n  // roleAccessData: RoleFunctionMapDTO[];\r\n  // roleAccessSaveObj: {\r\n  //   dataAccessDTO: DataAccessDTO,\r\n  //   roleFunctionMapDTOList: RoleFunctionMapDTO[];\r\n  // }\r\n  // abcd: string;\r\n  constructor(private httpService: HttpService, private route: ActivatedRoute, private roleService: RoleAccessService,\r\n    private fb: FormBuilder, private toaster: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // Api call for viewing rolefunctionmapview list\r\n    let obj = { dataAccessDTO: this.httpService.dataAccessDTO }\r\n    this.roleService.rolefunctionmapview(obj).subscribe((res) => {\r\n      this.roleFunctionMapView = res.responseObject;\r\n      console.log(this.roleFunctionMapView, 'roleFunctionMapView');\r\n    });\r\n\r\n    this.createForm();\r\n\r\n    // this.route.data.subscribe(data => {\r\n    // this.menuData = data;\r\n    // console.log(data);\r\n    // this.roleAccessData = data.roleAcess.responseObject;\r\n    // console.log(this.roleAccessData);\r\n    // this.roleList = this.roleAccessData.map(item => item.roleMasterDTO);\r\n    // this.main_functions = this.roleAccessData[0].mainFunctionDTOList\r\n    // });\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.roleAccessForm = this.fb.group({\r\n      device: ['', Validators.required],\r\n      mainfunction: ['', Validators.required],\r\n      accessTypeChecked: [true],\r\n      accessTypeUnhecked: ['']\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.roleAccessForm.controls;\r\n  }\r\n\r\n  changeDevice(deviceId) {\r\n    console.log(deviceId);\r\n    if (deviceId == 1) {\r\n      this.mainFunctionList = this.roleFunctionMapView?.webMenu;\r\n      console.log(this.mainFunctionList, ' this.mainFunctionList-web');\r\n    } else {\r\n      this.mainFunctionList = this.roleFunctionMapView?.mobMenus;\r\n      console.log(this.mainFunctionList, ' this.mainFunctionList-mobile');\r\n    }\r\n\r\n\r\n    // this.roleAccessForm.controls.deviceType.setValue('');\r\n\r\n    //   var WData = this.subFunctionList.filter((item) => item.deviceType == 'W');\r\n    //   // this.webList = new Set(WData.map(item => item.subFunctionShortName));\r\n    //   this.webList = WData.filter((v, i, a) => a.findIndex(v2 => (v2.subFunctionShortName === v.subFunctionShortName)) === i);\r\n    //   console.log(this.webList, 'weblist');\r\n\r\n    //   var Mdata = this.subFunctionList.filter((item) => item.deviceType == 'M');\r\n    //   this.mobileList = Mdata.filter((v, i, a) => a.findIndex(v2 => (v2.subFunctionShortName === v.subFunctionShortName)) === i);\r\n    //   console.log(this.mobileList, 'this.mobileList');\r\n\r\n    //   if (deviceId == 1) {\r\n    //     this.subFunctionFilterList = this.webList;\r\n    //   } else if (deviceId == 2) {\r\n    //     this.subFunctionFilterList = this.mobileList;\r\n    //   }\r\n\r\n\r\n  }\r\n\r\n  changeMainFunction(mainFunctionId) {\r\n\r\n\r\n    console.log(mainFunctionId, 'mainFunctionId');\r\n    this.subFunctionList = this.mainFunctionList.find(item => item.mainMenuId == mainFunctionId)?.subMenuDtoList;\r\n    // this.subFunctionFilterList = new Set(this.subFunctionList.map(item => item.subFunctionShortName))\r\n    console.log(this.subFunctionList, ' this.subFunctionList');\r\n    // console.log(this.subFunctionFilterList, 'this.subFunctionFilterList');\r\n\r\n\r\n\r\n    // this.subFunctionList = new Set(this.subFunctions.map(item => item.subFunctionShortName));\r\n    // console.log(this.subFunctionList, 'subFunctionList');\r\n\r\n  }\r\n\r\n  changeSubFunction(subFunctionName) {\r\n    console.log(subFunctionName, 'subFunctionName');\r\n    // this.roleAccessForm.patchValue({\r\n    //   subMenuAccessType: this.roleFunctionMapView.webMenu[1].subMenuDtoList[0].roleAccessDtoList[1].accessDtoList[0].roleActiveFlag == 'Y' ? true : false\r\n    // })\r\n\r\n    var coll = document.getElementsByClassName(\"collapsible\");\r\n    var i;\r\n\r\n    for (i = 0; i < coll.length; i++) {\r\n      coll[i].addEventListener(\"click\", function () {\r\n        // before opening the accordion, you close everything\r\n        // for (var j = 0; j < coll.length; j++) {\r\n        //   coll[j].classList.remove(\"active\");\r\n        //   coll[j].nextElementSibling.style.maxHeight = null;\r\n        // }\r\n\r\n        this.classList.toggle(\"active\");\r\n        var content = this.nextElementSibling;\r\n        if (content.style.maxHeight) {\r\n          content.style.maxHeight = null;\r\n        } else {\r\n          content.style.maxHeight = content.scrollHeight + \"px\";\r\n        }\r\n      });\r\n    }\r\n\r\n    this.roleList = this.subFunctionList.find((role) => role.subMenuName == subFunctionName)?.roleAccessDtoList;\r\n    console.log(this.roleList, 'roleList');\r\n\r\n    // this.accessList = this.roleList.filter((_, index) =>{this.roleList[index].accessDtoList})\r\n    // console.log(this.accessList);\r\n\r\n    // this.accessList = this.roleList.filter((item, index) =>{item})\r\n    // console.log(this.accessList, ' this.accessList ');\r\n\r\n    // this.roleList.forEach((item, i) => {\r\n    //   this.accessList = item.accessDtoList;\r\n    //   console.log(this.accessList, ' this.accessList ');\r\n\r\n    // })\r\n\r\n\r\n\r\n    // this.accessType = this.subFunctions.filter(item => item.subFunctionShortName == subFunctionName);\r\n    // console.log(this.accessType);\r\n\r\n\r\n\r\n    //   this.actionTypes = this.subFunctions.filter(item => item.subFunctionShortName === this.selectedSubFunction)\r\n    //   console.log(this.actionTypes);\r\n    // this.viewCheck(this.checkbox , this.accessList);\r\n\r\n\r\n  }\r\n\r\n  assignAccess(accessDtoList, i, e) {\r\n    console.log(accessDtoList, accessDtoList.subMenuId, 'accessDtoList.subMenuId');\r\n\r\n\r\n    let checked = e.target.checked;\r\n    console.log(checked);\r\n    if (checked == true) {\r\n      accessDtoList.roleActiveFlag = 'Y';\r\n      console.log(accessDtoList, this.roleFunctionMapView);\r\n    } else {\r\n      accessDtoList.roleActiveFlag = 'N';\r\n      console.log(accessDtoList, this.roleFunctionMapView);\r\n    }\r\n\r\n\r\n\r\n    // let item = this.roleFunctionMapView[i].mainFunctionDTOList.find();\r\n    //     item => item.mainFunctionMasterId === this.mainFunctionId\r\n    //   ).subFunctionMasterDTOList.find(item => item.subFunctionMasterId === subFunctionId)\r\n\r\n    //   if (checked)\r\n    //     item.roleActiveFlag = 'Y'\r\n    //   else\r\n    //     item.roleActiveFlag = 'N'\r\n\r\n    //   // console.log(item);\r\n    //   console.log(this.roleAccessData);\r\n\r\n    // } */\r\n    // this.checkbox = e.target.checked;\r\n    // console.log(this.checkbox);\r\n\r\n    // this.accessList = accessDtoList;\r\n    // console.log(this.accessList);\r\n    // if (this.accessList.roleActiveFlag == 'Y') {\r\n    //   this.checkbox = true;\r\n    // }\r\n\r\n\r\n  }\r\n\r\n  saveRoleMap() {\r\n    let roleAccessSaveObj = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      roleFunctionMapDTOList: this.roleFunctionMapView\r\n    }\r\n\r\n    console.log(roleAccessSaveObj);\r\n\r\n    // this.roleService.rolesubfunctionmapsave(roleAccessSaveObj).subscribe((res) => {\r\n    //   console.log(res.responseObject, 'roleFunctionMapsave');\r\n    //   if (res.status == true) {\r\n    //     this.showSuccess(res.message);\r\n    //   }\r\n    //   else {\r\n    //     this.showError(res.message);\r\n    //   }\r\n\r\n    // });\r\n\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Role Menu Map', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  showError(message) {\r\n    this.toaster.error(message, 'Role Menu Map', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n}\r\n\r\n  // changeRole(roleId) {\r\n  //   console.log(roleId);\r\n\r\n  //   this.mainFunctionList = this.roleFunctionMapView.find(item => item.roleMasterDTO.roleMasterId == roleId)?.mainFunctionDTOList;\r\n  //   console.log(this.mainFunctionList, 'mainFunctionList');\r\n  // this.subFunctionList = new Set(this.subFunctions.map(item => item.subFunctionShortName));\r\n  // console.log(this.subFunctionList, 'subFunctionList');\r\n  // this.mainFunctionList.filter((item=> item.))\r\n\r\n  // var submasterList = []\r\n\r\n  // this.mainFunctionList.filter(it=>{it.})\r\n\r\n  // this.mainFunctionList?.forEach((item, i) => {\r\n  //   var ListM = item.subFunctionMasterDTOList.filter(item => item.deviceType === \"M\")\r\n  //   // console.log(ListM,'ListM');\r\n\r\n  //   var li = ListM.filter((v, i, a) => a.findIndex(v2 => (v2.subFunctionShortName === v.subFunctionShortName)) === i);\r\n\r\n\r\n  //   var ListW = item.subFunctionMasterDTOList.filter(item => item.deviceType === \"W\")\r\n  //   console.log(li, 'ListW');\r\n\r\n\r\n\r\n  // });\r\n\r\n\r\n\r\n  // submasterList[0].filter(ite =>{ite.deviceType == \"M\"})\r\n  // console.log(submasterList[0],\"tty1\");\r\n  // var tt = submasterList.forEach(ii => {\r\n\r\n\r\n\r\n  // })\r\n  // console.log(submasterList,\"tty1\");\r\n\r\n  // }\r\n\r\n  // setSubFunctionMenu(item) {\r\n  //   console.log(item);\r\n  //   this.subFunctions = item;\r\n  //   this.subFunctionList = new Set(this.subFunctions.map(item => item.subFunctionShortName));\r\n  //   console.log(this.subFunctionList, 'subFunctionList');\r\n\r\n\r\n  // }\r\n\r\n\r\n\r\n  // getSubFunctions() {\r\n\r\n  //   this.subFunctions = this.roleAccessData[0].mainFunctionDTOList.find(item => item.mainFunctionMasterId === this.mainFunctionId).subFunctionMasterDTOList;\r\n\r\n  //   this.subFunctionsDropDown = new Set(this.subFunctions.map(item => item.subFunctionShortName));\r\n\r\n  // }\r\n\r\n  // createTableRows() {\r\n\r\n  //   this.actionTypes = this.subFunctions.filter(item => item.subFunctionShortName === this.selectedSubFunction)\r\n  //   console.log(this.actionTypes);\r\n  // }\r\n\r\n  // assignAccess(subFunctionId, roleIndex, event) {\r\n  //   let checked = event.target.checked;\r\n  //   let item = this.roleAccessData[roleIndex].mainFunctionDTOList.find(\r\n  //     item => item.mainFunctionMasterId === this.mainFunctionId\r\n  //   ).subFunctionMasterDTOList.find(item => item.subFunctionMasterId === subFunctionId)\r\n\r\n  //   if (checked)\r\n  //     item.roleActiveFlag = 'Y'\r\n  //   else\r\n  //     item.roleActiveFlag = 'N'\r\n\r\n  //   // console.log(item);\r\n  //   console.log(this.roleAccessData);\r\n\r\n  // }\r\n\r\n  // checkStatus(subFunctionId, roleIndex): any {\r\n  //   let flag = this.roleAccessData[roleIndex].mainFunctionDTOList.find(\r\n  //     item => item.mainFunctionMasterId === this.mainFunctionId\r\n  //   ).subFunctionMasterDTOList.find(item => item.subFunctionMasterId === subFunctionId).roleActiveFlag\r\n\r\n  //   // console.log(flag);\r\n  //   if (flag === 'Y')\r\n  //     return true\r\n\r\n  //   else\r\n  //     return false\r\n\r\n  // }\r\n\r\n  // save() {\r\n  //   this.roleAccessSaveObj = {\r\n  //     dataAccessDTO: this.httpService.dataAccessDTO,\r\n  //     roleFunctionMapDTOList: this.roleAccessData\r\n  //   };\r\n\r\n  //   console.log(this.roleAccessSaveObj);\r\n  //   this.httpService.postRequest(`rolesubfunctionmap/save`, this.roleAccessSaveObj).subscribe((data) => {\r\n  //     console.log(data)\r\n  //   },\r\n\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //     })\r\n  // }\r\n\r\n\r\n  // changeRoleFunction(roleId) {\r\n\r\n  //   console.log(roleId);\r\n\r\n  //   this.accessList = this.roleList.find((role) => role.roleMasterId == roleId)?.accessDtoList;\r\n  //   console.log(this.accessList, 'accessDtoList');\r\n\r\n  // }\r\n\r\n\r\n\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"white_box QA_section mb_30\">\r\n\r\n                <div id=\"header-fixed\" style=\"display: flex;\">\r\n                    <h2 class=\"page-title\">Role Menu Map</h2>\r\n                </div>\r\n\r\n                <form class=\"form-signin\" [formGroup]=\"roleAccessForm\">\r\n\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"form-group col-md\" style=\"float:right;\">&nbsp;\r\n                            <label for=\"device\">Device Type :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                            <select class=\"form-select\" (change)=\"changeDevice($event.target.value)\"\r\n                                formControlName=\"device\" id=\"device\" [ngClass]=\"{'is-invalid': f.device.invalid && f.device.touched,'is-valid':\r\n                            f.device.valid && (f.device.dirty || f.device.touched) }\">\r\n                                <option value=\"\">-- Select Device --</option>\r\n                                <option value=\"1\">Web</option>\r\n                                <option value=\"2\">Mobile</option>\r\n                            </select>\r\n                            <div *ngIf=\"f.device.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"f.device.errors.required\">Device selection is required</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md\">\r\n                            <label for=\"mainfunction\">Main Function :&nbsp;<span\r\n                                    class=\"text-danger\">*&nbsp;</span></label>\r\n                            <select class=\"form-select\" (change)=\"changeMainFunction($event.target.value)\"\r\n                                formControlName=\"mainfunction\" id=\"mainfunction\"\r\n                                [ngClass]=\"{ 'is-invalid': f.mainfunction.invalid &&\r\n                                 f.mainfunction.touched, 'is-valid': f.mainfunction.valid && (f.mainfunction.dirty || f.mainfunction.touched)}\">\r\n                                <option value=\"\">-- Select Main Function --</option>\r\n                                <option *ngFor=\"let mainfunction of mainFunctionList\"\r\n                                    value=\"{{mainfunction.mainMenuId}}\"> {{mainfunction.mainMenuName}} </option>\r\n                            </select>\r\n                            <div *ngIf=\"f.mainfunction.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"f.mainfunction.errors.required\">Main Function selection is required</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"row\" *ngFor=\"let item of subFunctionList; index as i\">\r\n                        <button class=\"collapsible\" (click)=\"changeSubFunction($event.target.value)\"\r\n                            value=\"{{item.subMenuName}}\" style=\"padding:10px;\">{{item.subMenuName}}</button>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                        <div class=\"content\" style=\"background: white\">\r\n\r\n                            <div class=\"QA_table\" style=\"width: 990px; margin-left: 10px;\">\r\n                                <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\r\n                                    <table\r\n                                        class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\r\n                                        role=\"grid\" aria-describedby=\"DataTables_Table_0_info\"\r\n                                        style=\"table-layout: fixed; text-align:center; color: #a6d8d8; padding: 0px;\">\r\n                                        <thead id=\"header_fixed\">\r\n                                            <tr style=\"padding: 0px;\">\r\n                                                <th style=\"padding: 0px;\">Role Function</th>\r\n                                                <th style=\"padding: 0px;\">Role Access</th>\r\n                                            </tr>\r\n                                        </thead>\r\n\r\n                                        <tbody>\r\n\r\n                                            <tr *ngFor=\"let items of roleList ; index as i\" style=\"padding: 0px;\">\r\n                                                <td style=\"padding: 0px;\">{{items.roleName}}</td>\r\n                                                <td>\r\n                                                    <table>\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <td\r\n                                                                    *ngFor=\"let itemss of items.accessDtoList ; index as i\">\r\n                                                                    {{itemss.subMenuAccessType}}\r\n                                                                    <input class=\"form-check-input\" type=\"checkbox\"\r\n                                                                        value=\"\" id=\"flexCheckDefault\"\r\n                                                                        formControlName=\"accessTypeChecked\"\r\n                                                                        (change)=\"assignAccess(itemss, i, $event)\"\r\n                                                                        *ngIf=\"itemss.roleActiveFlag == 'Y'\">\r\n\r\n                                                                    <input class=\"form-check-input\" type=\"checkbox\"\r\n                                                                        value=\"\" id=\"flexCheckDefault\"\r\n                                                                        formControlName=\"accessTypeUnhecked\"\r\n                                                                        (change)=\"assignAccess(itemss, i, $event)\"\r\n                                                                        *ngIf=\"itemss.roleActiveFlag == 'N'\">\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form><br>\r\n                \r\n                <div class=\"row\">\r\n                    <div class=\"form-group col-md\" style=\"display: flex; justify-content:flex-start\">\r\n                        <button class=\"btn btn-success\" (click)=\"saveRoleMap()\"\r\n                            [disabled]=\"!roleAccessForm.value.mainfunction\">Save\r\n                            Role Map</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <!-- \r\n    \r\n    <label for=\"\" class=\"col-form-label\">Main Function: </label>\r\n</div>\r\n<div class=\"col-md-4\">\r\n    <select name=\"\" id=\"\" class=\"form-select\" (change)=\"getSubFunctions()\">\r\n        <option value=\"\">-- Main Function --</option>\r\n        <option [ngValue]=\"item.mainFunctionMasterId\" *ngFor=\"let item of roleAccessData[0].mainFunctionDTOList\">\r\n            {{item.mainFunctionName}}</option>\r\n    </select>\r\n</div>\r\n\r\n<div class=\"col\">\r\n    <label for=\"\" class=\"col-form-label\">Sub Function: </label>\r\n</div>\r\n<div class=\"col-md-4\">\r\n    <select name=\"\" id=\"\" class=\"form-select\" (change)=\"createTableRows()\">\r\n        <option value=\"\">-- Sub Function --</option>\r\n        <option [ngValue]=\"item\" *ngFor=\"let item of subFunctionsDropDown\">{{item}}</option>\r\n    </select>\r\n</div>\r\n</div>\r\n\r\n<div class=\"white_box_tittle list_header\">\r\n<div class=\"QA_table \">\r\n    <div class=\"dataTables_wrapper\">\r\n        <table class=\"table no-footer dtr-inline collapsed\" role=\"grid\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th *ngFor=\"let item of roleAccessData\">{{item.roleMasterDTO.roleDescription}}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let action_item of actionTypes; index as i\">\r\n                    <td>{{action_item.accessType.charAt(0).toUpperCase() +\r\n                        action_item.accessType.substring(1)}}\r\n                    </td>\r\n                    <td *ngFor=\"let role_item of roleAccessData; index as role_index\">\r\n                        <label class=\"primary_checkbox d-flex mr-12 \">\r\n                            <input type=\"checkbox\" [checked]=\"checkStatus(\r\n                                    action_item.subFunctionMasterId, role_index)\" (change)=\"assignAccess(\r\n                                    action_item.subFunctionMasterId, role_index, $event)\">\r\n                            <span class=\"checkmark\"></span>\r\n                        </label>\r\n\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"selectedSubFunction\">\r\n<div class=\"col-md-4\">\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"save()\">Save</button>\r\n</div>\r\n</div> \r\n</div>-->","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RoleAccessComponent } from './role-access.component';\r\n\r\nconst routes: Routes = [{ path: '', component: RoleAccessComponent },];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RoleAccessRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { Observable } from 'rxjs';\r\nimport { SidebarService } from '../../shared/sidebar/sidebar.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n  baseURL = environment.apiUrl;\r\n  headers = new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Authorization': 'Basic dXNlcjE6c2VjcmV0MQ=='\r\n\r\n  })\r\n\r\n  dataAccessDTO = {\r\n    userId: this.sidebarService.userId,\r\n    userName: this.sidebarService.loginId,\r\n  }\r\n\r\n  constructor(private http: HttpClient, private sidebarService: SidebarService) { }\r\n\r\n  postRequest(url, body): Observable<any> {\r\n    return this.http.post(this.baseURL + url, body, { headers: this.headers })\r\n  }\r\n\r\n  getChildrenRegister(obj): any {\r\n    return this.http.post(`${this.baseURL}acr/view`, obj)\r\n  }\r\n\r\n  getLactatingMotherRegister(obj): any {\r\n    return this.http.post(`${this.baseURL}lactatingmotherregister/getVillageWiseChildDetails`, obj)\r\n  }\r\n\r\n  getPregnantWomenList(obj): any {\r\n    return this.http.post(`${this.baseURL}pwr/getVillageWisePregnantWomanDetails`, obj)\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RoleAccessRoutingModule } from './role-access-routing.module';\r\nimport { RoleAccessComponent } from './role-access.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [RoleAccessComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RoleAccessRoutingModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class RoleAccessModule { }\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleAccessService {\n  baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  rolefunctionmapview(obj): any {\n    return this.http.post(`${this.baseURL}rolemaster/rolefunctionmap/view`, obj);\n  }\n\n  rolesubfunctionmapsave(obj): any {\n    return this.http.post(`${this.baseURL}rolesubfunctionmap/save`, obj);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}