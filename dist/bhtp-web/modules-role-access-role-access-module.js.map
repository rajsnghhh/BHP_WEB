{"version":3,"sources":["./src/app/modules/role-access/role-access.component.ts","./src/app/modules/role-access/role-access.component.html","./src/app/modules/role-access/role-access-routing.module.ts","./src/app/modules/core/http/http.service.ts","./src/app/modules/role-access/role-access.module.ts","./src/app/modules/role-access/role-access.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;;ICiBpC,6EAEI;IAAA,uDACJ;IAAA,4DAAS;;;IAFL,gHAA2C;IAC3C,0DACJ;IADI,iHACJ;;;IAGA,sEAAoC;IAAA,qFAA0B;IAAA,4DAAM;;;IADxE,0EACI;IAAA,uHAAoE;IACxE,4DAAM;;;IADI,0DAA4B;IAA5B,+FAA4B;;;IA6D9B,sEAAsC;IAAA,uFAA4B;IAAA,4DAAM;;;IAD5E,0EACI;IAAA,8HAAwE;IAC5E,4DAAM;;;IADI,0DAA8B;IAA9B,iGAA8B;;;;;IAlBpD,yEACI;IAAA,6EAC0C;IADd,2VAAiD;IACnC,uDAAyB;IAAA,4DAAS;IAE5E,0EACI;IAAA,0EAAsD;IAAA,kEAClD;IAAA,4EAAoB;IAAA,8EAAmB;IAAA,0EAA0B;IAAA,kEAAO;IAAA,4DAAO;IAAA,4DAAQ;IACvF,8EAMI;IANwB,0VAA4C;IAMpE,8EAAiB;IAAA,+EAAmB;IAAA,4DAAS;IAC7C,8EAAkB;IAAA,+DAAG;IAAA,4DAAS;IAC9B,8EAAkB;IAAA,kEAAM;IAAA,4DAAS;IACrC,4DAAS;IACT,yHAEM;IACV,4DAAM;IACN,qEAAG;IAAA,+IAIH;IAAA,4DAAI;IA0CR,4DAAM;IAEV,4DAAM;;;;IAnEE,0DAAqC;IAArC,0GAAqC;IAAC,0DAAyB;IAAzB,yFAAyB;IAMlB,0DAI3C;IAJ2C,2QAI3C;IAKQ,0DAAqB;IAArB,wFAAqB;;ADnEpD,MAAM,mBAAmB;IAc9B,kCAAkC;IAClC,mCAAmC;IACnC,yBAAyB;IACzB,6BAA6B;IAC7B,wCAAwC;IACxC,uBAAuB;IACvB,kCAAkC;IAClC,kDAAkD;IAClD,IAAI;IAEJ,gBAAgB;IAChB,YAAoB,WAAwB,EAAU,KAAqB,EAAU,WAA8B,EACzG,EAAe;QADL,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAmB;QACzG,OAAE,GAAF,EAAE,CAAa;QAxBzB,aAAQ,GAAe,EAAE,CAAC;QAC1B,wBAAmB,GAAe,EAAE,CAAC;QACrC,qBAAgB,GAAe,EAAE,CAAC;QAClC,YAAO,GAAe,EAAE,CAAC;QACzB,eAAU,GAAe,EAAE,CAAC;QAC5B,0BAAqB,GAAQ,EAAE,CAAC;QAEhC,0BAA0B;QAC1B,qCAAqC;QACrC,4BAA4B;QAC5B,wCAAwC;QACxC,oBAAe,GAAe,EAAE,CAAC;IAaJ,CAAC;IAE9B,QAAQ;QAEN,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,gDAAgD;QAChD,IAAI,IAAI,GAAG,EAAE,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;QAC5D,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC3D,IAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC,cAAc,CAAC;YAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,qBAAqB,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAKH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC/B,wBAAwB;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,yDAAyD;YACzD,sCAAsC;YACtC,yEAAyE;YACzE,qEAAqE;QACvE,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAElC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;IACtC,CAAC;IAED,UAAU,CAAC,MAAM;;QACf,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEpB,IAAI,CAAC,gBAAgB,SAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,IAAI,MAAM,CAAC,0CAAE,mBAAmB,CAAC;QAC9H,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;QACvD,4FAA4F;QAC5F,wDAAwD;QACxD,+CAA+C;QAE/C,yBAAyB;QAEzB,0CAA0C;QAE1C,gDAAgD;QAChD,sFAAsF;QACtF,mCAAmC;QAEnC,uHAAuH;QAGvH,sFAAsF;QACtF,8BAA8B;QAI9B,MAAM;QAIN,yDAAyD;QACzD,wCAAwC;QACxC,yCAAyC;QAIzC,KAAK;QACL,qCAAqC;IAEvC,CAAC;IAED,6BAA6B;IAC7B,uBAAuB;IACvB,8BAA8B;IAC9B,8FAA8F;IAC9F,0DAA0D;IAG1D,IAAI;IAKJ,uCAAuC;IACvC,kCAAkC;IAElC,sGAAsG;IACtG,kCAAkC;IAGlC,qHAAqH;IACrH,wCAAwC;IAIxC,IAAI;IAIJ,sBAAsB;IAEtB,6JAA6J;IAE7J,mGAAmG;IAEnG,IAAI;IAEJ,sBAAsB;IAEtB,gHAAgH;IAChH,mCAAmC;IACnC,IAAI;IAEJ,kDAAkD;IAClD,wCAAwC;IACxC,wEAAwE;IACxE,gEAAgE;IAChE,wFAAwF;IAExF,iBAAiB;IACjB,gCAAgC;IAChC,SAAS;IACT,gCAAgC;IAEhC,0BAA0B;IAC1B,sCAAsC;IAEtC,IAAI;IAEJ,+CAA+C;IAC/C,wEAAwE;IACxE,gEAAgE;IAChE,uGAAuG;IAEvG,0BAA0B;IAC1B,sBAAsB;IACtB,kBAAkB;IAElB,SAAS;IACT,mBAAmB;IAEnB,IAAI;IAEJ,WAAW;IACX,+BAA+B;IAC/B,qDAAqD;IACrD,kDAAkD;IAClD,OAAO;IAEP,yCAAyC;IACzC,0GAA0G;IAC1G,wBAAwB;IACxB,OAAO;IAEP,mBAAmB;IACnB,4BAA4B;IAC5B,SAAS;IACT,IAAI;IAGJ,kBAAkB,CAAC,cAAc;;QAC/B,IAAI,IAAI,GAAG,QAAQ,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;QAC1D,IAAI,CAAC,CAAC;QAGN,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAChC,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAS,CAAC;gBAC1C,qDAAqD;gBACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBACnC,qDAAqD;iBACtD;gBACD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAChC,IAAI,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBACtC,IAAI,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE;oBAC3B,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;iBAChC;qBAAM;oBACL,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;iBACvD;YACH,CAAC,CAAC,CAAC;SACJ;QAGD,sCAAsC;QACtC,oDAAoD;QACpD,uCAAuC;QACvC,6CAA6C;QAC7C,qCAAqC;QACrC,wCAAwC;QACxC,eAAe;QACf,+DAA+D;QAC/D,QAAQ;QACR,QAAQ;QACR,IAAI;QAEJ,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,IAAI,CAAC,eAAe,SAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,IAAI,cAAc,CAAC,0CAAE,wBAAwB,CAAC;QACjI,oGAAoG;QACpG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,uBAAuB,CAAC,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,EAAE,4BAA4B,CAAC,CAAC;QAItE,4FAA4F;QAC5F,wDAAwD;IAE1D,CAAC;IAID,YAAY,CAAC,QAAQ;QACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,wDAAwD;QAE1D,+EAA+E;QAC/E,6EAA6E;QAC7E,6HAA6H;QAC7H,0CAA0C;QAE1C,+EAA+E;QAC/E,gIAAgI;QAChI,qDAAqD;QAErD,yBAAyB;QACzB,iDAAiD;QACjD,gCAAgC;QAChC,oDAAoD;QACpD,MAAM;IAGN,CAAC;;sFAxQU,mBAAmB;mGAAnB,mBAAmB;QCjBhC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEAEI;QAAA,yEACI;QAAA,wEAAuB;QAAA,wEAAa;QAAA,4DAAK;QAC7C,4DAAM;QAEN,0EAEI;QAAA,yEACI;QAAA,yEACI;QAAA,4EAAkB;QAAA,wEAAY;QAAA,2EAA0B;QAAA,mEAAO;QAAA,4DAAO;QAAA,4DAAQ;QAC9E,8EAGI;QAHwB,oJAAU,mCAA+B,IAAC;QAGlE,8EAAiB;QAAA,6EAAiB;QAAA,4DAAS;QAC3C,wHAGS;QACb,4DAAS;QACT,kHAEM;QACV,4DAAM;QAqCV,4DAAM;QAIN,mHAqEM;QAEV,4DAAO;QAAA,iEAGP;QA6IJ,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QArRoC,0DAA4B;QAA5B,yFAA4B;QAML,0DAC6B;QAD7B,kPAC6B;QAErC,0DAAsB;QAAtB,4FAAsB;QAK7C,0DAAmB;QAAnB,mFAAmB;QA4CC,0DAAqB;QAArB,yFAAqB;;6FDlD9D,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEhBD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACO;;;AAE9D,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0EAAmB,EAAE,EAAE,CAAC;AAMhE,MAAM,uBAAuB;;sGAAvB,uBAAuB;wKAAvB,uBAAuB,kBAHzB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,uBAAuB,uFAFxB,4DAAY;6FAEX,uBAAuB;cAJnC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACmB;AAGH;;;;AAKpD,MAAM,WAAW;IAkBtB,YAAoB,IAAgB,EAAU,cAA8B;QAAxD,SAAI,GAAJ,IAAI,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAjB5E,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;QAC7B,YAAO,GAAG,IAAI,gEAAW,CAAC;YACxB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,4BAA4B;SAE9C,CAAC;QACF,YAAO,GAAG,8BAA8B,CAAC;QACzC,kBAAa,GAAG;YACd,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM;YAClC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO;SACtC;QAED,mBAAc,GAAG;YACf,MAAM,EAAE,CAAC;YACT,QAAQ,EAAE,UAAU;SACrB;IAE+E,CAAC;IAEjF,WAAW,CAAC,GAAG,EAAE,IAAI;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;IAC5E,CAAC;IAED,mBAAmB,CAAC,GAAG;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,UAAU,EAAE,GAAG,CAAC;IACvD,CAAC;IAED,0BAA0B,CAAC,GAAG;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,oDAAoD,EAAE,GAAG,CAAC;IACjG,CAAC;IACD,oBAAoB,CAAC,GAAG;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,wCAAwC,EAAE,GAAG,CAAC;IACrF,CAAC;;sEAjCU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEwB;AACT;AACT;AACM;AACM;;AAa1D,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBARlB;YACP,4DAAY;YACZ,mFAAuB;YACvB,kEAAmB;YACnB,wEAAe;YACf,8EAAkB;SACnB;mIAEU,gBAAgB,mBATZ,0EAAmB,aAEhC,4DAAY;QACZ,mFAAuB;QACvB,kEAAmB;QACnB,wEAAe;QACf,8EAAkB;6FAGT,gBAAgB;cAV5B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,0EAAmB,CAAC;gBACnC,OAAO,EAAE;oBACP,4DAAY;oBACZ,mFAAuB;oBACvB,kEAAmB;oBACnB,wEAAe;oBACf,8EAAkB;iBACnB;aACF;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACgB;;;AAKpD,MAAM,iBAAiB;IAG5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;IAEW,CAAC;IAEzC,QAAQ,CAAC,GAAG;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,iBAAiB,EAAE,GAAG,CAAC,CAAC;IAC/D,CAAC;IAED,mBAAmB,CAAC,GAAG;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,iCAAiC,EAAE,GAAG,CAAC,CAAC;IAC/E,CAAC;;kFAXU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"modules-role-access-role-access-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { HttpService } from 'src/app/modules/core/http/http.service';\r\nimport { DataAccessDTO } from '../core/models/dataAccessDTO.model';\r\nimport { MainFunctionDTO } from '../core/models/mainFunctionDTO.model';\r\nimport { RoleMasterDTO } from '../core/models/roleMasterDTO.model';\r\nimport { RoleFunctionMapDTO } from '../core/models/roleSubFunctionMapDTO.model';\r\nimport { SubFunctionMasterDTO } from '../core/models/subFunctionDTO.model';\r\nimport { RoleAccessService } from './role-access.service';\r\n\r\n@Component({\r\n  selector: 'app-role-access',\r\n  templateUrl: './role-access.component.html',\r\n  styleUrls: ['./role-access.component.css']\r\n})\r\nexport class RoleAccessComponent implements OnInit {\r\n  roleAccessForm: FormGroup;\r\n  roleList: Array<any> = [];\r\n  roleFunctionMapView: Array<any> = [];\r\n  mainFunctionList: Array<any> = [];\r\n  webList: Array<any> = [];\r\n  mobileList: Array<any> = [];\r\n  subFunctionFilterList: any = [];\r\n  accessType: any;\r\n  // currentIndex : any = -1\r\n  // main_functions: MainFunctionDTO[];\r\n  // mainFunctionId: any = '';\r\n  // subFunctions: SubFunctionMasterDTO[];\r\n  subFunctionList: Array<any> = [];\r\n  // subFunctionsDropDown: any = [];\r\n  // selectedSubFunction: string = ''\r\n  // actionTypes: any = [];\r\n  // roleList: RoleMasterDTO[];\r\n  // roleAccessData: RoleFunctionMapDTO[];\r\n  // roleAccessSaveObj: {\r\n  //   dataAccessDTO: DataAccessDTO,\r\n  //   roleFunctionMapDTOList: RoleFunctionMapDTO[];\r\n  // }\r\n\r\n  // abcd: string;\r\n  constructor(private httpService: HttpService, private route: ActivatedRoute, private roleService: RoleAccessService,\r\n    private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.createForm();\r\n\r\n    // Api call for viewing rolefunctionmapview list\r\n    let objs = { dataAccessDTO: this.httpService.dataAccessDTO }\r\n    this.roleService.rolefunctionmapview(objs).subscribe((res) => {\r\n      this.roleFunctionMapView = res.responseObject;\r\n      console.log(this.roleFunctionMapView, 'roleFunctionMapView');\r\n    });\r\n\r\n\r\n\r\n\r\n    this.route.data.subscribe(data => {\r\n      // this.menuData = data;\r\n      console.log(data);\r\n      //   this.roleAccessData = data.roleAcess.responseObject;\r\n      //   console.log(this.roleAccessData);\r\n      //   this.roleList = this.roleAccessData.map(item => item.roleMasterDTO);\r\n      //   this.main_functions = this.roleAccessData[0].mainFunctionDTOList\r\n    });\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.roleAccessForm = this.fb.group({\r\n      role: ['', Validators.required],\r\n      device: ['', Validators.required],\r\n      // subfunction: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.roleAccessForm.controls;\r\n  }\r\n\r\n  changeRole(roleId) {\r\n    console.log(roleId);\r\n\r\n    this.mainFunctionList = this.roleFunctionMapView.find(item => item.roleMasterDTO.roleMasterId == roleId)?.mainFunctionDTOList;\r\n    console.log(this.mainFunctionList, 'mainFunctionList');\r\n    // this.subFunctionList = new Set(this.subFunctions.map(item => item.subFunctionShortName));\r\n    // console.log(this.subFunctionList, 'subFunctionList');\r\n    // this.mainFunctionList.filter((item=> item.))\r\n\r\n    // var submasterList = []\r\n\r\n    // this.mainFunctionList.filter(it=>{it.})\r\n\r\n    // this.mainFunctionList?.forEach((item, i) => {\r\n    //   var ListM = item.subFunctionMasterDTOList.filter(item => item.deviceType === \"M\")\r\n    //   // console.log(ListM,'ListM');\r\n\r\n    //   var li = ListM.filter((v, i, a) => a.findIndex(v2 => (v2.subFunctionShortName === v.subFunctionShortName)) === i);\r\n\r\n\r\n    //   var ListW = item.subFunctionMasterDTOList.filter(item => item.deviceType === \"W\")\r\n    //   console.log(li, 'ListW');\r\n\r\n\r\n\r\n    // });\r\n\r\n\r\n\r\n    // submasterList[0].filter(ite =>{ite.deviceType == \"M\"})\r\n    // console.log(submasterList[0],\"tty1\");\r\n    // var tt = submasterList.forEach(ii => {\r\n\r\n\r\n\r\n    // })\r\n    // console.log(submasterList,\"tty1\");\r\n\r\n  }\r\n\r\n  // setSubFunctionMenu(item) {\r\n  //   console.log(item);\r\n  //   this.subFunctions = item;\r\n  //   this.subFunctionList = new Set(this.subFunctions.map(item => item.subFunctionShortName));\r\n  //   console.log(this.subFunctionList, 'subFunctionList');\r\n\r\n\r\n  // }\r\n\r\n\r\n\r\n\r\n  // changeSubFunction(subFunctionName) {\r\n  //   console.log(subFunctionName);\r\n\r\n  //   this.accessType = this.subFunctions.filter(item => item.subFunctionShortName == subFunctionName);\r\n  //   console.log(this.accessType);\r\n\r\n\r\n  //   //   this.actionTypes = this.subFunctions.filter(item => item.subFunctionShortName === this.selectedSubFunction)\r\n  //   //   console.log(this.actionTypes);\r\n\r\n\r\n\r\n  // }\r\n\r\n\r\n\r\n  // getSubFunctions() {\r\n\r\n  //   this.subFunctions = this.roleAccessData[0].mainFunctionDTOList.find(item => item.mainFunctionMasterId === this.mainFunctionId).subFunctionMasterDTOList;\r\n\r\n  //   this.subFunctionsDropDown = new Set(this.subFunctions.map(item => item.subFunctionShortName));\r\n\r\n  // }\r\n\r\n  // createTableRows() {\r\n\r\n  //   this.actionTypes = this.subFunctions.filter(item => item.subFunctionShortName === this.selectedSubFunction)\r\n  //   console.log(this.actionTypes);\r\n  // }\r\n\r\n  // assignAccess(subFunctionId, roleIndex, event) {\r\n  //   let checked = event.target.checked;\r\n  //   let item = this.roleAccessData[roleIndex].mainFunctionDTOList.find(\r\n  //     item => item.mainFunctionMasterId === this.mainFunctionId\r\n  //   ).subFunctionMasterDTOList.find(item => item.subFunctionMasterId === subFunctionId)\r\n\r\n  //   if (checked)\r\n  //     item.roleActiveFlag = 'Y'\r\n  //   else\r\n  //     item.roleActiveFlag = 'N'\r\n\r\n  //   // console.log(item);\r\n  //   console.log(this.roleAccessData);\r\n\r\n  // }\r\n\r\n  // checkStatus(subFunctionId, roleIndex): any {\r\n  //   let flag = this.roleAccessData[roleIndex].mainFunctionDTOList.find(\r\n  //     item => item.mainFunctionMasterId === this.mainFunctionId\r\n  //   ).subFunctionMasterDTOList.find(item => item.subFunctionMasterId === subFunctionId).roleActiveFlag\r\n\r\n  //   // console.log(flag);\r\n  //   if (flag === 'Y')\r\n  //     return true\r\n\r\n  //   else\r\n  //     return false\r\n\r\n  // }\r\n\r\n  // save() {\r\n  //   this.roleAccessSaveObj = {\r\n  //     dataAccessDTO: this.httpService.dataAccessDTO,\r\n  //     roleFunctionMapDTOList: this.roleAccessData\r\n  //   };\r\n\r\n  //   console.log(this.roleAccessSaveObj);\r\n  //   this.httpService.postRequest(`rolesubfunctionmap/save`, this.roleAccessSaveObj).subscribe((data) => {\r\n  //     console.log(data)\r\n  //   },\r\n\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //     })\r\n  // }\r\n\r\n\r\n  changeMainFunction(mainFunctionId) {\r\n    var coll = document.getElementsByClassName(\"collapsible\");\r\n    var i;\r\n\r\n\r\n    for (i = 0; i < coll.length; i++) {\r\n      coll[i].addEventListener(\"click\", function(e) {\r\n        // before opening the accordion, you close everything\r\n        for (var j = 0; j < coll.length; j++) {\r\n          coll[j].classList.remove(\"active\");\r\n          // coll[j].nextElementSibling.style.maxHeight = null;\r\n        }\r\n        this.classList.toggle(\"active\");\r\n        var content = this.nextElementSibling;\r\n        if (content.style.maxHeight) {\r\n          content.style.maxHeight = null;\r\n        } else {\r\n          content.style.maxHeight = content.scrollHeight + \"px\";\r\n        } \r\n      });\r\n    }\r\n\r\n\r\n    // for (i = 0; i < coll.length; i++) {\r\n    //   coll[i].addEventListener(\"click\", function () {\r\n    //     this.classList.toggle(\"active\");\r\n    //     var content = this.nextElementSibling;\r\n    //     if (content.style.maxHeight) {\r\n    //       content.style.maxHeight = null;\r\n    //     } else {\r\n    //       content.style.maxHeight = content.scrollHeight + \"px\";\r\n    //     }\r\n    //   });\r\n    // }\r\n\r\n    console.log(mainFunctionId);\r\n    this.subFunctionList = this.mainFunctionList.find(item => item.mainFunctionMasterId == mainFunctionId)?.subFunctionMasterDTOList;\r\n    // this.subFunctionFilterList = new Set(this.subFunctionList.map(item => item.subFunctionShortName))\r\n    console.log(this.subFunctionList, ' this.subFunctionList');\r\n    console.log(this.subFunctionFilterList, 'this.subFunctionFilterList');\r\n\r\n\r\n\r\n    // this.subFunctionList = new Set(this.subFunctions.map(item => item.subFunctionShortName));\r\n    // console.log(this.subFunctionList, 'subFunctionList');\r\n\r\n  }\r\n\r\n\r\n\r\n  changeDevice(deviceId) {\r\n    console.log(deviceId);\r\n    // this.roleAccessForm.controls.deviceType.setValue('');\r\n\r\n  //   var WData = this.subFunctionList.filter((item) => item.deviceType == 'W');\r\n  //   // this.webList = new Set(WData.map(item => item.subFunctionShortName));\r\n  //   this.webList = WData.filter((v, i, a) => a.findIndex(v2 => (v2.subFunctionShortName === v.subFunctionShortName)) === i);\r\n  //   console.log(this.webList, 'weblist');\r\n\r\n  //   var Mdata = this.subFunctionList.filter((item) => item.deviceType == 'M');\r\n  //   this.mobileList = Mdata.filter((v, i, a) => a.findIndex(v2 => (v2.subFunctionShortName === v.subFunctionShortName)) === i);\r\n  //   console.log(this.mobileList, 'this.mobileList');\r\n\r\n  //   if (deviceId == 1) {\r\n  //     this.subFunctionFilterList = this.webList;\r\n  //   } else if (deviceId == 2) {\r\n  //     this.subFunctionFilterList = this.mobileList;\r\n  //   }\r\n\r\n\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"white_box QA_section mb_30\">\r\n\r\n                <div id=\"header-fixed\" style=\"display: flex;\">\r\n                    <h2 class=\"page-title\">Role Menu Map</h2>\r\n                </div>\r\n\r\n                <form class=\"form-signin\" [formGroup]=\"roleAccessForm\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"role\">Role :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                            <select class=\"form-select\" (change)=\"changeRole($event.target.value)\"\r\n                                formControlName=\"role\" id=\"role\" [ngClass]=\"{ 'is-invalid': f.role.invalid && f.role.touched, \r\n                                'is-valid': f.role.valid && (f.role.dirty || f.role.touched)}\">\r\n                                <option value=\"\">-- Select Role --</option>\r\n                                <option *ngFor=\"let role of roleFunctionMapView\"\r\n                                    value=\"{{role.roleMasterDTO.roleMasterId}}\">\r\n                                    {{role.roleMasterDTO.roleDescription}}\r\n                                </option>\r\n                            </select>\r\n                            <div *ngIf=\"f.role.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"f.role.errors.required\">Role selection is required</div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <!-- <div class=\"form-group col-md\">\r\n                            <label for=\"mainfunction\">Main Function :&nbsp;<span\r\n                                    class=\"text-danger\">*&nbsp;</span></label>\r\n                            <select class=\"form-select\" (change)=\"changeMainFunction($event.target.value)\"\r\n                                formControlName=\"mainfunction\" id=\"mainfunction\" [ngClass]=\"{ 'is-invalid': f.mainfunction.invalid && f.mainfunction.touched, \r\n                                'is-valid': f.mainfunction.valid && (f.mainfunction.dirty || f.mainfunction.touched)}\">\r\n                                <option value=\"\">-- Select Main Function --</option>\r\n                                <option *ngFor=\"let mainfunction of mainFunctionList\"\r\n                                    value=\"{{mainfunction.mainFunctionMasterId}}\">\r\n                                    {{mainfunction.mainFunctionName}}\r\n                                </option>\r\n                            </select>\r\n                            <div *ngIf=\"f.mainfunction.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"f.mainfunction.errors.required\">Main Function selection is required</div>\r\n                            </div>\r\n                        </div> -->\r\n                        <!-- \r\n                        <div class=\"form-group col-md\">\r\n                            <label for=\"subfunction\">Sub Function :&nbsp;<span\r\n                                    class=\"text-danger\">*&nbsp;</span></label>\r\n                            <select class=\"form-select\" (change)=\"changeSubFunction($event.target.value)\"\r\n                                formControlName=\"subfunction\" id=\"subfunction\" [ngClass]=\"{'is-invalid': f.subfunction.invalid && f.subfunction.touched,\r\n                              'is-valid': f.subfunction.valid && (f.subfunction.dirty || f.subfunction.touched)}\">\r\n                                <option value=\"\">-- Select Sub Function --</option>\r\n                                <option *ngFor=\"let subfunction of subFunctionList\" value=\"{{subfunction}}\">\r\n                                    {{subfunction}}\r\n                                </option>\r\n                            </select>\r\n                            <div *ngIf=\"f.subfunction.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"f.subfunction.errors.required\">Sub Function selection is required</div>\r\n                            </div>\r\n                        </div> -->\r\n                    </div>\r\n\r\n                    \r\n\r\n                    <div class=\"row\" *ngFor=\"let item of mainFunctionList; index as i\">\r\n                        <button class=\"collapsible\" (click)=\"changeMainFunction($event.target.value)\"\r\n                            value=\"{{item.mainFunctionMasterId}}\">{{item.mainFunctionName}}</button>\r\n\r\n                        <div class=\"content\">\r\n                            <div class=\"form-group col-md-4\" style=\"float:right;\">&nbsp;\r\n                                <label for=\"device\">Device Type :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <select class=\"form-select\" (change)=\"changeDevice($event.target.value)\"\r\n                                    formControlName=\"device\" id=\"device\" [ngClass]=\"{\r\n                              'is-invalid': f.device.invalid && f.device.touched,\r\n                              'is-valid':\r\n                                f.device.valid && (f.device.dirty || f.device.touched)\r\n                            }\">\r\n                                    <option value=\"\">-- Select device --</option>\r\n                                    <option value=\"1\">Web</option>\r\n                                    <option value=\"2\">Mobile</option>\r\n                                </select>\r\n                                <div *ngIf=\"f.device.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.device.errors.required\">Device selection is required</div>\r\n                                </div>\r\n                            </div>\r\n                            <p>snzfdsbdfjhsjhjfh\r\n                                sahnfjhasdfhkafjkfjk\r\n                                safjgfjahsfjhfsjhfsjsf\r\n                                sadfjgfjhJFHJASHFJFH\r\n                            </p>\r\n                            <!-- <div class=\"QA_table \">\r\n                                <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\r\n                                    <table\r\n                                        class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\r\n                                        role=\"grid\" aria-describedby=\"DataTables_Table_0_info\"\r\n                                        style=\"table-layout: fixed; text-align:center \">\r\n                                        <thead id=\"header_fixed\">\r\n                                            <tr>\r\n                                                <th style=\"padding:0px;\">SubFunction</th>\r\n                                                <th style=\"padding: 0px;\">Device Type</th>\r\n                                                <th style=\"padding: 0px;\">View</th>\r\n                                                <th style=\"padding: 0px;\">Create</th>\r\n                                                <th style=\"padding: 0px;\">Update</th>\r\n                                                <th style=\"padding: 0px;\">Delete</th>\r\n\r\n                                            </tr>\r\n                                        </thead>\r\n\r\n                                        <tbody>\r\n\r\n                                            <tr *ngFor=\"let items of subFunctionFilterList ; index as i\">\r\n                                                <td style=\"padding: 0px;\">{{items.subFunctionShortName}}</td>\r\n                                                <td style=\"padding: 0px;\">{{items.deviceType}}</td>\r\n                                                <td style=\"padding: 0px;\"><input class=\"form-check-input\"\r\n                                                        type=\"checkbox\" value=\"\" id=\"flexCheckDefault\">\r\n                                                </td>\r\n                                                <td style=\"padding: 0px;\"><input class=\"form-check-input\"\r\n                                                        type=\"checkbox\" value=\"\" id=\"flexCheckDefault\">\r\n                                                </td>\r\n                                                <td style=\"padding: 0px;\"><input class=\"form-check-input\"\r\n                                                        type=\"checkbox\" value=\"\" id=\"flexCheckDefault\">\r\n                                                </td>\r\n                                                <td style=\"padding: 0px;\"><input class=\"form-check-input\"\r\n                                                        type=\"checkbox\" value=\"\" id=\"flexCheckDefault\">\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div> -->\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </form><br>\r\n\r\n\r\n                <!-- <button type=\"button\" class=\"collapsible\" *ngFor=\"let item of mainFunctionList; index as i\"\r\n                    value=\"{{item.mainFunctionMasterId}}\" (click)=\"changeMainFunction($event.target.value)\">\r\n                    {{item.mainFunctionName}}</button>\r\n                <div class=\"content\" *ngFor=\"let items of subFunctionList ; index as i\">\r\n                    <p>{{items}}</p>\r\n                </div> -->\r\n\r\n                <!-- <mat-accordion>\r\n\r\n                    <mat-expansion-panel>\r\n                        <mat-expansion-panel-header *ngFor=\"let item of mainFunctionList; index as i\" >\r\n                            <mat-panel-title>\r\n                                {{item.mainFunctionName}}\r\n                            </mat-panel-title>\r\n                            \r\n                        </mat-expansion-panel-header>\r\n                        <mat-panel-description  *ngFor=\"let item of mainFunctionList; index as i\">\r\n                           {{item.mainFunctionName}}\r\n                        </mat-panel-description> -->\r\n\r\n                <!-- <table class=\"table table-striped\" id=\"table_wrapper\">\r\n                            <tbody>\r\n                                <tr>\r\n                                   <th style=\"padding: 0px;\">SubFunction</th>\r\n                                    <th>Device Type</th>\r\n                                    <th>View</th>\r\n                                    <th>Create</th>\r\n                                    <th>Update</th>\r\n                                    <th>Delete</th>\r\n\r\n                                </tr>\r\n                            </tbody>\r\n                            <tbody>\r\n\r\n                                <tr *ngFor=\"let items of subFunctionList ; index as i\">\r\n                                    <td>{{items}}</td>\r\n                                    <td>{{items}}</td>\r\n                                    <td><input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\">\r\n                                    </td>\r\n                                    <td><input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\">\r\n                                    </td>\r\n                                    <td><input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\">\r\n                                    </td>\r\n                                    <td><input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\">\r\n                                    </td>\r\n\r\n                                </tr> -->\r\n\r\n                <!-- <tr *ngFor=\"let items of mainFunctionList[i].subFunctionMasterDTOList; index as i\">\r\n                                        <td style=\"text-align:left;\"> {{items.subFunctionShortName}}\r\n                                        </td>\r\n                                    </tr>  -->\r\n                <!-- </tbody>\r\n                        </table> -->\r\n\r\n\r\n\r\n                <!-- </mat-expansion-panel>\r\n\r\n                </mat-accordion> -->\r\n\r\n\r\n                <!-- <div class=\"white_box_tittle list_header\">\r\n\r\n                    <div class=\"QA_table \">\r\n                        <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\r\n                            <table class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table\"\r\n                                role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed\">\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let item of mainFunctionList; index as i\">\r\n                                        <th style=\"text-align:left; background-color: #499; color:#fff\"\r\n                                            (click)=\"setSubFunctionMenu(item.subFunctionMasterDTOList)\">\r\n                                            {{item.mainFunctionName}}\r\n\r\n                                            <table class=\"table table-striped\" id=\"table_wrapper\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <th>SubFunction</th>\r\n                                                        <th>Device Type</th>\r\n                                                        <th>View</th>\r\n                                                        <th>Create</th>\r\n                                                        <th>Update</th>\r\n                                                        <th>Delete</th>\r\n\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody>\r\n\r\n                                                    <tr *ngFor=\"let items of subFunctionList ; index as i\">\r\n                                                        <td>{{items}}</td>\r\n                                                        <td>{{items}}</td>\r\n                                                        <td><input class=\"form-check-input\" type=\"checkbox\" value=\"\"\r\n                                                                id=\"flexCheckDefault\"></td>\r\n                                                        <td><input class=\"form-check-input\" type=\"checkbox\" value=\"\"\r\n                                                                id=\"flexCheckDefault\"></td>\r\n                                                        <td><input class=\"form-check-input\" type=\"checkbox\" value=\"\"\r\n                                                                id=\"flexCheckDefault\"></td>\r\n                                                        <td><input class=\"form-check-input\" type=\"checkbox\" value=\"\"\r\n                                                                id=\"flexCheckDefault\"></td>\r\n\r\n                                                    </tr>\r\n\r\n                                                    <tr\r\n                                                        *ngFor=\"let items of mainFunctionList[i].subFunctionMasterDTOList; index as i\">\r\n                                                        <td style=\"text-align:left;\"> {{items.subFunctionShortName}}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n                                        </th>\r\n\r\n                                    </tr>\r\n                                </tbody> -->\r\n\r\n\r\n\r\n                <!-- <tbody>\r\n                                    <tr *ngFor=\"let item of accessType; index as i\">\r\n                                        <td>{{i+1}}</td>\r\n                                        <td>{{item.accessType}} </td>\r\n                                        <td>{{item.deviceType}}</td>\r\n                                        <td>{{item.roleActiveFlag}}</td>\r\n                                        <td>--</td>\r\n                                        <td *ngFor=\"let role_item of roleAccessData; index as role_index\">\r\n                                                <label class=\"primary_checkbox d-flex mr-12 \">\r\n                                                    <input type=\"checkbox\" [checked]=\"checkStatus(\r\n                                                            action_item.subFunctionMasterId, role_index)\" (change)=\"assignAccess(\r\n                                                            action_item.subFunctionMasterId, role_index, $event)\">\r\n                                                    <span class=\"checkmark\"></span>\r\n                                                </label>\r\n\r\n                                            </td>\r\n                                    </tr>\r\n                                </tbody> -->\r\n\r\n                <!-- </table>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div> -->\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<!-- \r\n    \r\n    <label for=\"\" class=\"col-form-label\">Main Function: </label>\r\n</div>\r\n<div class=\"col-md-4\">\r\n    <select name=\"\" id=\"\" class=\"form-select\" (change)=\"getSubFunctions()\">\r\n        <option value=\"\">-- Main Function --</option>\r\n        <option [ngValue]=\"item.mainFunctionMasterId\" *ngFor=\"let item of roleAccessData[0].mainFunctionDTOList\">\r\n            {{item.mainFunctionName}}</option>\r\n    </select>\r\n</div>\r\n\r\n<div class=\"col\">\r\n    <label for=\"\" class=\"col-form-label\">Sub Function: </label>\r\n</div>\r\n<div class=\"col-md-4\">\r\n    <select name=\"\" id=\"\" class=\"form-select\" (change)=\"createTableRows()\">\r\n        <option value=\"\">-- Sub Function --</option>\r\n        <option [ngValue]=\"item\" *ngFor=\"let item of subFunctionsDropDown\">{{item}}</option>\r\n    </select>\r\n</div>\r\n</div>\r\n\r\n<div class=\"white_box_tittle list_header\">\r\n<div class=\"QA_table \">\r\n    <div class=\"dataTables_wrapper\">\r\n        <table class=\"table no-footer dtr-inline collapsed\" role=\"grid\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th *ngFor=\"let item of roleAccessData\">{{item.roleMasterDTO.roleDescription}}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let action_item of actionTypes; index as i\">\r\n                    <td>{{action_item.accessType.charAt(0).toUpperCase() +\r\n                        action_item.accessType.substring(1)}}\r\n                    </td>\r\n                    <td *ngFor=\"let role_item of roleAccessData; index as role_index\">\r\n                        <label class=\"primary_checkbox d-flex mr-12 \">\r\n                            <input type=\"checkbox\" [checked]=\"checkStatus(\r\n                                    action_item.subFunctionMasterId, role_index)\" (change)=\"assignAccess(\r\n                                    action_item.subFunctionMasterId, role_index, $event)\">\r\n                            <span class=\"checkmark\"></span>\r\n                        </label>\r\n\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"selectedSubFunction\">\r\n<div class=\"col-md-4\">\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"save()\">Save</button>\r\n</div>\r\n</div> \r\n</div>-->","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RoleAccessComponent } from './role-access.component';\r\n\r\nconst routes: Routes = [{ path: '', component: RoleAccessComponent },];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RoleAccessRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { Observable } from 'rxjs';\r\nimport { SidebarService } from '../../shared/sidebar/sidebar.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n  baseURL = environment.apiUrl;\r\n  headers = new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Authorization': 'Basic dXNlcjE6c2VjcmV0MQ=='\r\n\r\n  })\r\n  testUrl = `http://192.168.149.221:8085/`;\r\n  dataAccessDTO = {\r\n    userId: this.sidebarService.userId,\r\n    userName: this.sidebarService.loginId,\r\n  }\r\n\r\n  dataAccessDTOO = {\r\n    userId: 5,\r\n    userName: 'BK000005'\r\n  }\r\n\r\n  constructor(private http: HttpClient, private sidebarService: SidebarService) { }\r\n\r\n  postRequest(url, body): Observable<any> {\r\n    return this.http.post(this.testUrl + url, body, { headers: this.headers })\r\n  }\r\n\r\n  getChildrenRegister(obj): any {\r\n    return this.http.post(`${this.baseURL}acr/view`, obj)\r\n  }\r\n\r\n  getLactatingMotherRegister(obj): any {\r\n    return this.http.post(`${this.baseURL}lactatingmotherregister/getVillageWiseChildDetails`, obj)\r\n  }\r\n  getPregnantWomenList(obj): any {\r\n    return this.http.post(`${this.baseURL}pwr/getVillageWisePregnantWomanDetails`, obj)\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RoleAccessRoutingModule } from './role-access-routing.module';\r\nimport { RoleAccessComponent } from './role-access.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\n\r\n\r\n@NgModule({\r\n  declarations: [RoleAccessComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RoleAccessRoutingModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatExpansionModule\r\n  ]\r\n})\r\nexport class RoleAccessModule { }\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleAccessService {\n  baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  roleList(obj): any {\n    return this.http.post(`${this.baseURL}rolemaster/list`, obj);\n  }\n\n  rolefunctionmapview(obj): any {\n    return this.http.post(`${this.baseURL}rolemaster/rolefunctionmap/view`, obj);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}