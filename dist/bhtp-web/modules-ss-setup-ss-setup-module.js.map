{"version":3,"sources":["./src/app/modules/ss-setup/ss-setup.module.ts","./src/app/modules/ss-setup/ss.service.ts","./src/app/modules/ss-setup/ss-setup.component.ts","./src/app/modules/ss-setup/ss-setup.component.html","./src/app/modules/ss-setup/ss-setup-routing.module.ts"],"names":[],"mappings":"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","file":"modules-ss-setup-ss-setup-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SsSetupRoutingModule } from './ss-setup-routing.module';\nimport { SsSetupComponent } from './ss-setup.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [SsSetupComponent],\n  imports: [\n    CommonModule,\n    SsSetupRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SsSetupModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SsService {\n  baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  // getStateList(obj): any {\n  //   return this.http.post(`${this.baseURL}state/getListOfAllStates`, obj)\n  // }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpService } from '../core/http/http.service';\nimport { SidebarService } from '../shared/sidebar/sidebar.service';\nimport { SsService } from './ss.service';\n\n@Component({\n  selector: 'app-ss-setup',\n  templateUrl: './ss-setup.component.html',\n  styleUrls: ['./ss-setup.component.css']\n})\nexport class SsSetupComponent implements OnInit {\n  ssForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private httpService: HttpService, private http: HttpClient,\n    private villageService: SsService, private sidebarService: SidebarService) { }\n\n  ngOnInit(): void {\n    this.createForm();\n\n  }\n\n\n  createForm() {\n    this.ssForm = this.fb.group({\n      region: ['', Validators.required],\n      branch: ['', Validators.required],\n      // block: ['', Validators.required],\n      // gp: ['', Validators.required]\n    });\n  }\n\n  get f() {\n    return this.ssForm.controls;\n  }\n\n  changeRegion(value) {\n\n  }\n\n  changeBranch(value) {\n\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"white_box QA_section mb_30\">\n\n                <div id=\"header-fixed\" style=\"display: flex;\">\n                    <h2 class=\"page-title\">SS Setup</h2>\n                </div>\n                <form class=\"form-signin\" [formGroup]=\"ssForm\">\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\">\n                            <label for=\"region\">Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeRegion($event.target.value)\"\n                                formControlName=\"region\" [ngClass]=\"{'is-invalid': f.region.invalid && f.region.touched, 'is-valid': \n                                f.region.valid && (f.region.dirty || f.region.touched)}\">\n                                <option value=\"\">-- Select region --</option>\n                                <!-- <option *ngFor=\"let region of regionList; index as i\" value=\"{{region.regionMasterId}}\">\n                                    {{region.regionName}}</option> -->\n                            </select>\n                            <div *ngIf=\"f.region.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.region.errors.required\">\n                                    Region selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"branch\">Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBranch($event.target.value)\"\n                                formControlName=\"branch\" [ngClass]=\"{'is-invalid': f.branch.invalid && f.branch.touched,\n                                'is-valid': f.branch.valid && (f.branch.dirty || f.branch.touched)}\">\n                                <option value=\"\">-- Select branch --</option>\n                                <!-- <option *ngFor=\"let branch of branchList; index as i\" value=\"{{branch.branchMasterId}}\">\n                                    {{branch.branchName}}</option> -->\n                            </select>\n                            <div *ngIf=\"f.branch.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.branch.errors.required\">\n                                    Branch selection is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SsSetupComponent } from './ss-setup.component';\n\nconst routes: Routes = [{ path: '', component: SsSetupComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SsSetupRoutingModule { }\n"],"sourceRoot":"webpack:///"}