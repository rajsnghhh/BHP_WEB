{"version":3,"sources":["./src/app/modules/ss-training/ss-training.module.ts","./src/app/modules/ss-training/ss-training-routing.module.ts","./src/app/modules/ss-training/ss-training.service.ts","./src/app/modules/ss-training/ss-training.component.ts","./src/app/modules/ss-training/ss-training.component.html"],"names":[],"mappings":"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","file":"modules-ss-training-ss-training-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SsTrainingRoutingModule } from './ss-training-routing.module';\nimport { SsTrainingComponent } from './ss-training.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n@NgModule({\n  declarations: [SsTrainingComponent],\n  imports: [\n    CommonModule,\n    SsTrainingRoutingModule,\n    ReactiveFormsModule,\n    NgxPaginationModule\n  ]\n})\nexport class SsTrainingModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SsTrainingComponent } from './ss-training.component';\n\nconst routes: Routes = [{ path: '', component: SsTrainingComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SsTrainingRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SsTrainingService {\n  baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  listOfBranchesOfARegion(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfBranchesOfARegion`, obj)\n  }\n\n  branchWiseSSTrainingEventList(obj): any {\n    return this.http.post(`${this.baseURL}sstraining/getSSTrainingEventList`, obj)\n  }\n\n  ssTrainingTypeAndTopic(obj): any {\n    return this.http.post(`${this.baseURL}sstraining/getSSTrainingTypeAndTopic`, obj)\n  }\n\n  getSSList(obj): any {\n    return this.http.post(`${this.baseURL}sstraining/getSSList`, obj)\n  }\n\n  createUpdateDeleteSSTraining(obj): any {\n    return this.http.post(`${this.baseURL}sstraining/saveUpdateDeleteSsTrainingEvent`, obj)\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpService } from '../core/http/http.service';\nimport { SidebarService } from '../shared/sidebar/sidebar.service';\nimport { SsTrainingService } from './ss-training.service';\nimport * as moment from 'moment';\nimport { ToastrService } from 'ngx-toastr';\nimport { ValidationService } from '../shared/services/validation.service';\n\n@Component({\n  selector: 'app-ss-training',\n  templateUrl: './ss-training.component.html',\n  styleUrls: ['./ss-training.component.css']\n})\nexport class SsTrainingComponent implements OnInit {\n  viewSSTrainingEventForm: FormGroup;\n  createSSTrainingEventForm: FormGroup;\n  regionList: Array<any> = [];\n  branchList: Array<any> = [];\n  villagesOfBranch: Array<any> = [];\n  regionBranchHide: boolean;\n  modalContent: any;\n  modalReference: any;\n  setFromDate: any;\n  setToDate: any;\n  durationValue: any;\n  regionName: any;\n  regionID: any;\n  upperRoleBranchId: any;\n  lowerRoleBranchId: any;\n  ssEventList: Array<any> = [];\n  eventSSList: Array<any> = [];\n  ssList: Array<any> = [];\n  AllSSList: Array<any> = [];\n  ssTrainingType: Array<any> = [];\n  ssTrainingTopic: Array<any> = [];\n  ssTrainingDataPushPop = [];\n  newCheckedArray: Array<any> = [];\n  checkedData: any;\n  allBranchID: Array<any> = [];\n  indexWiseSSLIST: any;\n  ssIndex: any;\n  checked: any;\n  checkedSS: Array<any> = [];\n  page = 1;\n  pageSize = 6;\n  p: any;\n  afterSaveBranchId: any;\n\n  constructor(private fb: FormBuilder, private http: HttpClient, private sidebarService: SidebarService, private toaster: ToastrService,\n    private httpService: HttpService, private ssTrainingService: SsTrainingService, private modalService: NgbModal, config: NgbModalConfig,\n    private validationService: ValidationService) {\n    config.backdrop = 'static';\n    config.keyboard = false;\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n\n    this.sidebarService.checkRoledetailDTO().then((res: any) => {\n      if (res.regionBranchHide) {\n        this.regionList = res.region;\n        this.regionBranchHide = res.regionBranchHide;\n      } else {\n        this.lowerRoleBranchId = res.branchId;\n        this.afterSaveBranchId = res.branchId\n        this.branchList = res.branchLIST;\n\n        this.allBranchID.push(this.lowerRoleBranchId);\n        console.log(this.lowerRoleBranchId, 'lowerRoleBranchId');\n\n        let dataAccessDTO = JSON.parse(localStorage.getItem('dataAccessDTO'));\n        let Dto = {\n          dataAccessDTO: {\n            userId: dataAccessDTO.userName,\n            userName: dataAccessDTO.userId,\n          },\n          branchId: this.lowerRoleBranchId\n        }\n        this.regionBranchHide = res.regionBranchHide;\n        this.http.post(`${this.sidebarService.baseURL}village/getVillagesOfABranch`, Dto).subscribe((res: any) => {\n          if (res.sessionDTO.status == true) {\n            this.villagesOfBranch = res.responseObject;\n          }\n        });\n\n        let req = { dataAccessDTO: this.httpService.dataAccessDTO, branchId: this.lowerRoleBranchId };\n\n        this.ssTrainingService.branchWiseSSTrainingEventList(req).subscribe((res) => {\n          this.ssEventList = res.responseObject.branchWiseSsTrainingEventList;\n          console.log(this.ssEventList);\n        });\n      }\n    });\n  }\n\n  createForm() {\n    this.viewSSTrainingEventForm = this.fb.group({\n      region: ['', Validators.required],\n      branch: ['', Validators.required],\n    });\n  }\n\n  get l() {\n    return this.viewSSTrainingEventForm.controls;\n  }\n\n  changeRegion(regionId) {\n    this.regionID = regionId; console.log(this.regionID);\n\n    this.regionName = this.regionList.find((reg) => reg.regionMasterId == this.regionID)?.regionName;\n    console.log(this.regionName, 'this.regionName');\n\n    let req = { dataAccessDTO: this.httpService.dataAccessDTO, regionId: this.regionID };\n\n    this.ssTrainingService.listOfBranchesOfARegion(req).subscribe((res) => {\n      this.branchList = res.responseObject;\n      this.branchList.forEach((item) => {\n        this.allBranchID.push(item.branchId)\n        console.log(this.allBranchID);\n      });\n      console.log(this.branchList);\n    });\n\n    this.viewSSTrainingEventForm.controls.branch.setValue('');\n    this.ssEventList = [];\n    if (this.viewSSTrainingEventForm.value.region == '') {\n      this.viewSSTrainingEventForm.controls.branch.setValue('');\n      this.ssEventList = [];\n      this.branchList = [];\n    }\n  }\n\n  changeBranch(branchId) {\n    this.upperRoleBranchId = branchId;\n    this.afterSaveBranchId = branchId\n\n    let req = { dataAccessDTO: this.httpService.dataAccessDTO, branchId: branchId };\n\n    this.ssTrainingService.branchWiseSSTrainingEventList(req).subscribe((res) => {\n      this.ssEventList = res.responseObject.branchWiseSsTrainingEventList;\n      console.log(this.ssEventList);\n    });\n  }\n\n  viewParticipantsDetails(detailsOfParticipants, ssList) {\n    this.eventSSList = ssList;\n    console.log(this.eventSSList, 'ssList');\n\n    this.modalContent = '';\n    this.modalReference = this.modalService.open(detailsOfParticipants, {\n      windowClass: 'detailsOfParticipants',\n    });\n  }\n\n  detailsOfParticipantsModalDismiss() {\n    this.modalReference?.close();\n  }\n\n  createSSTrainingEvent(SSTraining) {\n    console.log(this.lowerRoleBranchId, 'lowerRoleBranchId');\n    console.log(this.upperRoleBranchId, 'upperRoleBranchId');\n    console.log(this.regionID, 'regionID');\n    console.log(this.regionName, 'this.regionName');\n\n    this.modalContent = '';\n    this.modalReference = this.modalService.open(SSTraining, {\n      windowClass: 'SSTraining',\n    });\n    this.ssTrainingFormModal();\n    this.createSSTrainingEventForm.controls['duration'].disable();\n    this.createSSTrainingEventForm.controls['fromDate'].disable();\n    this.createSSTrainingEventForm.controls['toDate'].disable();\n    this.createSSTrainingEventForm.controls['ssbranch'].disable();\n    this.createSSTrainingEventForm.controls['participantType'].disable();\n\n    let req = { dataAccessDTO: this.httpService.dataAccessDTO };\n\n    this.ssTrainingService.ssTrainingTypeAndTopic(req).subscribe((res) => {\n      this.ssTrainingType = res.responseObject.ssTrainingType;\n      this.ssTrainingTopic = res.responseObject.ssTrainingTopic;\n      console.log(this.ssTrainingType, ' this.ssTrainingType');\n      console.log(this.ssTrainingTopic, ' this.ssTrainingTopic');\n    });\n\n  }\n\n  ssTrainingFormModal() {\n    this.createSSTrainingEventForm = this.fb.group({\n      trainingType: ['', Validators.required],\n      duration: [''],\n      fromDate: ['', Validators.required],\n      toDate: [''],\n      trainername: [''],\n      trainerdesignation: [''],\n      trainingtopic: ['', Validators.required],\n      ssbranch: [this.upperRoleBranchId ? this.upperRoleBranchId : this.lowerRoleBranchId, Validators.required],\n      participantType: ['fresh', Validators.required]\n    });\n  }\n\n  get t() {\n    return this.createSSTrainingEventForm.controls;\n  }\n\n  getMinDate() {\n    let today = new Date().toISOString().slice(0, 10);\n    this.setFromDate = moment(today).add(1, \"days\").format(\"YYYY-MM-DD\");\n  }\n\n  expectToDate(e) {\n    console.log(this.durationValue, 'this.durationValue');\n    var mydate = new Date(e);\n    if (mydate.getDay() == 0) {\n      this.showError('Sunday not allowed');\n      this.createSSTrainingEventForm.controls.fromDate.setValue('');\n      this.createSSTrainingEventForm.controls.toDate.setValue('');\n      return;\n    }\n\n    if (this.createSSTrainingEventForm.value.trainingType == 2) {\n      this.setToDate = this.createSSTrainingEventForm.value.fromDate;\n      this.createSSTrainingEventForm.controls.toDate.setValue(this.setToDate);\n      this.createSSTrainingEventForm.value.toDate = this.setToDate;\n      console.log(this.setToDate, 'ifcondition');\n    } else {\n      e = new Date(e.replace(/-/g, \"/\"));\n      var endDate: any, noOfDaysToAdd = (this.durationValue - 1), count = 0;\n      while (count < noOfDaysToAdd) {\n        endDate = new Date(e.setDate(e.getDate() + 1));\n        if (endDate.getDay() != 0) {\n          count++;\n        }\n      }\n      this.setToDate = moment(endDate).format(\"YYYY-MM-DD\");\n      this.createSSTrainingEventForm.controls.toDate.setValue(this.setToDate);\n      this.createSSTrainingEventForm.value.toDate = this.setToDate;\n      console.log(this.setToDate, 'elsecondition');\n    }\n  }\n\n  changeTrainingType(e) {\n    this.getMinDate();\n    this.createSSTrainingEventForm.controls.participantType.setValue('fresh');\n    this.createSSTrainingEventForm.controls.trainingtopic.setValue('');\n\n    if (e == 1) {\n      this.createSSTrainingEventForm.controls.duration.setValue(6);\n      this.createSSTrainingEventForm.value.duration = 6;\n      this.durationValue = this.createSSTrainingEventForm.value.duration;\n      this.changeparticipantType('fresh');\n      this.createSSTrainingEventForm.controls['ssbranch'].enable();\n      this.createSSTrainingEventForm.controls['participantType'].enable();\n    } else if (e == 2) {\n      this.createSSTrainingEventForm.controls.duration.setValue(1);\n      this.createSSTrainingEventForm.value.duration = 1;\n      this.durationValue = this.createSSTrainingEventForm.value.duration;\n      this.changeparticipantType('fresh');\n      this.createSSTrainingEventForm.controls['ssbranch'].enable();\n      this.createSSTrainingEventForm.controls['participantType'].enable();\n    } else if (e == 3) {\n      this.createSSTrainingEventForm.controls.duration.setValue(2);\n      this.createSSTrainingEventForm.value.duration = 2;\n      this.durationValue = this.createSSTrainingEventForm.value.duration;\n      this.changeparticipantType('fresh');\n      this.createSSTrainingEventForm.controls['ssbranch'].enable();\n      this.createSSTrainingEventForm.controls['participantType'].disable();\n    } else if (e == 4) {\n      this.createSSTrainingEventForm.controls.duration.setValue(2);\n      this.createSSTrainingEventForm.value.duration = 2;\n      this.durationValue = this.createSSTrainingEventForm.value.duration;\n      this.changeparticipantType('fresh')\n      this.createSSTrainingEventForm.controls['ssbranch'].enable();\n      this.createSSTrainingEventForm.controls['participantType'].disable();\n    } else {\n      this.ssList = [];\n      this.createSSTrainingEventForm.controls['ssbranch'].disable();\n      this.createSSTrainingEventForm.controls['participantType'].disable();\n    }\n\n    console.log(this.createSSTrainingEventForm.value.duration, 'formdurationvalue');\n    console.log(this.durationValue, 'vardurationvalue');\n    this.createSSTrainingEventForm.controls.fromDate.setValue('');\n    this.createSSTrainingEventForm.controls.toDate.setValue('');\n    if (this.createSSTrainingEventForm.value.trainingType) {\n      this.createSSTrainingEventForm.controls['fromDate'].enable();\n    } else {\n      this.createSSTrainingEventForm.controls['fromDate'].disable();\n      this.createSSTrainingEventForm.controls.duration.setValue('');\n      this.createSSTrainingEventForm.controls.fromDate.setValue('');\n      this.createSSTrainingEventForm.controls.toDate.setValue('');\n    }\n\n  }\n\n  changeparticipantType(participantType) {\n    let ssListObj = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      branchId: this.allBranchID,\n      trainingTypeMasterId: this.createSSTrainingEventForm.value.trainingType\n    }\n\n    this.ssTrainingService.getSSList(ssListObj).subscribe((res: any) => {\n      this.AllSSList = res.responseObject;\n      this.AllSSList = this.AllSSList?.map(({\n        isChecked = false,\n        ...rest\n      }) => ({\n        isChecked,\n        ...rest\n      }));\n      this.ssList = this.AllSSList;\n\n      console.log(this.ssList, 'this.ssList');\n      console.log(this.lowerRoleBranchId, \"lowerRoleBranchId\");\n      console.log(this.upperRoleBranchId, \"upperRoleBranchId\");\n\n\n      this.ssList = this.ssList?.filter((item) => item.branch_id == this.upperRoleBranchId ? this.upperRoleBranchId : this.lowerRoleBranchId);\n      console.log(this.ssList, 'this.specificSSList');\n\n      if (this.createSSTrainingEventForm.value.trainingType == 1 || this.createSSTrainingEventForm.value.trainingType == 2) {\n        if (participantType == 'fresh') {\n          this.ssList = this.ssList?.filter((item) => item.status == 'fresh');\n          console.log(this.ssList, ' freshSSList');\n        } else if (participantType == 'absent') {\n          this.ssList = this.ssList?.filter((item) => item.status != 'fresh');\n          console.log(this.ssList, 'absentSSList');\n        }\n        else {\n          this.ssList = [];\n        }\n      }\n\n    });\n\n  }\n\n  filterSSList(participantType, e) {\n    this.ssList = this.AllSSList;\n    console.log(this.ssList, 'this.ssList');\n    console.log(this.upperRoleBranchId, 'this.upperRoleBranchId ');\n    console.log(this.lowerRoleBranchId, 'this.lowerRoleBranchId');\n\n\n    this.ssList = this.ssList.filter((item) => item.branch_id == e);\n    console.log(this.ssList, 'this.specificSSList');\n\n    if (this.createSSTrainingEventForm.value.trainingType == 1 || this.createSSTrainingEventForm.value.trainingType == 2) {\n      if (participantType == 'fresh') {\n        this.ssList = this.ssList.filter((item) => item.status == 'fresh');\n        console.log(this.ssList, ' freshSSList');\n      } else if (participantType == 'absent') {\n        this.ssList = this.ssList.filter((item) => item.status != 'fresh');\n        console.log(this.ssList, 'absentSSList');\n      }\n      else {\n        this.ssList = [];\n      }\n\n    }\n  }\n\n  changessbranch(e) {\n    if (!this.lowerRoleBranchId) {\n      this.upperRoleBranchId = e;\n    } else {\n      this.lowerRoleBranchId = e;\n    }\n    this.filterSSList('fresh', e);\n    this.createSSTrainingEventForm.controls.participantType.setValue('fresh');\n    if (this.checked) {\n      this.selectSSForTraining(this.indexWiseSSLIST, this.ssIndex, this.checked);\n    }\n  }\n\n  selectSSForTraining(SSLIST, index, e) {\n    this.indexWiseSSLIST = SSLIST;\n    console.log(this.indexWiseSSLIST);\n\n    this.ssIndex = index;\n    this.checked = e;\n\n    if (this.checked == true) {\n      this.AllSSList.find(list => list.swasthya_sahayika_id == this.indexWiseSSLIST?.swasthya_sahayika_id).isChecked = true;\n      console.log(this.AllSSList, 'ALLSSLIST');\n    } else {\n      this.AllSSList.find(list => list.swasthya_sahayika_id == this.indexWiseSSLIST?.swasthya_sahayika_id).isChecked = false;\n      console.log(this.AllSSList, 'ALLSSLIST');\n    }\n\n  }\n\n  disabledSaveTrainingForm() {\n    let flag = true;\n    if (!this.createSSTrainingEventForm.value.trainingType || !this.createSSTrainingEventForm.value.fromDate) {\n      flag = false;\n    }\n    if (this.createSSTrainingEventForm.value.trainingType == 3) {\n      if (!this.createSSTrainingEventForm.value.trainingtopic) {\n        flag = false;\n      }\n    }\n\n    var check = [];\n    check = this.AllSSList?.filter(item => item.isChecked == true);\n    console.log(check?.length);\n    if (check?.length == 0) {\n      flag = false;\n    }\n    return flag;\n  }\n\n  saveSSTrainingForm() {\n    this.ssTrainingDataPushPop = [];\n    this.checkedSS = this.AllSSList.filter(item => item.isChecked == true);\n    this.checkedSS.forEach((item => {\n      this.checkedSS = item.swasthya_sahayika_id;\n      console.log(this.checkedSS, 'checkedSS');\n      this.ssTrainingDataPushPop.push(this.checkedSS);\n      console.log(this.ssTrainingDataPushPop);\n    }));\n\n    let ssSaveObj = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      training_event_master_id: 0,\n      active_flag: 'UA',\n      ss_training_event_type: this.createSSTrainingEventForm.value.trainingType,\n      ss_training_event_topic_master_id: this.createSSTrainingEventForm.value.trainingtopic ?\n        this.createSSTrainingEventForm.value.trainingtopic : 0,\n      ss_training_event_start_date: this.createSSTrainingEventForm.value.fromDate,\n      ss_training_event_end_date: this.setToDate,\n      trainer_name: this.validationService.camelize(this.createSSTrainingEventForm.value.trainername.trim()),\n      trainer_designation: this.validationService.camelize(this.createSSTrainingEventForm.value.trainerdesignation.trim()),\n      branchId: this.upperRoleBranchId ? this.upperRoleBranchId : this.lowerRoleBranchId,\n      ssList: this.ssTrainingDataPushPop\n    }\n\n    console.log(ssSaveObj, 'ssSaveObj');\n\n    // this.ssTrainingService.createUpdateDeleteSSTraining(ssSaveObj).subscribe((res: any) => {\n    //   console.log(res);\n    //   if (res.status == true) {\n    //     this.showSuccess(res.message);\n    //     this.ssTrainingModalDismiss();\n    //     this.changeBranch(this.afterSaveBranchId);\n    //   } else {\n    //     this.showError(res.message);\n    //   }\n\n    // })\n\n  }\n\n  ssTrainingModalDismiss() {\n    // console.log(this.villageId);\n\n    // if (this.villageId) {\n    //   this.editVillData = [];\n    //   this.villageId = 0;\n    //   this.modalReference?.close();\n    // }\n    // else {\n    this.modalReference?.close();\n    this.ssList = [];\n    this.allBranchID = [];\n    this.ssTrainingDataPushPop = [];\n    // this.branchID = '';\n    // this.allBranchID = [];\n    // console.log(this.AllSSList, '   this.AllSSList');\n    // console.log(this.ssList, ' this.ssList', this.branchID, 'this.branchID');\n\n\n    // }\n  }\n\n  editSSTrainingEvents(SSTraining) {\n    console.log('editSSTrainingEvents');\n    this.modalContent = '';\n    this.modalReference = this.modalService.open(SSTraining, {\n      windowClass: 'SSTraining',\n    });\n    this.ssTrainingFormModal();\n  }\n\n  deleteSSTrainingEvents() {\n    console.log('deleteSSTrainingEvents');\n  }\n\n  showSuccess(message) {\n    this.toaster.success(message, 'SS Training Event', {\n      timeOut: 3000,\n    });\n  }\n\n  showError(message) {\n    this.toaster.error(message, 'SS Training Event', {\n      timeOut: 3000,\n    });\n  }\n\n  restrictTypeOfDate() { return false; }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"white_box QA_section mb_30\">\n\n                <div id=\"header-fixed\" style=\"display: flex;\">\n                    <h2 class=\"page-title\">SS Training Events</h2>\n                    <div class=\"form-group col-md\" style=\"display: flex; justify-content:flex-end\"\n                        *ngIf=\"viewSSTrainingEventForm.value.branch || lowerRoleBranchId\">\n                        <i class=\"fas fa-plus-circle\" style=\"cursor: pointer\"\n                            (click)=\"createSSTrainingEvent(SSTraining)\">&nbsp;Schedule SS\n                            Training Event</i>\n                    </div>\n                </div>\n\n                <form class=\"form-signin\" [formGroup]=\"viewSSTrainingEventForm\">\n                    <div class=\"row\" *ngIf=\"regionBranchHide\">\n                        <div class=\"form-group col-md\">\n                            <label for=\"region\">Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeRegion($event.target.value)\"\n                                formControlName=\"region\" id=\"region\" [ngClass]=\"{'is-invalid': l.region.invalid && l.region.touched,\n                              'is-valid': l.region.valid && (l.region.dirty || l.region.touched) }\">\n                                <option value=\"\">-- Select Region --</option>\n                                <option *ngFor=\"let region of regionList\" value=\"{{region.regionMasterId}}\">\n                                    {{region.regionName}}\n                                </option>\n                            </select>\n                            <div *ngIf=\"l.region.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"l.region.errors.required\">Region selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"branch\">Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBranch($event.target.value)\"\n                                formControlName=\"branch\" id=\"branch\" [ngClass]=\"{ 'is-invalid': l.branch.invalid && l.branch.touched,\n                              'is-valid': l.branch.valid && (l.branch.dirty || l.branch.touched) }\">\n                                <option value=\"\">-- Select Branch --</option>\n                                <option *ngFor=\"let branch of branchList\" value=\"{{branch.branchId}}\">\n                                    {{ branch.branchName }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"l.branch.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"l.branch.errors.required\">Branch selection is required</div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n\n                <div class=\"white_box_tittle list_header\">\n\n                    <div class=\"QA_table \">\n                        <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                            <table\n                                class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                                role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed\">\n                                <thead id=\"header-fixed\">\n                                    <tr>\n                                        <th style=\"width:8%;\">SL No</th>\n                                        <th style=\"width:25%;\">Type of<br> Training</th>\n                                        <th style=\"width:20%;\">Start Date</th>\n                                        <th style=\"width:20%;\">End Date</th>\n                                        <th style=\"width:20%;\">SS Participated</th>\n                                        <th style=\"width:20%;\">SS Completed<br> Training</th>\n                                        <th style=\"width:25%;\">Status</th>\n                                        <th style=\"width:20%;\">Participants<br> Details</th>\n                                        <th style=\"width:20%;\">Action</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    <tr\n                                        *ngFor=\"let event of ssEventList | paginate: { itemsPerPage: 5, currentPage: p }; index as i\">\n                                        <td style=\"width:8%;\">{{i+1}}</td>\n                                        <td style=\"width:25%;\">{{event.training_type_name}}</td>\n                                        <td style=\"width:20%;\">{{event.ss_training_event_start_date}}</td>\n                                        <td style=\"width:20%;\">{{event.ss_training_event_end_date}}</td>\n                                        <td style=\"width:20%;\">{{event.ssCount}}</td>\n                                        <td style=\"width:20%;\">{{event.ssCompletedTraining}}</td>\n                                        <td style=\"width:25%;\">{{event.status}} </td>\n                                        <td style=\"width:20%;\"\n                                            (click)=\"viewParticipantsDetails(detailsOfParticipants, event.ssList)\"\n                                            style=\"cursor: pointer; color: blue;\">View</td>\n                                        <td style=\"width: 20%;\">\n                                            <i class=\"fas fa-edit\" title=\"Edit SS Training Events\"\n                                                (click)=\"editSSTrainingEvents(SSTraining)\"> </i>\n                                            <i class=\"fas fa-trash\" title=\"Delete SS Training Events\"\n                                                (click)=\"deleteSSTrainingEvents()\"></i>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <pagination-controls class=\"d-flex justify-content-end p-1 current ngx-pagination1\"\n                                (pageChange)=\"p = $event\" (pageBoundsCorrection)=\"p = $event \">\n                            </pagination-controls>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #detailsOfParticipants>\n\n    <div class=\"modal-content\">\n        <div class=\"modal-header\">\n            <div class=\"row\">\n                <div class=\"col-md\">\n                    <h3 class=\"modal-title\" id=\"modal-basic-title\">Participants Details</h3>\n                </div>\n                <div class=\"col-md\">\n                    <span class=\"closes\" (click)=\"detailsOfParticipantsModalDismiss()\"\n                        style=\"cursor: pointer;font-size: 35px;\">&times;</span>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"modal-body\">\n            <div class=\"white_box_tittle list_header\">\n\n                <div class=\"QA_table \">\n                    <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                        <table\n                            class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                            role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed\">\n\n                            <thead id=\"header-fixed\">\n                                <tr>\n                                    <th style=\"width:5%;\">SL No</th>\n                                    <th style=\"width:25%;\">SS Name</th>\n                                    <th style=\"width:20%;\">Branch</th>\n                                    <th style=\"width:20%;\">Village</th>\n                                    <th style=\"width:20%;\">Staff In Charge</th>\n                                    <th style=\"width:10%;\">Attendance</th>\n                                    <th style=\"width:20%;\">Status</th>\n                                </tr>\n                            </thead>\n\n                            <tbody style=\"text-align: center;\">\n                                <tr *ngFor=\"let eventSS of eventSSList; index as i\">\n                                    <td style=\"width:5%;\">{{i+1}}</td>\n                                    <td style=\"width:25%;\">{{eventSS.swasthya_sahayika_name}}</td>\n                                    <td style=\"width:20%;\">{{eventSS.branch_name}}</td>\n                                    <td style=\"width:20%;\">{{eventSS.village_name}}</td>\n                                    <td style=\"width:20%;\">{{eventSS.user_firstname ? eventSS.user_firstname : '-'}}\n                                        {{eventSS.user_middlename}}\n                                        {{eventSS.user_lastname}}\n                                    </td>\n                                    <td style=\"width:10%;\">{{eventSS.countAttendance ? eventSS.countAttendance : '-'}}\n                                    </td>\n                                    <td style=\"width:20%;\">{{eventSS.status ? eventSS.status : '-'}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n    </div>\n\n</ng-template>\n\n\n<ng-template #SSTraining>\n\n    <div class=\"modal-content\">\n        <div class=\"modal-header\">\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <h3 class=\"modal-title\" id=\"modal-basic-title\">Create SS Training</h3>\n                    <!-- <h3 class=\"modal-title\" id=\"modal-basic-title\" *ngIf=\"villageId\">Edit SS Training</h3> -->\n                </div>\n                <div class=\"col-md-6\">\n                    <h3 style=\"margin-left:100px;\">Region Name:&nbsp;&nbsp;{{regionName ? regionName :'NA'}}</h3>\n                </div>\n                <div class=\"col-md-2\">\n                    <span class=\"close\" (click)=\"ssTrainingModalDismiss()\"\n                        style=\"cursor: pointer;font-size: 35px;\">&times;</span>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"modal-body\">\n            <form class=\"form-signin\" [formGroup]=\"createSSTrainingEventForm\">\n                <div class=\"row\">\n                    <div class=\"form-group col-md\">\n                        <label for=\"trainingType\">Type of Training :&nbsp;<span\n                                class=\"text-danger\">*&nbsp;</span></label>\n                        <select class=\"form-select\" formControlName=\"trainingType\" id=\"trainingType\" [ngClass]=\"{'is-invalid':\n                         t.trainingType.invalid && t.trainingType.touched,\n                          'is-valid': t.trainingType.valid && (t.trainingType.dirty || t.trainingType.touched) }\"\n                            (change)=\"changeTrainingType($event.target.value)\">\n                            <option value=\"\">-- Select Training Type --</option>\n                            <option *ngFor=\"let trainingType of ssTrainingType\"\n                                value=\"{{trainingType.training_type_master_id}}\">\n                                {{trainingType.training_type_name}}\n                            </option>\n                        </select>\n                        <div *ngIf=\"t.trainingType.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"t.trainingType.errors.required\">Type Of Training selection is required</div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group col-md\">\n                        <label for=\"duration\">Duration:</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Training Duration\"\n                            formControlName=\"duration\">\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"form-group col-md\">\n                        <label for=\"fromDate\">From Date :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"fromDate\"\n                            (keydown)=\"restrictTypeOfDate()\" [min]=\"setFromDate\"\n                            (change)=\"expectToDate($event.target.value)\"\n                            [ngClass]=\"{'is-invalid': t.fromDate.invalid &&\n                             t.fromDate.touched, 'is-valid': t.fromDate.valid && (t.fromDate.dirty || t.fromDate.touched) }\">\n                        <div *ngIf=\"t.fromDate.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"t.fromDate.errors.required\">From Date selection is required</div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group col-md\">\n                        <label for=\"toDate\">To Date :</label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"toDate\" [min]=\"setToDate\">\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"form-group col-md\">\n                        <label for=\"trainername\">Trainer Name:</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Trainer Name\" formControlName=\"trainername\"\n                            maxlength=\"45\" (keypress)=\"validationService.onlyAlphabetsAndSpace($event)\"\n                            style=\"text-transform: capitalize\">\n                    </div>\n\n                    <div class=\"form-group col-md\">\n                        <label for=\"trainerdesignation\">Trainer Designation:</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Trainer Designation\"\n                            formControlName=\"trainerdesignation\" maxlength=\"45\"\n                            (keypress)=\"validationService.onlyAlphabetsAndSpace($event)\"\n                            style=\"text-transform: capitalize\">\n                    </div>\n\n                    <div class=\"form-group col-md\" *ngIf=\"createSSTrainingEventForm.value.trainingType== 3\">\n                        <label for=\"trainingtopic\">Topic of Training :&nbsp;<span\n                                class=\"text-danger\">*&nbsp;</span></label>\n                        <select class=\"form-select\" formControlName=\"trainingtopic\" id=\"trainingtopic\" [ngClass]=\"{'is-invalid': t.trainingtopic.invalid && t.trainingtopic.touched,\n                          'is-valid': t.trainingtopic.valid && (t.trainingtopic.dirty || t.trainingtopic.touched) }\">\n                            <option value=\"\">-- Select Training Topic --</option>\n                            <option *ngFor=\"let trainingtopic of ssTrainingTopic\"\n                                value=\"{{trainingtopic.ss_training_event_topic_id}}\">\n                                {{trainingtopic.ss_training_event_topic_name}}\n                            </option>\n                        </select>\n                        <div *ngIf=\"t.trainingtopic.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"t.trainingtopic.errors.required\">Topic of Training selection is required</div>\n                        </div>\n                    </div>\n                </div>\n\n                <fieldset class=\"scheduler-border\">\n                    <legend class=\"scheduler-border\">ADD SS</legend>\n                    <div class=\"row\">\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"ssbranch\">Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changessbranch($event.target.value)\"\n                                formControlName=\"ssbranch\" id=\"ssbranch\" [ngClass]=\"{ 'is-invalid': t.ssbranch.invalid && t.ssbranch.touched,\n                          'is-valid': t.ssbranch.valid && (t.ssbranch.dirty || t.ssbranch.touched) }\"\n                                style=\"width: 99%;\">\n                                <option value=\"\">-- Select Branch --</option>\n                                <option *ngFor=\"let branch of branchList\" value=\"{{branch.branchId}}\">\n                                    {{ branch.branchName }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"t.ssbranch.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"t.ssbranch.errors.required\">Branch selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"participantType\">Participant Type:&nbsp;<span\n                                    class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeparticipantType($event.target.value)\"\n                                formControlName=\"participantType\" id=\"participantType\"\n                                [ngClass]=\"{ 'is-invalid': t.participantType.invalid && t.participantType.touched,\n                          'is-valid': t.participantType.valid && (t.participantType.dirty || t.participantType.touched) }\" style=\"width: 100%;\">\n                                <option value=\"\">-- Select Participant --</option>\n                                <option value=\"fresh\">Fresh SS</option>\n                                <option value=\"absent\">Absent SS</option>\n                            </select>\n                            <div *ngIf=\"t.participantType.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"t.participantType.errors.required\">Participant selection is required</div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div class=\"QA_table \">\n                        <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                            <table\n                                class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                                role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed\">\n\n                                <thead id=\"header-fixed\">\n                                    <tr>\n                                        <th style=\"width:5%;\">SL No</th>\n                                        <th style=\"width:20%;\">SS Name</th>\n                                        <th style=\"width:20%;\">Branch</th>\n                                        <th style=\"width:20%;\">Village</th>\n                                        <th style=\"width:20%;\">Staff In Charge</th>\n                                        <th style=\"width:8%;\">Select</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody style=\"text-align: center;\">\n                                    <tr *ngFor=\"let ss of ssList; index as i\">\n                                        <td style=\"width:5%;\">{{i+1}}</td>\n                                        <td style=\"width:20%;\">{{ss.swasthya_sahayika_name}}</td>\n                                        <td style=\"width:20%;\">{{ss.branch_name}}</td>\n                                        <td style=\"width:20%;\">{{ss.village_name ? ss.village_name : '-'}}</td>\n                                        <td style=\"width:20%;\">{{ss.user_firstname ? ss.user_firstname :'-'}}\n                                            {{ss.user_middlename}}\n                                            {{ss.user_lastname}}\n                                        </td>\n                                        <td style=\"width:8%;\"> <input class=\"form-check-input\" type=\"checkbox\" checked\n                                                value=\"\" id=\"flexCheckDefault\" *ngIf=\"ss.isChecked == true\"\n                                                (change)=\"selectSSForTraining(ss, i, $event.target.checked,ss.swasthya_sahayika_id)\">\n\n                                            <input class=\"form-check-input\" type=\"checkbox\" value=\"\"\n                                                id=\"flexCheckDefault\" *ngIf=\"ss.isChecked == false\"\n                                                (change)=\"selectSSForTraining(ss, i, $event.target.checked,ss.swasthya_sahayika_id)\">\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                </fieldset>\n\n            </form>\n        </div>\n\n        <div class=\"modal-footer\">\n            <div class=\"row\">\n                <button type=\"button\" class=\" btn btn-primary btn-sm\" [disabled]=\"!disabledSaveTrainingForm()\"\n                    (click)=\"saveSSTrainingForm()\">Save</button>\n            </div>\n        </div>\n\n    </div>\n\n</ng-template>"],"sourceRoot":"webpack:///"}