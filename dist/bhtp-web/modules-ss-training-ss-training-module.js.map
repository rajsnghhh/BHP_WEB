{"version":3,"sources":["./src/app/modules/ss-training/ss-training.module.ts","./src/app/modules/ss-training/ss-training-routing.module.ts","./src/app/modules/ss-training/ss-training.service.ts","./src/app/modules/ss-training/ss-training.component.ts","./src/app/modules/ss-training/ss-training.component.html"],"names":[],"mappings":"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","file":"modules-ss-training-ss-training-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SsTrainingRoutingModule } from './ss-training-routing.module';\nimport { SsTrainingComponent } from './ss-training.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [SsTrainingComponent],\n  imports: [\n    CommonModule,\n    SsTrainingRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SsTrainingModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SsTrainingComponent } from './ss-training.component';\n\nconst routes: Routes = [{ path: '', component: SsTrainingComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SsTrainingRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SsTrainingService {\n  baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  listOfBranchesOfARegion(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfBranchesOfARegion`, obj)\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpService } from '../core/http/http.service';\nimport { SidebarService } from '../shared/sidebar/sidebar.service';\nimport { SsTrainingService } from './ss-training.service';\nimport * as moment from 'moment';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-ss-training',\n  templateUrl: './ss-training.component.html',\n  styleUrls: ['./ss-training.component.css']\n})\nexport class SsTrainingComponent implements OnInit {\n  viewSSTrainingEventForm: FormGroup;\n  createSSTrainingEventForm: FormGroup;\n  regionList: Array<any> = [];\n  branchList: Array<any> = [];\n  villagesOfBranch: Array<any> = [];\n  regionBranchHide: boolean;\n  modalContent: any;\n  modalReference: any;\n  setFromDate: any;\n  setToDate: any;\n  durationValue: any;\n  branchID: any;\n\n  constructor(private fb: FormBuilder, private http: HttpClient, private sidebarService: SidebarService, private toaster: ToastrService,\n    private httpService: HttpService, private ssTrainingService: SsTrainingService, private modalService: NgbModal, config: NgbModalConfig) {\n    config.backdrop = 'static';\n    config.keyboard = false;\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n\n    this.sidebarService.checkRoledetailDTO().then((res: any) => {\n      if (res.regionBranchHide) {\n        this.regionList = res.region;\n        this.regionBranchHide = res.regionBranchHide;\n      } else {\n        this.branchID = res.branchId;\n        let dataAccessDTO = JSON.parse(localStorage.getItem('dataAccessDTO'));\n        let Dto = {\n          dataAccessDTO: {\n            userId: dataAccessDTO.userName,\n            userName: dataAccessDTO.userId,\n          },\n          branchId: this.branchID\n        }\n        this.regionBranchHide = res.regionBranchHide;\n        this.http.post(`${this.sidebarService.baseURL}village/getVillagesOfABranch`, Dto).subscribe((res: any) => {\n          if (res.sessionDTO.status == true) {\n            this.villagesOfBranch = res.responseObject;\n          }\n        });\n\n        // let Dato = {\n        //   dataAccessDTO: this.httpService.dataAccessDTO,\n        //   branchId: res.branchId\n        // }\n\n        // this.dailyActivityService.hcoListOfBranch(Dato).subscribe((res: any) => {\n        //   this.hcoList = res.responseObject;\n        //   console.log(this.hcoList, 'hcoList');\n        // });\n      }\n    });\n  }\n\n  createForm() {\n    this.viewSSTrainingEventForm = this.fb.group({\n      region: ['', Validators.required],\n      branch: ['', Validators.required],\n    });\n  }\n\n  get l() {\n    return this.viewSSTrainingEventForm.controls;\n  }\n\n  changeRegion(regionId) {\n    console.log(regionId);\n    let req = { dataAccessDTO: this.httpService.dataAccessDTO, regionId: regionId };\n\n    this.ssTrainingService.listOfBranchesOfARegion(req).subscribe((res) => {\n      this.branchList = res.responseObject;\n      console.log(this.branchList);\n    });\n\n    // this.locationForm.controls.branch.setValue('');\n    // this.locationForm.controls.hco.setValue('');\n    // this.locationForm.controls.fromDate.setValue('');\n    // this.locationForm.controls.toDate.setValue('');\n    // this.darList = [];\n    // this.darViewFamilyList = [];\n    // this.branchList = [];\n    // this.hcoList = [];\n    // if (this.locationForm.value.region == '') {\n    //   this.locationForm.controls.hco.setValue('');\n    //   this.locationForm.controls.fromDate.setValue('');\n    //   this.locationForm.controls.toDate.setValue('');\n    //   this.darList = [];\n    //   this.darViewFamilyList = [];\n    //   this.branchList = [];\n    //   this.hcoList = [];\n    //   this.showError('No Data Found');\n    // }\n  }\n\n  changeBranch(branchId) {\n    this.branchID = branchId;\n    console.log(this.branchID);\n\n  }\n\n  viewParticipantsDetails(detailsOfParticipants) {\n    this.modalContent = '';\n    this.modalReference = this.modalService.open(detailsOfParticipants, {\n      windowClass: 'detailsOfParticipants',\n    });\n\n  }\n\n  detailsOfParticipantsModalDismiss() {\n    this.modalReference?.close();\n  }\n\n  editSSTrainingEvents(SSTraining) {\n    console.log('editSSTrainingEvents');\n    this.modalContent = '';\n    this.modalReference = this.modalService.open(SSTraining, {\n      windowClass: 'SSTraining',\n    });\n    this.ssTrainingFormModal();\n  }\n\n  deleteSSTrainingEvents() {\n    console.log('deleteSSTrainingEvents');\n  }\n\n\n  createSSTrainingEvent(SSTraining) {\n    console.log(this.branchID, 'branchId');\n    this.modalContent = '';\n    this.modalReference = this.modalService.open(SSTraining, {\n      windowClass: 'SSTraining',\n    });\n    this.ssTrainingFormModal();\n    this.createSSTrainingEventForm.controls['duration'].disable();\n    this.createSSTrainingEventForm.controls['toDate'].disable();\n    if (!this.createSSTrainingEventForm.value.trainingType) {\n      this.createSSTrainingEventForm.controls['fromDate'].disable();\n    }\n  }\n\n  ssTrainingFormModal() {\n    this.createSSTrainingEventForm = this.fb.group({\n      trainingType: ['', Validators.required],\n      duration: [''],\n      fromDate: ['', Validators.required],\n      toDate: [''],\n      trainername: [''],\n      trainerdesignation: [''],\n      trainingtopic: ['', Validators.required],\n    });\n  }\n\n  get t() {\n    return this.createSSTrainingEventForm.controls;\n  }\n\n  TrainingType(e) {\n    console.log(e);\n    this.getMinDate();\n\n    if (e == 1) {\n      this.createSSTrainingEventForm.controls.duration.setValue(6);\n      this.createSSTrainingEventForm.value.duration = 6;\n      this.durationValue = this.createSSTrainingEventForm.value.duration;\n    } else if (e == 2) {\n      this.createSSTrainingEventForm.controls.duration.setValue(1);\n      this.createSSTrainingEventForm.value.duration = 1;\n      this.durationValue = this.createSSTrainingEventForm.value.duration;\n    } else if (e == 3) {\n      this.createSSTrainingEventForm.controls.duration.setValue(2);\n      this.createSSTrainingEventForm.value.duration = 2;\n      this.durationValue = this.createSSTrainingEventForm.value.duration;\n    } else if (e == 4) {\n      this.createSSTrainingEventForm.controls.duration.setValue(2);\n      this.createSSTrainingEventForm.value.duration = 2;\n      this.durationValue = this.createSSTrainingEventForm.value.duration;\n    }\n    console.log(this.createSSTrainingEventForm.value.duration, 'formdurationvalue');\n    console.log(this.durationValue, 'vardurationvalue');\n    this.createSSTrainingEventForm.controls.fromDate.setValue('');\n    this.createSSTrainingEventForm.controls.toDate.setValue('');\n    if (this.createSSTrainingEventForm.value.trainingType) {\n      this.createSSTrainingEventForm.controls['fromDate'].enable();\n    } else {\n      this.createSSTrainingEventForm.controls['fromDate'].disable();\n      this.createSSTrainingEventForm.controls.duration.setValue('');\n      this.createSSTrainingEventForm.controls.fromDate.setValue('');\n      this.createSSTrainingEventForm.controls.toDate.setValue('');\n    }\n  }\n\n  getMinDate() {\n    let today = new Date().toISOString().slice(0, 10);\n    this.setFromDate = moment(today).add(1, \"days\").format(\"YYYY-MM-DD\");\n  }\n\n  expectToDate(e) {\n    console.log(this.durationValue, 'this.durationValue');\n    var mydate = new Date(e);\n    if (mydate.getDay() == 0) {\n      this.showError('Sunday not allowed');\n      this.createSSTrainingEventForm.controls.fromDate.setValue('');\n      this.createSSTrainingEventForm.controls.toDate.setValue('');\n      return;\n    }\n\n    if (this.createSSTrainingEventForm.value.trainingType == 2) {\n      this.setToDate = this.createSSTrainingEventForm.value.fromDate;\n      this.createSSTrainingEventForm.controls.toDate.setValue(this.setToDate);\n      console.log(this.setToDate);\n    } else {\n      e = new Date(e.replace(/-/g, \"/\"));\n      var endDate: any, noOfDaysToAdd = (this.durationValue - 1), count = 0;\n      while (count < noOfDaysToAdd) {\n        endDate = new Date(e.setDate(e.getDate() + 1));\n        if (endDate.getDay() != 0) {\n          count++;\n        }\n      }\n      this.setToDate = moment(endDate).format(\"YYYY-MM-DD\");\n      this.createSSTrainingEventForm.controls.toDate.setValue(this.setToDate);\n      this.createSSTrainingEventForm.value.toDate = this.setToDate;\n      console.log(this.setToDate);\n    }\n  }\n\n  ssTrainingModalDismiss() {\n    // console.log(this.villageId);\n\n    // if (this.villageId) {\n    //   this.editVillData = [];\n    //   this.villageId = 0;\n    //   this.modalReference?.close();\n    // }\n    // else {\n    this.modalReference?.close();\n    // }\n  }\n\n  restrictTypeOfDate() { return false; }\n\n  showSuccess(message) {\n    this.toaster.success(message, 'SS Training Event', {\n      timeOut: 3000,\n    });\n  }\n\n  showError(message) {\n    this.toaster.error(message, 'SS Training Event', {\n      timeOut: 2000,\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"white_box QA_section mb_30\">\n\n                <div id=\"header-fixed\" style=\"display: flex;\">\n                    <h2 class=\"page-title\">SS Training Events</h2>\n                    <div class=\"form-group col-md\" style=\"display: flex; justify-content:flex-end\">\n                        <!--   *ngIf=\"viewSSTrainingEventForm.value.branch\" -->\n                        <i class=\"fas fa-plus-circle\" style=\"cursor: pointer\"\n                            (click)=\"createSSTrainingEvent(SSTraining)\">&nbsp;Schedule SS\n                            Training Event</i>\n                    </div>\n                </div>\n\n                <form class=\"form-signin\" [formGroup]=\"viewSSTrainingEventForm\">\n\n                    <div class=\"row\" *ngIf=\"regionBranchHide\">\n                        <div class=\"form-group col-md\">\n                            <label for=\"region\">Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeRegion($event.target.value)\"\n                                formControlName=\"region\" id=\"region\" [ngClass]=\"{'is-invalid': l.region.invalid && l.region.touched,\n                              'is-valid': l.region.valid && (l.region.dirty || l.region.touched) }\">\n                                <option value=\"\">-- Select Region --</option>\n                                <option *ngFor=\"let region of regionList\" value=\"{{region.regionMasterId}}\">\n                                    {{region.regionName}}\n                                </option>\n                            </select>\n                            <div *ngIf=\"l.region.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"l.region.errors.required\">Region selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"branch\">Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBranch($event.target.value)\"\n                                formControlName=\"branch\" id=\"branch\" [ngClass]=\"{ 'is-invalid': l.branch.invalid && l.branch.touched,\n                              'is-valid': l.branch.valid && (l.branch.dirty || l.branch.touched) }\">\n                                <option value=\"\">-- Select Branch --</option>\n                                <option *ngFor=\"let branch of branchList\" value=\"{{branch.branchId}}\">\n                                    {{ branch.branchName }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"l.branch.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"l.branch.errors.required\">Branch selection is required</div>\n                            </div>\n                        </div>\n\n                    </div>\n                </form>\n\n                <div class=\"white_box_tittle list_header\">\n\n                    <div class=\"QA_table \">\n                        <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                            <table\n                                class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                                role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed\">\n\n                                <thead id=\"header-fixed\">\n                                    <tr>\n                                        <th>SL No</th>\n                                        <th>Type of<br> Training</th>\n                                        <th>Start Date</th>\n                                        <th>End Date</th>\n                                        <th>SS Participated</th>\n                                        <th>SS Completed<br> Training</th>\n                                        <th>Status</th>\n                                        <th>Participants<br> Details</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    <tr>\n                                        <td>1</td>\n                                        <td>Basic</td>\n                                        <td>23-08-2022</td>\n                                        <td>25-08-2022</td>\n                                        <td>7</td>\n                                        <td>2</td>\n                                        <td>Ongoing </td>\n                                        <td (click)=\"viewParticipantsDetails(detailsOfParticipants)\"\n                                            style=\"cursor: pointer; color: blue;\">View</td>\n                                        <td>\n                                            <i class=\"fas fa-edit\" title=\"Edit SS Training Events\"\n                                                (click)=\"editSSTrainingEvents(SSTraining)\"> </i>\n                                            <i class=\"fas fa-trash\" title=\"Delete SS Training Events\"\n                                                (click)=\"deleteSSTrainingEvents()\"></i>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #detailsOfParticipants>\n\n    <div class=\"modal-content\">\n        <div class=\"modal-header\">\n            <div class=\"row\">\n                <div class=\"col-md\">\n                    <h3 class=\"modal-title\" id=\"modal-basic-title\">Participants Details</h3>\n                </div>\n                <div class=\"col-md\">\n                    <span class=\"close\" (click)=\"detailsOfParticipantsModalDismiss()\"\n                        style=\"cursor: pointer;font-size: 35px;\">&times;</span>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"modal-body\">\n            <div class=\"white_box_tittle list_header\">\n\n                <div class=\"QA_table \">\n                    <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                        <table\n                            class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                            role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed\">\n\n                            <thead id=\"header-fixed\">\n                                <tr>\n                                    <th>SS Name</th>\n                                    <th>Branch</th>\n                                    <th>Village</th>\n                                    <th>Staff In Charge</th>\n                                    <th>Attendance</th>\n                                    <th>Status</th>\n                                </tr>\n                            </thead>\n\n                            <tbody style=\"text-align: center;\">\n                                <tr>\n                                    <td>Rashmi Singh</td>\n                                    <td>Mednipur</td>\n                                    <td>Kankalitala</td>\n                                    <td>Rony Roy</td>\n                                    <td>Monday</td>\n                                    <td>Ongoing </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n    </div>\n\n</ng-template>\n\n\n<ng-template #SSTraining>\n\n    <div class=\"modal-content\">\n        <div class=\"modal-header\">\n            <div class=\"row\">\n                <div class=\"col-md\">\n                    <h3 class=\"modal-title\" id=\"modal-basic-title\">Create SS Training</h3>\n                    <!-- <h3 class=\"modal-title\" id=\"modal-basic-title\" *ngIf=\"villageId\">Edit SS Training</h3> -->\n                </div>\n                <div class=\"col-md\">\n                    <span class=\"close\" (click)=\"ssTrainingModalDismiss()\"\n                        style=\"cursor: pointer;font-size: 35px;\">&times;</span>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"modal-body\">\n            <form class=\"form-signin\" [formGroup]=\"createSSTrainingEventForm\">\n                <div class=\"row\">\n                    <div class=\"form-group col-md\">\n                        <label for=\"trainingType\">Type of Training :&nbsp;<span\n                                class=\"text-danger\">*&nbsp;</span></label>\n                        <select class=\"form-select\" formControlName=\"trainingType\" id=\"trainingType\" [ngClass]=\"{'is-invalid':\n                         t.trainingType.invalid && t.trainingType.touched,\n                          'is-valid': t.trainingType.valid && (t.trainingType.dirty || t.trainingType.touched) }\"\n                            (change)=\"TrainingType($event.target.value)\">\n                            <option value=\"\">-- Select Training Type --</option>\n                            <option value=\"1\">Basic Training</option>\n                            <option value=\"2\">Technical Training</option>\n                            <option value=\"3\">Refreshers Training</option>\n                            <option value=\"4\">Follow Up training</option>\n                            <!-- <option *ngFor=\"let trainingType of trainingTypeList\" value=\"{{trainingType.regionMasterId}}\">\n                                {{region.regionName}}\n                            </option> -->\n                        </select>\n                        <div *ngIf=\"t.trainingType.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"t.trainingType.errors.required\">Type Of Training selection is required</div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group col-md\">\n                        <label for=\"duration\">Duration:</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Training Duration\"\n                            formControlName=\"duration\">\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"form-group col-md\">\n                        <label for=\"fromDate\">From Date :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"fromDate\"\n                            (keydown)=\"restrictTypeOfDate()\" [min]=\"setFromDate\"\n                            (change)=\"expectToDate($event.target.value)\"\n                            [ngClass]=\"{'is-invalid': t.fromDate.invalid &&\n                             t.fromDate.touched, 'is-valid': t.fromDate.valid && (t.fromDate.dirty || t.fromDate.touched) }\">\n                        <div *ngIf=\"t.fromDate.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"t.fromDate.errors.required\">From Date selection is required</div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group col-md\">\n                        <label for=\"toDate\">To Date :</label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"toDate\" [min]=\"setToDate\">\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"form-group col-md\">\n                        <label for=\"trainername\">Trainer Name:</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Trainer Name\" formControlName=\"trainername\"\n                            maxlength=\"45\" style=\"text-transform: capitalize\">\n                    </div>\n\n                    <div class=\"form-group col-md\">\n                        <label for=\"trainerdesignation\">Trainer Designation:</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Trainer Designation\"\n                            formControlName=\"trainerdesignation\" maxlength=\"45\" style=\"text-transform: capitalize\">\n                    </div>\n\n                    <div class=\"form-group col-md\">\n                        <label for=\"trainingtopic\">Topic of training :&nbsp;<span\n                                class=\"text-danger\">*&nbsp;</span></label>\n                        <!-- (change)=\"trainingtopic($event.target.value)\" -->\n                        <select class=\"form-select\" formControlName=\"trainingtopic\" id=\"trainingtopic\" [ngClass]=\"{'is-invalid': t.trainingtopic.invalid && t.trainingtopic.touched,\n                          'is-valid': t.trainingtopic.valid && (t.trainingtopic.dirty || t.trainingtopic.touched) }\">\n                            <option value=\"\">-- Select Training Topic --</option>\n                            <!-- <option *ngFor=\"let trainingtopic of trainingtopicList\" value=\"{{trainingtopic.regionMasterId}}\">\n                                {{region.regionName}}\n                            </option> -->\n                        </select>\n                        <div *ngIf=\"t.trainingtopic.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"t.trainingtopic.errors.required\">Training Topic selection is required</div>\n                        </div>\n                    </div>\n                </div>\n\n            </form>\n\n        </div>\n\n        <!-- <div class=\"modal-footer\">\n            <div class=\"row\">\n                <button type=\"button\" class=\" btn btn-primary bttn\" (click)=\"saveVillForm()\">Save</button>\n            </div>\n        </div> -->\n\n    </div>\n\n</ng-template>"],"sourceRoot":"webpack:///"}