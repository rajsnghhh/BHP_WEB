{"version":3,"sources":["./src/app/modules/ss-unmap/ss-unmap.module.ts","./src/app/modules/ss-unmap/ss-unmap.component.ts","./src/app/modules/ss-unmap/ss-unmap.component.html","./src/app/modules/ss-unmap/ss-unmap.service.ts","./src/app/modules/ss-unmap/ss-unmap-routing.module.ts"],"names":[],"mappings":"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","file":"modules-ss-unmap-ss-unmap-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SsUnmapRoutingModule } from './ss-unmap-routing.module';\nimport { SsUnmapComponent } from './ss-unmap.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n\n@NgModule({\n  declarations: [SsUnmapComponent],\n  imports: [\n    CommonModule,\n    SsUnmapRoutingModule,\n    ReactiveFormsModule,\n    NgxPaginationModule\n  ]\n})\nexport class SsUnmapModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from '../core/http/http.service';\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\nimport { SsUnmapService } from './ss-unmap.service';\n\n@Component({\n  selector: 'app-ss-unmap',\n  templateUrl: './ss-unmap.component.html',\n  styleUrls: ['./ss-unmap.component.css']\n})\nexport class SsUnmapComponent implements OnInit {\n  ssUnmapForm: FormGroup;\n  regionList: Array<any> = [];\n  branchList: Array<any> = [];\n  hcouserList: Array<any> = [];\n  ssList: Array<any> = [];\n  page = 1;\n  pageSize = 5;\n  p: any;\n  branchId: any;\n\n\n  constructor(private fb: FormBuilder, private httpService: HttpService, private ssUnmapService: SsUnmapService,\n    private confirmationDialogService: ConfirmationDialogService, private toaster: ToastrService,) { }\n\n  ngOnInit(): void {\n\n    this.createForm();\n\n    let obj = { dataAccessDTO: this.httpService.dataAccessDTO }\n    this.ssUnmapService.listOfRegionsOfUser(obj).subscribe((res) => {\n      this.regionList = res.responseObject;\n      console.log(this.regionList);\n    });\n  }\n\n  changeRegion(regionId) {\n    console.log(regionId);\n\n    let req = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      regionId: regionId,\n    };\n    this.ssUnmapService.listOfBranchesOfARegion(req).subscribe((res) => {\n      this.branchList = res.responseObject;\n      console.log(this.branchList, 'this.branchList');\n\n    }, (error) => {\n      this.branchList = null;\n    }\n    );\n    this.ssUnmapForm.controls.branch.setValue('')\n    this.ssList = [];\n    if (this.ssUnmapForm.value.region == '') {\n      this.ssUnmapForm.controls.branch.setValue('');\n      this.ssList = [];\n    }\n  }\n\n  changeBranch(branchId) {\n\n    console.log(branchId);\n    this.branchId = branchId;\n\n    let obj = { dataAccessDTO: this.httpService.dataAccessDTO, branchId: branchId };\n    this.ssUnmapService.listOfswasthyasahayika(obj).subscribe((res) => {\n      this.ssList = res.responseObject?.ssDtoList;\n      console.log(this.ssList);\n    });\n\n    this.ssList = [];\n    if (this.ssUnmapForm.value.branch == '') {\n      this.ssList = [];\n    }\n\n  }\n\n  createForm() {\n    this.ssUnmapForm = this.fb.group({\n      region: ['', Validators.required],\n      branch: ['', Validators.required]\n    });\n  }\n\n  get f() {\n    return this.ssUnmapForm.controls;\n  }\n\n  unmapSS(e, ssId, i) {\n    console.log(ssId, e.target.value, e.target.checked);\n\n    this.confirmationDialogService.confirm('', 'Are you sure you want to unmap SS from all mapped Household and User')\n      .then(() => this.unmap(ssId, i)\n      )\n      .catch(() => e.target.checked = false);\n\n  }\n\n\n  unmap(ssId, i) {\n    let obj = { dataAccessDTO: this.httpService.dataAccessDTO, ssId: ssId };\n    console.log(obj);\n\n    this.ssUnmapService.unmapSsFromAllMappedHhAndUser(obj).subscribe((res) => {\n      console.log(res);\n      if (res.status == true) {\n        this.showSuccess(res.message);\n        let obj = { dataAccessDTO: this.httpService.dataAccessDTO, branchId: this.branchId };\n        this.ssUnmapService.listOfswasthyasahayika(obj).subscribe((res) => {\n          this.ssList = res.responseObject?.ssDtoList;\n          console.log(this.ssList);\n        });\n\n      };\n    });\n\n  }\n\n  showSuccess(message) {\n    this.toaster.success(message, 'Unmap SS', {\n      timeOut: 10000,\n    });\n  }\n\n  showError(message) {\n    this.toaster.error(message, 'Unmap SS', {\n      timeOut: 5000,\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"white_box QA_section mb_30\">\n\n                <div id=\"header-fixed\" style=\"display: flex;\">\n                    <h2 class=\"page-title\">SS-UnMap</h2>\n                </div>\n\n                <form class=\"form-signin\" [formGroup]=\"ssUnmapForm\">\n\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\">\n                            <label for=\"region\">Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeRegion($event.target.value)\"\n                                formControlName=\"region\" id=\"region\" [ngClass]=\"{ 'is-invalid': f.region.invalid && f.region.touched, \n                                'is-valid': f.region.valid && (f.region.dirty || f.region.touched)}\">\n                                <option value=\"\">-- Select Region --</option>\n                                <option *ngFor=\"let region of regionList\" value=\"{{region.regionMasterId}}\">\n                                    {{region.regionName}}\n                                </option>\n                            </select>\n                            <div *ngIf=\"f.region.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.region.errors.required\">Region selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"branch\">Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBranch($event.target.value)\"\n                                formControlName=\"branch\" id=\"branch\" [ngClass]=\"{'is-invalid': f.branch.invalid && f.branch.touched,\n                              'is-valid': f.branch.valid && (f.branch.dirty || f.branch.touched)}\">\n                                <option value=\"\">-- Select Branch --</option>\n                                <option *ngFor=\"let branch of branchList\" value=\"{{branch.branchId}}\">\n                                    {{ branch.branchName }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"f.branch.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.branch.errors.required\">Branch selection is required</div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div class=\"white_box_tittle list_header\">\n\n                        <div class=\"QA_table \">\n                            <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                                <table\n                                    class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                                    role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\n\n                                    <thead id=\"header-fixed\">\n                                        <tr>\n                                            <th>SL<br>No</th>\n                                            <th>Village Name</th>\n                                            <th>Staff In Charge</th>\n                                            <th>SS Name</th>\n                                            <th>Unmap SS</th>\n                                        </tr>\n                                    </thead>\n\n                                    <tbody>\n\n                                        <tr\n                                            *ngFor=\"let item of ssList | paginate: { itemsPerPage: 5, currentPage: p }; index as i\">\n                                            <td>{{(p-1)*5+i+1 ? (p-1)*5+i+1 : i+1}}</td>\n                                            <td>{{item.villageDto.villageName}}</td>\n                                            <td>{{ item.userDto.userFirstName}} {{item.userDto.userMiddleName}}\n                                                {{item.userDto.userLastName}}</td>\n                                            <td>{{item.ssName}}</td>\n                                            <td><input class=\"form-check-input\" type=\"checkbox\" value=\"\"\n                                                    id=\"flexCheckDefault\" (change)=\"unmapSS($event, item.ssId, i)\"></td>\n                                        </tr>\n                                    </tbody>\n\n                                </table>\n                                <pagination-controls class=\"d-flex justify-content-end p-1 current ngx-pagination1\"\n                                    (pageChange)=\"p = $event\" (pageBoundsCorrection)=\"p = $event \">\n                                </pagination-controls>\n\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SsUnmapService {\n\n  baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  listOfRegionsOfUser(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfRegionsOfUser`, obj)\n  }\n\n  listOfBranchesOfARegion(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfBranchesOfARegion`, obj)\n  }\n\n  listOfswasthyasahayika(obj): any {\n    return this.http.post(`${this.baseURL}swasthyasahayika/getSSOfABranchSimpler`, obj)\n  }\n\n  unmapSsFromAllMappedHhAndUser(obj): any {\n    return this.http.post(`${this.baseURL}remap/unmapSsFromAllMappedHhAndUser`, obj)\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SsUnmapComponent } from './ss-unmap.component';\n\nconst routes: Routes = [{ path: '', component: SsUnmapComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SsUnmapRoutingModule { }\n"],"sourceRoot":"webpack:///"}