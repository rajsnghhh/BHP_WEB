{"version":3,"sources":["./src/app/modules/village-setup/village-setup.service.ts","./src/app/modules/village-setup/village-setup.module.ts","./src/app/modules/village-setup/village-setup.component.ts","./src/app/modules/village-setup/village-setup.component.html","./src/app/modules/village-setup/village-setup-routing.module.ts"],"names":[],"mappings":"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","file":"modules-village-setup-village-setup-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VillageSetupService {\n  baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getStateList(obj): any {\n    return this.http.post(`${this.baseURL}state/getListOfAllStates`, obj)\n  }\n\n  getDistrictAndBlockList(obj): any {\n    return this.http.post(`${this.baseURL}district/getListOfDistrictAndBlock`, obj)\n  }\n\n  getVillageListByGpId(obj): any {\n    return this.http.post(`${this.baseURL}village/getVillagesOfAGp`, obj)\n  }\n\n  saveVillage(obj): any {\n    return this.http.post(`${this.baseURL}village/saveOrUpdate`, obj)\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VillageSetupRoutingModule } from './village-setup-routing.module';\nimport { VillageSetupComponent } from './village-setup.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\n\n@NgModule({\n  declarations: [VillageSetupComponent],\n  imports: [\n    CommonModule,\n    VillageSetupRoutingModule,\n    ReactiveFormsModule,\n    NgxPaginationModule,\n    Ng2SearchPipeModule,\n    FormsModule,\n  ]\n})\nexport class VillageSetupModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from '../core/http/http.service';\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\nimport { ValidationService } from '../shared/services/validation.service';\nimport { SidebarService } from '../shared/sidebar/sidebar.service';\nimport { VillageSetupService } from './village-setup.service';\n\n@Component({\n  selector: 'app-village-setup',\n  templateUrl: './village-setup.component.html',\n  styleUrls: ['./village-setup.component.css']\n})\nexport class VillageSetupComponent implements OnInit {\n  villageForm: FormGroup;\n  villCreateForm: FormGroup;\n  stateList: Array<any> = [];\n  districtList: Array<any> = [];\n  blockList: Array<any> = [];\n  gpList: Array<any> = [];\n  villList: Array<any> = [];\n  page = 1;\n  pageSize = 6;\n  p: any;\n  GPType: any;\n  blockType: any;\n  districtType: any;\n  stateType: any;\n  villageId: any;\n  editVillData: any;\n  modalContent: any;\n  modalReference: any;\n  gpId: any;\n  searchText: any;\n  searchFullscreen: boolean;\n  isDisabled: boolean = false;\n  createMode: boolean;\n  updateMode: boolean;\n  deleteMode: boolean;\n  role:any;\n\n\n  constructor(private fb: FormBuilder, private httpService: HttpService, private villageService: VillageSetupService,\n    private sidebarService: SidebarService, private modalService: NgbModal, private validationService: ValidationService,\n    private toaster: ToastrService, private confirmationDialogService: ConfirmationDialogService) { }\n\n  ngOnInit(): void {\n    this.role = this.sidebarService.RoleDTOName;\n    console.log(this.role);\n    this.createForm();\n\n    // Api call for viewing state list\n    let obj = {\n      dataAccessDTO: this.httpService.dataAccessDTO\n    }\n\n    this.villageService.getStateList(obj).subscribe((res) => {\n      this.stateList = res.responseObject.stateList;\n      console.log(this.stateList);\n    });\n\n    this.createMode = this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 49)?.accessDetailList\n      .find(accessType => accessType.accessType == 'create')?.accessType ? true : false;\n\n    this.updateMode = this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 49)?.accessDetailList\n      .find(accessType => accessType.accessType == 'update')?.accessType ? true : false;\n\n    this.deleteMode = this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 49)?.accessDetailList\n      .find(accessType => accessType.accessType == 'delete')?.accessType ? true : false;\n\n  }\n\n  createForm() {\n    this.villageForm = this.fb.group({\n      state: ['', Validators.required],\n      district: ['', Validators.required],\n      block: ['', Validators.required],\n      gp: ['', Validators.required]\n    });\n  }\n\n  get f() {\n    return this.villageForm.controls;\n  }\n\n  changeState(stateId) {\n\n    let obj = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      stateId: stateId\n    }\n\n    this.villageService.getDistrictAndBlockList(obj).subscribe((res) => {\n      this.districtList = res.responseObject.stateWiseDistrictList;\n      console.log(this.districtList);\n    })\n\n    this.stateType = this.stateList.find(state => state.stateMasterId == stateId);\n    console.log(this.stateType, 'stateType');\n\n    this.villageForm.controls.district.setValue('');\n    this.villageForm.controls.block.setValue('');\n    this.villageForm.controls.gp.setValue('');\n    this.villList = [];\n    if (this.villageForm.value.state == '') {\n      this.villageForm.controls.district.setValue('');\n      this.villageForm.controls.block.setValue('');\n      this.villageForm.controls.gp.setValue('');\n      this.villList = [];\n    }\n\n  }\n\n  changeDistrict(districtId) {\n    console.log(districtId);\n    this.districtType = this.districtList.find(district => district.districtMasterId == districtId);\n    console.log(this.districtType);\n\n    this.blockList = this.districtList.find(block => block.districtMasterId == districtId)?.blockList;\n    console.log(this.blockList);\n\n    this.villageForm.controls.block.setValue('');\n    this.villageForm.controls.gp.setValue('');\n    this.villList = [];\n\n    if (this.villageForm.value.district == '') {\n      this.villageForm.controls.block.setValue('');\n      this.villageForm.controls.gp.setValue('');\n      this.villList = [];\n    }\n  }\n\n  changeBlock(blockId) {\n    console.log(blockId);\n    this.blockType = this.blockList.find(block => block.blockMasterId == blockId);\n    console.log(this.blockType, 'blockType');\n\n    this.gpList = this.blockList.find(gp => gp.blockMasterId == blockId)?.gpDtoList;\n    console.log(this.gpList);\n    this.villageForm.controls.gp.setValue('');\n    this.villList = [];\n    if (this.villageForm.value.block == '') {\n      this.villageForm.controls.gp.setValue('');\n      this.villList = [];\n    }\n  }\n\n  changeGp(GPID) {\n    console.log(GPID);\n    this.gpId = GPID;\n    this.GPType = this.gpList.find(gp => gp.gpMunicipalId == this.gpId);\n    console.log(this.GPType, 'GPType');\n\n    let obj = { dataAccessDTO: { userId: this.sidebarService?.userId, userName: this.sidebarService?.loginId }, gpId: this.gpId };\n    this.villageService.getVillageListByGpId(obj).subscribe((res) => {\n      this.villList = res.responseObject;\n      console.log(this.villList);\n    });\n\n    this.villList = [];\n    if (this.villageForm.value.gp == '') {\n      this.villList = [];\n    }\n\n  }\n\n  createVillage(createVill) {\n    console.log(this.villageId, 'villge idcreate');\n    this.modalContent = '';\n    this.modalReference = this.modalService.open(createVill, {\n      windowClass: 'createVill',\n    });\n    this.createVillForm();\n  }\n\n  editVillForm(vill, createVill) {\n    console.log(this.villageId, 'villge idedit');\n    this.villageId = vill.villageMasterId;\n    this.editVillData = vill;\n    console.log(this.villageId, this.editVillData, 'villageId');\n    this.createVillage(createVill);\n  }\n\n  createVillForm() {\n    this.villCreateForm = this.fb.group({\n      village: [this.editVillData?.villageName ? this.editVillData?.villageName : '', Validators.compose([Validators.required, Validators.minLength(3)])]\n    });\n\n    if (this.villageId) {\n      this.villCreateForm.markAllAsTouched();\n    }\n  }\n\n  get c() {\n    return this.villCreateForm.controls;\n  }\n\n  villModalDismiss() {\n    console.log(this.villageId);\n\n    if (this.villageId) {\n      this.editVillData = [];\n      this.villageId = 0;\n      this.modalReference?.close();\n    }\n    else {\n      this.modalReference?.close();\n    }\n\n  }\n\n  saveVillForm() {\n\n    this.villCreateForm.value.village = this.validationService.firstCaps(\n      this.villCreateForm.value.village.trim()\n    );\n\n    if (!this.villCreateForm.value.village) {\n      this.showError('Please Enter Village Name');\n      return;\n    }\n\n\n    let obj = {\n      dataAccessDTO: {\n        userId: this.sidebarService.userId,\n        userName: this.sidebarService.loginId\n      },\n      villageCreationDto: {\n        villageMasterId: this.villageId ? this.villageId : 0,\n        villageName: this.villCreateForm.value.village,\n        gpMunicipalId: this.gpId,\n        active_flag: 'Y'\n      }\n    }\n\n    console.log(obj);\n\n    this.villCheckDuplicates(obj);\n\n  }\n\n  villCheckDuplicates(obj) {\n\n    var userEnteredVill: string;\n    userEnteredVill = this.villCreateForm.value.village;\n\n    var checkDuplicateVillName: any;\n\n    checkDuplicateVillName = this.villList.find((vill) => vill.villageName == userEnteredVill)?.villageName;\n    console.log(checkDuplicateVillName);\n\n    if (userEnteredVill == checkDuplicateVillName) {\n      this.showError(userEnteredVill + ' ' + 'already exists in the GP. Please retry with a different name');\n      return;\n    }\n\n    this.villageService.saveVillage(obj).subscribe((res: any) => {\n      console.log(res);\n      if (this.villageId == 0 || this.villageId == undefined) {\n        if (res.status == true) {\n          this.showSuccess(res.message);\n          this.villModalDismiss();\n          this.changeGp(this.gpId);\n        }\n        else {\n          this.showError(res.message);\n        }\n      } else {\n\n        if (res.status == true) {\n          this.showSuccess(res.message);\n          this.villModalDismiss();\n          this.villageForm.controls.state.setValue('');\n          this.villageForm.controls.district.setValue('');\n          this.villageForm.controls.block.setValue('');\n          this.villageForm.controls.gp.setValue('');\n          this.villList = [];\n\n        }\n        else {\n          this.showError(res.message);\n        }\n\n      }\n\n    })\n  };\n\n  deleteVillForm(vill, i) {\n    console.log(vill);\n\n    this.confirmationDialogService.confirm('', 'Are you sure you want to delete ?')\n      .then(() => this.delete(vill, i)\n      )\n      .catch(() => '');\n  }\n\n  delete(vill, i) {\n    let obj = {\n      dataAccessDTO: {\n        userId: this.sidebarService.userId,\n        userName: this.sidebarService.loginId\n      },\n      villageCreationDto: {\n        villageMasterId: vill.villageMasterId,\n        villageName: vill.villageName,\n        gpMunicipalId: this.gpId,\n        active_flag: 'N'\n      }\n    }\n\n    console.log(obj);\n    this.villageService.saveVillage(obj).subscribe((res: any) => {\n      console.log(res);\n      if (res.status == true) {\n        this.showSuccess(res.message);\n        this.villList.splice(i, 1);\n        this.changeGp(this.gpId);\n      }\n      else {\n        this.showError(res.message);\n      }\n    })\n\n  }\n\n  showSuccess(message) {\n    this.toaster.success(message, 'Create Village', {\n      timeOut: 3000,\n    });\n  }\n\n  showError(message) {\n    this.toaster.error(message, 'Create Village', {\n      timeOut: 3000,\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"white_box QA_section mb_30\">\n\n                <div id=\"header-fixed\" style=\"display: flex;\">\n                    <h2 class=\"page-title\">Create Village</h2>\n\n                    <div class=\"box_right d-flex lms_block col-md-6\" *ngIf=\"villageForm.value.gp\">\n                        <div class=\"serach_field_2\">\n                            <div [ngClass]=\" searchFullscreen ? 'search_inner_fullscreen ' : ' search_inner' \">\n                                <form active=\"#\">\n                                    <div class=\"search_field\">\n                                        <input type=\"text\" name=\"search\" placeholder=\"Search Village Info here...\"\n                                            [(ngModel)]=\"searchText\">\n                                    </div>\n                                    <button type=\"submit\"> <i class=\"fa fa-search\"></i> </button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <form class=\"form-signin\" [formGroup]=\"villageForm\">\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\">\n                            <label for=\"state\">State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeState($event.target.value)\"\n                                formControlName=\"state\" [ngClass]=\"{'is-invalid': f.state.invalid && f.state.touched, 'is-valid': \n                                f.state.valid && (f.state.dirty || f.state.touched)}\">\n                                <option value=\"\">-- Select State --</option>\n                                <option *ngFor=\"let state of stateList; index as i\" value=\"{{state.stateMasterId}}\">\n                                    {{state.stateName}}</option>\n                            </select>\n                            <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.state.errors.required\">\n                                    State selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"district\">District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeDistrict($event.target.value)\"\n                                formControlName=\"district\" [ngClass]=\"{'is-invalid': f.district.invalid && f.district.touched,\n                                'is-valid': f.district.valid && (f.district.dirty || f.district.touched)}\">\n                                <option value=\"\">-- Select District --</option>\n                                <option *ngFor=\"let district of districtList; index as i\"\n                                    value=\"{{district.districtMasterId}}\">\n                                    {{district.districtName}}</option>\n                            </select>\n                            <div *ngIf=\"f.district.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.district.errors.required\">\n                                    District selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"block\">Block :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBlock($event.target.value)\"\n                                formControlName=\"block\" [ngClass]=\"{'is-invalid': f.block.invalid && f.block.touched,\n                                'is-valid': f.block.valid && (f.block.dirty || f.block.touched)}\">\n                                <option value=\"\">-- Select Block --</option>\n                                <option *ngFor=\"let block of blockList; index as i\" value=\"{{block.blockMasterId}}\">\n                                    {{block.blockName}} </option>\n                            </select>\n                            <div *ngIf=\"f.block.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.block.errors.required\">\n                                    Block selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"gp\">GP/ Municipality :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeGp($event.target.value)\" formControlName=\"gp\"\n                                id=\"gp\" [ngClass]=\"{'is-invalid': f.gp.invalid && f.gp.touched,\n                              'is-valid': f.gp.valid && (f.gp.dirty || f.gp.touched) }\">\n                                <option value=\"\">-- Select GP/ Municipality --</option>\n                                <option *ngFor=\"let gp of gpList\" value=\"{{gp.gpMunicipalId}}\">\n                                    {{ gp.name }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"f.gp.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.gp.errors.required\">\n                                    GP selection is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\" *ngIf=\"villageForm.value.gp && role == 'PO' || role == 'PM'\"\n                            id='buttonRight'>\n                            <button class=\"btn btn-primary\" (click)=\"createVillage(createVill)\">Create</button>\n                        </div>\n                    </div>\n\n                    <div class=\"white_box_tittle list_header\">\n\n                        <div class=\"QA_table \">\n                            <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                                <table\n                                    class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                                    role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\n\n                                    <thead id=\"header-fixed\">\n                                        <tr>\n                                            <th>SL<br>No</th>\n                                            <th>GP/ Municipality<br> Name</th>\n                                            <th>GP/ Municipality<br> Type</th>\n                                            <th>Gram Sansad/ Village/<br> locality</th>\n                                            <th>Branch Name</th>\n                                            <th *ngIf=\"role == 'PO' || role == 'PM'\">Action</th>\n                                        </tr>\n                                    </thead>\n\n                                    <tbody>\n\n                                        <tr\n                                            *ngFor=\"let vill of villList |  filter:  searchText  |paginate: { itemsPerPage: 5, currentPage: p }; index as i\">\n                                            <td>{{(p-1)*5+i+1 ? (p-1)*5+i+1 : i+1}}</td>\n                                            <td>{{GPType.name}}</td>\n                                            <td>{{GPType.type}}</td>\n                                            <td>{{vill.villageName}}</td>\n                                            <td>{{vill.branchDetails?.branchName ? vill.branchDetails?.branchName :\n                                                '-'}}</td>\n                                            <td style=\"padding: 0px;\" *ngIf=\"role == 'PO' || role == 'PM'\"><i\n                                                    class=\"fas fa-edit\" title=\"Edit Village\" *ngIf=\"updateMode\"\n                                                    (click)=\"editVillForm(vill, createVill)\"></i>\n                                                <i class=\"fas fa-trash\" title=\"Delete Village\" *ngIf=\"deleteMode\"\n                                                    (click)=\"deleteVillForm(vill, i)\"></i>\n                                            </td>\n\n                                        </tr>\n                                    </tbody>\n\n                                </table>\n                                <pagination-controls class=\"d-flex justify-content-end p-1 current ngx-pagination1\"\n                                    (pageChange)=\"p = $event\" (pageBoundsCorrection)=\"p = $event \">\n                                </pagination-controls>\n\n                            </div>\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #createVill>\n\n    <div class=\"modal-content\">\n        <div class=\"modal-header\">\n\n            <div class=\"row\">\n                <div class=\"col-md-7\">\n                    <h3 class=\"modal-title\" id=\"modal-basic-title\" *ngIf=\"!villageId\">Create Village</h3>\n                    <h3 class=\"modal-title\" id=\"modal-basic-title\" *ngIf=\"villageId\">Edit Village</h3>\n                </div>\n\n                <div class=\"col-md-2\">\n                    <span class=\"close\" (click)=\"villModalDismiss()\"\n                        style=\"cursor: pointer;font-size: 35px;\">&times;</span>\n                </div>\n            </div>\n\n        </div>\n\n        <div class=\"modal-body\">\n            <form class=\"form-signin\" [formGroup]=\"villCreateForm\">\n\n                <form class=\"form-signin\" [formGroup]=\"villageForm\">\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\" *ngIf=\"villageId\">\n                            <label for=\"state\">State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeState($event.target.value)\"\n                                formControlName=\"state\" [ngClass]=\"{'is-invalid': f.state.invalid && f.state.touched, 'is-valid': \n                                f.state.valid && (f.state.dirty || f.state.touched)}\">\n                                <option value=\"\">-- Select State --</option>\n                                <option *ngFor=\"let state of stateList; index as i\" value=\"{{state.stateMasterId}}\">\n                                    {{state.stateName}}</option>\n                            </select>\n                            <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.state.errors.required\">\n                                    State selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\" *ngIf=\"!villageId\">\n                            <label for=\"state\">State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeState($event.target.value)\"\n                                formControlName=\"state\" [ngClass]=\"{'is-invalid': f.state.invalid && f.state.touched, 'is-valid': \n                                f.state.valid && (f.state.dirty || f.state.touched)}\" [attr.disabled]=\"isDisabled\">\n                                <option value=\"\">-- Select State --</option>\n                                <option *ngFor=\"let state of stateList; index as i\" value=\"{{state.stateMasterId}}\">\n                                    {{state.stateName}}</option>\n                            </select>\n                            <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.state.errors.required\">\n                                    State selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\" *ngIf=\"villageId\">\n                            <label for=\"district\">District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeDistrict($event.target.value)\"\n                                formControlName=\"district\" [ngClass]=\"{'is-invalid': f.district.invalid && f.district.touched,\n                                'is-valid': f.district.valid && (f.district.dirty || f.district.touched)}\">\n                                <option value=\"\">-- Select District --</option>\n                                <option *ngFor=\"let district of districtList; index as i\"\n                                    value=\"{{district.districtMasterId}}\">\n                                    {{district.districtName}}</option>\n                            </select>\n                            <div *ngIf=\"f.district.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.district.errors.required\">\n                                    District selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\" *ngIf=\"!villageId\">\n                            <label for=\"district\">District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeDistrict($event.target.value)\"\n                                formControlName=\"district\" [ngClass]=\"{'is-invalid': f.district.invalid && f.district.touched,\n                                'is-valid': f.district.valid && (f.district.dirty || f.district.touched)}\"\n                                [attr.disabled]=\"isDisabled\">\n                                <option value=\"\">-- Select District --</option>\n                                <option *ngFor=\"let district of districtList; index as i\"\n                                    value=\"{{district.districtMasterId}}\">\n                                    {{district.districtName}}</option>\n                            </select>\n                            <div *ngIf=\"f.district.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.district.errors.required\">\n                                    District selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\" *ngIf=\"villageId\">\n                            <label for=\"block\">Block :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBlock($event.target.value)\"\n                                formControlName=\"block\" [ngClass]=\"{'is-invalid': f.block.invalid && f.block.touched,\n                                'is-valid': f.block.valid && (f.block.dirty || f.block.touched)}\">\n                                <option value=\"\">-- Select Block --</option>\n                                <option *ngFor=\"let block of blockList; index as i\" value=\"{{block.blockMasterId}}\">\n                                    {{block.blockName}} </option>\n                            </select>\n                            <div *ngIf=\"f.block.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.block.errors.required\">\n                                    Block selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\" *ngIf=\"!villageId\">\n                            <label for=\"block\">Block :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBlock($event.target.value)\"\n                                formControlName=\"block\" [ngClass]=\"{'is-invalid': f.block.invalid && f.block.touched,\n                                'is-valid': f.block.valid && (f.block.dirty || f.block.touched)}\"\n                                [attr.disabled]=\"isDisabled\">\n                                <option value=\"\">-- Select Block --</option>\n                                <option *ngFor=\"let block of blockList; index as i\" value=\"{{block.blockMasterId}}\">\n                                    {{block.blockName}} </option>\n                            </select>\n                            <div *ngIf=\"f.block.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.block.errors.required\">\n                                    Block selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\" *ngIf=\"villageId\">\n                            <label for=\"gp\">GP/ Municipality :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeGp($event.target.value)\" formControlName=\"gp\"\n                                id=\"gp\" [ngClass]=\"{'is-invalid': f.gp.invalid && f.gp.touched,\n                              'is-valid': f.gp.valid && (f.gp.dirty || f.gp.touched) }\">\n                                <option value=\"\">-- Select GP/ Municipality --</option>\n                                <option *ngFor=\"let gp of gpList\" value=\"{{gp.gpMunicipalId}}\">\n                                    {{ gp.name }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"f.gp.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.gp.errors.required\">\n                                    GP selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\" *ngIf=\"!villageId\">\n                            <label for=\"gp\">GP/ Municipality :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeGp($event.target.value)\" formControlName=\"gp\"\n                                id=\"gp\" [ngClass]=\"{'is-invalid': f.gp.invalid && f.gp.touched,\n                              'is-valid': f.gp.valid && (f.gp.dirty || f.gp.touched) }\" [attr.disabled]=\"isDisabled\">\n                                <option value=\"\">-- Select GP/ Municipality --</option>\n                                <option *ngFor=\"let gp of gpList\" value=\"{{gp.gpMunicipalId}}\">\n                                    {{ gp.name }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"f.gp.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.gp.errors.required\">\n                                    GP selection is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n\n                <div class=\"row\">\n                    <div class=\"form-group col-md\">\n                        <label for=\"village\">Village:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Village Name\" formControlName=\"village\"\n                            maxlength=\"20\" style=\"text-transform: capitalize\" [ngClass]=\"{'is-invalid': c.village.invalid && c.village.touched,'is-valid': c.village.valid && \n                            (c.village.dirty || c.village.touched)}\" />\n                        <div *ngIf=\"c.village.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"c.village.errors.required\">\n                                Village Name is required\n                            </div>\n                            <div *ngIf=\"c.village.errors.minlength\">\n                                Minimum length should be 3\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n        <div class=\"modal-footer\">\n            <div class=\"row\">\n                <button type=\"button\" class=\" btn btn-primary bttn\" (click)=\"saveVillForm()\">Save</button>\n            </div>\n        </div>\n\n    </div>\n\n</ng-template>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VillageSetupComponent } from './village-setup.component';\n\nconst routes: Routes = [{ path: '', component: VillageSetupComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VillageSetupRoutingModule { }\n"],"sourceRoot":"webpack:///"}