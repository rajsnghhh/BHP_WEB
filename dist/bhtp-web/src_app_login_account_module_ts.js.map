{"version":3,"file":"src_app_login_account_module_ts.js","mappings":"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","sources":["./src/app/login/account-routing.module.ts","./src/app/login/account.module.ts","./src/app/login/layout/layout.component.ts","./src/app/login/layout/layout.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/reset/reset.component.ts","./src/app/login/reset/reset.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { LoginComponent } from './login.component';\r\nimport { ResetComponent } from './reset/reset.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: LayoutComponent,\r\n    children: [\r\n      { path: '', component: LoginComponent },\r\n      { path: 'reset', component: ResetComponent },\r\n      { path: 'changePassword', component: ChangePasswordComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { LoginComponent } from './login.component';\r\nimport { ResetComponent } from './reset/reset.component';\r\nimport { LoaderModule } from '../modules/shared/loader/loader.module';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LayoutComponent,\r\n    LoginComponent,\r\n    ResetComponent,\r\n    ChangePasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AccountRoutingModule,\r\n    ReactiveFormsModule,\r\n    LoaderModule\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { first } from 'rxjs/operators';\r\nimport { ValidationService } from '../modules/shared/services/validation.service';\r\nimport { LoginService } from './login.service';\r\nimport { RootObject } from './user';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: UntypedFormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  show: boolean = false;\r\n  loader: boolean = true;\r\n\r\n  constructor(\r\n    private formBuilder: UntypedFormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private accountService: LoginService,\r\n    public validationService: ValidationService,\r\n    private toaster: ToastrService\r\n  ) {\r\n    // redirect to home if already logged in\r\n    if (this.accountService.userValue) {\r\n      this.router.navigate(['/core']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', [Validators.required]],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.loader = false;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      this.loader = true;\r\n      return;\r\n    }\r\n    this.loading = false;\r\n\r\n    setTimeout(() => {\r\n      this.accountService.login((\"BK\" + this.f.username.value).trim(), this.f.password.value)\r\n        .pipe(first())\r\n        .subscribe(\r\n          (data: RootObject) => {\r\n            console.log(\"menudata\", data)\r\n            console.log(data.message, 'loginData')\r\n            if (data.status) {\r\n              if (data.message.indexOf(\"first\") !== -1) {\r\n                this.accountService.logout();\r\n                this.accountService.userFirstTime = data;\r\n                this.router.navigate(['/reset']);\r\n              } else {\r\n                this.router.navigate(['/core']);\r\n                this.showSuccess('Login Successful');\r\n              }\r\n              this.loader = true;\r\n            } else {\r\n              this.loader = true;\r\n              this.accountService.logout();\r\n              this.loading = false;\r\n              this.showError('Please Enter Valid credentials');\r\n            }\r\n          });\r\n    }, 2000);\r\n\r\n  }\r\n\r\n  password() {\r\n    this.show = !this.show;\r\n  }\r\n\r\n  showError(message) {\r\n    this.toaster.error(message, 'Login Failed', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Welcome', {\r\n      timeOut: 1000,\r\n    });\r\n  }\r\n}\r\n","<app-loader [hidden]=\"loader\"></app-loader>\r\n<img class=\"login_img\"\r\n  src=\"assets/login_bg.jpg\"\r\n  alt=\"\"\r\n/>\r\n<div class=\"overlay\"></div>\r\n\r\n<div class=\"card\">\r\n  <h4\r\n    class=\"card-header\"\r\n    style=\"\r\n      background-color: #156060;\r\n      color: #ffffff;\r\n      border-radius: 8px 8px 0px 0px;\r\n      font-size: medium;\r\n      padding: 6px 0px 0px 0px;\r\n    \"\r\n  >\r\n    <img\r\n      src=\"assets/bk_logo1.png\"\r\n      style=\"width: 34px; margin: 0px 20px 0px 12px\"\r\n    />\r\n    Bandhan Health Programme\r\n  </h4>\r\n  <div class=\"card-body\" style=\"padding: 0rem 1rem\">\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\"\r\n          >Username <span class=\"text-danger\">*</span></label\r\n        >\r\n\r\n        <div style=\"display: grid; grid-template-columns: 0.1fr 1fr\">\r\n          <p\r\n            style=\"\r\n              margin: 1px 0px 4px 0px;\r\n              font-weight: bold;\r\n              border-bottom: 1px solid black;\r\n              border-top: 1px solid black;\r\n              border-left: 1px solid black;\r\n              padding: 6px 7px 0px 7px;\r\n              border-radius: 5px 0px 0px 5px;\r\n            \"\r\n          >\r\n            BK\r\n          </p>\r\n          <input\r\n            style=\"display: block\"\r\n            type=\"text\"\r\n            style=\"\r\n              border-bottom: 1px solid black;\r\n              border-top: 1px solid black;\r\n              border-right: 1px solid black;\r\n              margin: 1px 7px 4px -1px;\r\n              border-radius: 0px 5px 5px 0px;\r\n            \"\r\n            (keypress)=\"validationService.onlyInteger($event)\"\r\n            formControlName=\"username\"\r\n            placeholder=\"Enter Username\"\r\n            class=\"form-control\"\r\n            [maxlength]=\"20\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\r\n          />\r\n          <div></div>\r\n          <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <br />\r\n      <div class=\"form-group\">\r\n        <label for=\"password\"\r\n          >Password <span class=\"text-danger\">*</span></label\r\n        >\r\n        <div style=\"display: grid; grid-template-columns: 5fr -0.1fr\">\r\n          <input\r\n            [type]=\"show ? 'text' : 'password'\"\r\n            style=\"border: 1px solid black\"\r\n            formControlName=\"password\"\r\n            placeholder=\"Enter password\"\r\n            class=\"form-control\"\r\n            [maxlength]=\"20\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n          />\r\n          <div style=\"margin: -26px 0px 0px 255px; z-index: 99999\">\r\n            <div *ngIf=\"show; else elseblock\">\r\n              <i class=\"fa fa-eye\" (click)=\"password()\" *ngIf=\"show\"></i>\r\n            </div>\r\n            <ng-template #elseblock\r\n              ><i class=\"fa fa-eye-slash\" (click)=\"password()\"></i\r\n            ></ng-template>\r\n          </div>\r\n          <div></div>\r\n          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.password.errors.required\" style=\"margin-left: 41px\">\r\n              Password is required\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <button\r\n          [disabled]=\"loading\"\r\n          class=\"btn btn-primary\"\r\n          style=\"\r\n            margin-left: 50%;\r\n            margin-top: 34px;\r\n            transform: translate(-50%, -50%);\r\n            background-color: #156060;\r\n            border-color: #156060;\r\n          \"\r\n        >\r\n          <span\r\n            *ngIf=\"loading\"\r\n            class=\"spinner-border spinner-border-sm mr-1\"\r\n          ></span>\r\n          <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\r\n          Login\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { first } from 'rxjs/operators';\r\nimport { ConfirmationDialogService } from 'src/app/modules/shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { ValidationService } from 'src/app/modules/shared/services/validation.service';\r\nimport { LoginService } from '../login.service';\r\nimport { Reset } from '../user';\r\n\r\n@Component({\r\n  selector: 'app-reset',\r\n  templateUrl: './reset.component.html',\r\n  styleUrls: ['./reset.component.css']\r\n})\r\nexport class ResetComponent implements OnInit {\r\n  form: UntypedFormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  show: boolean = false;\r\n  loader: boolean = true;\r\n\r\n  constructor(\r\n    private formBuilder: UntypedFormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private accountService: LoginService,\r\n    private toaster: ToastrService,\r\n    public validationService: ValidationService,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n  ) {\r\n    // redirect to home if already logged in\r\n    if (this.accountService.userValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      newPassword: ['', Validators.required],\r\n      confirmPassword: ['', [Validators.required]]\r\n    });\r\n\r\n    if (this.accountService.userFirstTime == undefined) {\r\n      this.router.navigate(['/']);\r\n      this.showError('Please login again');\r\n    }\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.form.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    let newPassword = this.form.get('newPassword').value;\r\n    let confirmPassword = this.form.get('confirmPassword').value;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    setTimeout(() => {\r\n      if (newPassword == confirmPassword) {\r\n        this.accountService.reset(this.f.newPassword.value)\r\n          .pipe(first())\r\n          .subscribe(\r\n            (data: Reset) => {\r\n              console.log(data, 'resetData');\r\n              if (data.status) {\r\n                this.showSuccess('Success');\r\n                this.router.navigate(['/'], { relativeTo: this.route });\r\n              } else {\r\n                this.showError(data.message);\r\n              }\r\n              this.loader = true;\r\n              this.loading = false;\r\n            },\r\n            error => {\r\n              this.loader = true;\r\n              console.log(error)\r\n              this.showError('Error');\r\n              this.loading = false;\r\n            });\r\n      } else {\r\n        this.loading = false;\r\n        this.checkBothPasswordSame('Error');\r\n      }\r\n    }, 1000);\r\n\r\n  }\r\n\r\n  password() {\r\n    this.show = !this.show;\r\n  }\r\n\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error in password reset', {\r\n      timeOut: 4000,\r\n    });\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Password reset successful', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  checkBothPasswordSame(message) {\r\n    this.toaster.error(message, 'New Password & Confirm Password does not match ', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n}\r\n","<app-loader [hidden]=\"loader\"></app-loader>\r\n<img class=\"reset_img\"\r\n  src=\"../../../assets/login_bg.jpg\"\r\n  alt=\"\"\r\n/>\r\n<div class=\"overlay\"></div>\r\n\r\n<div class=\"card\">\r\n  <h4\r\n    class=\"card-header\"\r\n    style=\"\r\n      background-color: #156060;\r\n      color: #ffffff;\r\n      border-radius: 8px 8px 0px 0px;\r\n      font-size: large;\r\n      text-align: center;\r\n    \"\r\n  >\r\n    Reset Password\r\n  </h4>\r\n  <div class=\"card-body\" style=\"padding: 0rem 1rem\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"newPassword\"\r\n          >New Password <span class=\"text-danger\">*</span></label\r\n        >\r\n        <div style=\"display: grid; grid-template-columns: 5fr -0.1fr\">\r\n          <input\r\n            [type]=\"show ? 'text' : 'password'\"\r\n            style=\"border: 1px solid black\"\r\n            placeholder=\"Enter new password\"\r\n            formControlName=\"newPassword\"\r\n            class=\"form-control\"\r\n            [maxlength]=\"20\"\r\n            [minlength]=\"4\"\r\n            [ngClass]=\"{ 'is-invalid': submitted && f.newPassword.errors }\"\r\n          />\r\n          <div style=\"margin: -26px 0px 0px 450px; z-index: 99999\">\r\n            <div *ngIf=\"show; else elseblock\">\r\n              <i class=\"fa fa-eye\" (click)=\"password()\" *ngIf=\"show\"></i>\r\n            </div>\r\n            <ng-template #elseblock\r\n              ><i class=\"fa fa-eye-slash\" (click)=\"password()\"></i\r\n            ></ng-template>\r\n          </div>\r\n          <div></div>\r\n          <div\r\n            *ngIf=\"submitted && f.newPassword.errors\"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            <div\r\n              *ngIf=\"f.newPassword.errors.required\"\r\n              style=\"margin-left: 41px\"\r\n            >\r\n              Password is required\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <div class=\"form-group\">\r\n        <label for=\"confirmPassword\"\r\n          >Confirm Password &nbsp;<span class=\"text-danger\">*</span></label\r\n        >\r\n\r\n        <input\r\n          type=\"password\"\r\n          style=\"border: 1px solid black\"\r\n          formControlName=\"confirmPassword\"\r\n          placeholder=\"Enter again\"\r\n          class=\"form-control\"\r\n          [maxlength]=\"20\"\r\n          [minlength]=\"4\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\"\r\n        />\r\n\r\n        <div\r\n          *ngIf=\"submitted && f.confirmPassword.errors\"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          <div\r\n            *ngIf=\"f.confirmPassword.errors.required\"\r\n            style=\"margin-left: 41px\"\r\n          >\r\n            Password is required\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <button\r\n          [disabled]=\"loading\"\r\n          class=\"btn\"\r\n          style=\"\r\n            margin-left: 35%;\r\n            margin-top: 34px;\r\n            transform: translate(-50%, -50%);\r\n            padding: 4px 14px 4px 14px;\r\n            background-color: #156060;\r\n            color: #ffffff;\r\n          \"\r\n        >\r\n          <span\r\n            *ngIf=\"loading\"\r\n            class=\"spinner-border spinner-border-sm mr-1\"\r\n          ></span>\r\n          <span class=\"fa-passwd-reset fa-stack\">\r\n            <i class=\"fa fa-undo fa-stack-2x\"></i>\r\n            <i class=\"fa fa-lock\" style=\"margin-left: 12px\"></i>\r\n          </span>\r\n          Reset\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-danger\"\r\n          routerLink=\"../login\"\r\n          style=\"padding: 8px 14px 8px 14px; margin: 0px 0px 8px -36px\"\r\n        >\r\n          <i class=\"fa fa-times fa-lg\" aria-hidden=\"true\"></i> Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"names":["RouterModule","ChangePasswordComponent","LayoutComponent","LoginComponent","ResetComponent","routes","path","component","children","AccountRoutingModule","forChild","imports","exports","CommonModule","ReactiveFormsModule","LoaderModule","AccountModule","declarations","constructor","ngOnInit","selectors","decls","vars","consts","template","i0","Validators","first","formBuilder","route","router","accountService","validationService","toaster","userValue","navigate","loginForm","group","username","required","password","returnUrl","snapshot","queryParams","f","controls","onSubmit","submitted","loader","invalid","loading","setTimeout","login","value","trim","pipe","subscribe","data","console","log","message","status","indexOf","logout","userFirstTime","showSuccess","showError","show","error","timeOut","success","ctx","confirmationDialogService","form","newPassword","confirmPassword","undefined","get","reset","relativeTo","checkBothPasswordSame"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}