{"version":3,"file":"src_app_modules_admin-user_admin-user_module_ts.js","mappings":"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","sources":["./src/app/modules/admin-user/admin-user-routing.module.ts","./src/app/modules/admin-user/admin-user.module.ts","./src/app/modules/admin-user/user-create/user-create-form.component.ts","./src/app/modules/admin-user/user-create/user-create-form.component.html","./src/app/modules/admin-user/user-table-view/user-table.component.ts","./src/app/modules/admin-user/user-table-view/user-table.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserTableComponent } from './user-table-view/user-table.component';\r\n\r\nconst routes: Routes = [{ path: '', component: UserTableComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminUserRoutingModule { }\r\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdminUserRoutingModule } from './admin-user-routing.module';\r\nimport { UserCreateFormComponent } from './user-create/user-create-form.component';\r\nimport { UserTableComponent } from './user-table-view/user-table.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { LoaderModule } from '../shared/loader/loader.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserTableComponent, UserCreateFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AdminUserRoutingModule, ReactiveFormsModule, FormsModule,\r\n    MatTabsModule, MatNativeDateModule, MatDialogModule, LoaderModule,\r\n    NgMultiSelectDropDownModule.forRoot()\r\n  ],\r\n  schemas: [NO_ERRORS_SCHEMA],\r\n})\r\nexport class AdminUserModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { AfterViewChecked, AfterViewInit, Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaselineSurveyService } from '../../baseline-survey/baseline-survey.service';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ValidationService } from '../../shared/services/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-user-create-form',\r\n  templateUrl: './user-create-form.component.html',\r\n  styleUrls: ['./user-create-form.component.css']\r\n})\r\nexport class UserCreateFormComponent implements OnInit {\r\n  userForm: UntypedFormGroup;\r\n\r\n\r\n  selectMultiRegion: boolean;\r\n  selectSingleRegion: boolean;\r\n  selectSingleBranch: boolean;\r\n  selectBaseBranch: Boolean;\r\n  regionId: any;\r\n  roleMasterId: any;\r\n  currentBranchId: any;\r\n  regionList: Array<any> = [];\r\n  branchList: Array<any> = [];\r\n  roleList: Array<any> = [];\r\n  dropdownSettings: IDropdownSettings = {};\r\n  region: Array<any> = [];\r\n  branch: Array<any> = [];\r\n  disableMultiRegion: boolean;\r\n  // branchVillageMapId: any;\r\n  regionMultiId: Array<any> = [];\r\n  // baseBranchList: Array<any> = [];\r\n\r\n  constructor(@Optional() public dialogRef: MatDialogRef<UserCreateFormComponent>, public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private toaster: ToastrService, private fb: UntypedFormBuilder,\r\n    public validationService: ValidationService, private modalService: NgbModal, private httpService: HttpService,\r\n    private http: HttpClient, private baselineService: BaselineSurveyService,\r\n  ) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data, 'Edit')\r\n    this.createForm();\r\n    this.regionList = this.data.regionList;\r\n    console.log(this.regionList);\r\n    \r\n\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}user/getListOfAllRoles`, Dto).subscribe((res: any) => {\r\n      this.roleList = res.responseObject;\r\n    });\r\n\r\n    if (this.data.createMode) {\r\n      this.userForm.reset();\r\n      this.userForm.get('userRole').enable();\r\n      this.disableMultiRegion = false;\r\n      this.userForm.get('region').enable();\r\n      this.userForm.get('branch').enable();\r\n      this.userForm.get('baseBranch').enable();\r\n    } else {\r\n      if (this.data.userData.activeHouseholdCount == 0 && this.data.userData.activeSsCount == 0) {\r\n        this.userForm.get('userRole').enable();\r\n        this.disableMultiRegion = false;\r\n        this.userForm.get('region').enable();\r\n        this.userForm.get('branch').enable();\r\n        this.userForm.get('baseBranch').enable();\r\n      } else {\r\n        this.userForm.get('userRole').disable();\r\n        this.disableMultiRegion = true;\r\n        this.userForm.get('region').disable();\r\n        this.userForm.get('branch').disable();\r\n        this.userForm.get('baseBranch').disable();\r\n      }\r\n\r\n      let Dto = {\r\n        dataAccessDTO: this.httpService.dataAccessDTO,\r\n        userId: this.data.userData.userId\r\n      }\r\n      this.http.post(`${this.httpService.baseURL}user/getUserDetails`, Dto).subscribe((res: any) => {\r\n        // this.branchVillageMapId = res.responseObject.branchList[0].branchName;\r\n        // this.branchList = this.data.branchList;\r\n        this.changeRole(this.data.userData.roleShortName);\r\n\r\n        let value = (res.responseObject.regionList.filter(item => item.regionMasterId))\r\n        value.forEach(e => {\r\n          let data = e.regionMasterId.toString()\r\n          this.regionMultiId.push(data);\r\n        });\r\n        if (res.responseObject.roleShortName.indexOf('HCO') == -1 && res.responseObject.roleShortName.indexOf('AC') == -1) {\r\n          this.getBaseBranch(this.regionMultiId);\r\n        }\r\n        else {\r\n          this.changeRegion(res.responseObject.regionList[0]?.regionName);\r\n        }\r\n\r\n\r\n        // this.changeBranch(res.responseObject.branchList[0]?.branchName);\r\n        this.userForm.patchValue({\r\n          userRole: res.responseObject.roleShortName,\r\n          multiRegion: res.responseObject?.regionList,\r\n          region: res.responseObject.regionList[0]?.regionName,\r\n          branch: res.responseObject.branchList[0]?.branchId,\r\n          baseBranch: res.responseObject?.currentBranchId,\r\n          firstName: res.responseObject.userFirstName,\r\n          middleName: res.responseObject.userMiddleName,\r\n          lastName: res.responseObject.userLastName,\r\n          loginId: res.responseObject.loginId.slice(2),\r\n          primaryMobile: res.responseObject.mobileNumber,\r\n          secondaryMobile: res.responseObject.mobileNumberSecondary,\r\n          primaryEmail: res.responseObject.email.trim(),\r\n          secondaryEmail: res?.responseObject?.emailSecondary?.trim(),\r\n        });\r\n        this.userForm.get('baseBranch').patchValue(res.responseObject?.currentBranchId);\r\n        // console.log(res.responseObject.branchList[0]?.branchName)\r\n      });\r\n\r\n    }\r\n\r\n    this.dropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'regionMasterId',\r\n      textField: 'regionName',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      allowSearchFilter: true,\r\n      itemsShowLimit: 3,\r\n    };\r\n  }\r\n\r\n\r\n  createForm() {\r\n    this.userForm = this.fb.group({\r\n      userRole: [null, Validators.required],\r\n      multiRegion: [''],\r\n      region: [null],\r\n      branch: [null],\r\n      baseBranch: [null],\r\n      firstName: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      middleName: ['', Validators.compose([Validators.minLength(3)])],\r\n      lastName: ['', Validators.compose([Validators.minLength(3)])],\r\n      loginId: ['', Validators.required],\r\n      primaryMobile: ['', Validators.compose([Validators.required, Validators.minLength(10), Validators.pattern(\"[6789][0-9]{9}\")])],\r\n      secondaryMobile: ['', Validators.compose([Validators.minLength(10), Validators.pattern(\"[6789][0-9]{9}\")])],\r\n      primaryEmail: ['', [Validators.required, Validators.email]],\r\n      secondaryEmail: ['', Validators.email],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.userForm.controls;\r\n  }\r\n\r\n  changeRole(value) {\r\n    this.roleMasterId = this.roleList.find(role => role.roleShortName == value)?.roleMasterId;\r\n    if (value?.indexOf('HCO') != -1) {\r\n      this.selectMultiRegion = false;\r\n      this.selectSingleRegion = true;\r\n      this.selectSingleBranch = true;\r\n      this.selectBaseBranch = false;\r\n      this.userForm.get('region').setValidators(Validators.required);\r\n      this.userForm.get('branch').setValidators(Validators.required);\r\n      this.userForm.get('multiRegion').clearAsyncValidators();\r\n      this.userForm.controls.region.setValue(null);\r\n      this.userForm.controls.branch.setValue(null);\r\n    } else if (value == 'AC') {\r\n      this.selectMultiRegion = false;\r\n      this.selectSingleRegion = true;\r\n      this.selectSingleBranch = false;\r\n      this.selectBaseBranch = true;\r\n      this.userForm.get('region').setValidators(Validators.required);\r\n      this.userForm.get('branch').clearAsyncValidators();\r\n      this.userForm.get('multiRegion').clearAsyncValidators();\r\n      this.userForm.controls.region.setValue(null);\r\n    } else {\r\n      this.selectMultiRegion = true;\r\n      this.selectSingleRegion = false;\r\n      this.selectSingleBranch = false;\r\n      this.selectBaseBranch = true;\r\n      this.userForm.get('multiRegion').setValidators(Validators.required);\r\n      this.userForm.get('branch').clearAsyncValidators();\r\n      this.userForm.get('region').clearAsyncValidators();\r\n      this.userForm.controls.baseBranch.setValue(null);\r\n    }\r\n    // this.userForm.controls.region.setValue(null);\r\n    // this.userForm.controls.branch.setValue(null);\r\n    // this.userForm.controls.baseBranch.setValue(null);\r\n    this.branchList = [];\r\n  }\r\n\r\n  onDeSelect(i) {\r\n    this.regionMultiId = [];\r\n    let value = (this.userForm.value.multiRegion.filter(item => item.regionMasterId))\r\n    value.forEach(e => {\r\n      let data = e.regionMasterId.toString()\r\n      this.regionMultiId.push(data);\r\n    });\r\n    this.getBaseBranch(this.regionMultiId);\r\n  }\r\n\r\n  onItemSelect(i) {\r\n    this.regionMultiId = [];\r\n    let value = (this.userForm.value.multiRegion.filter(item => item.regionMasterId))\r\n    value.forEach(e => {\r\n      let data = e.regionMasterId.toString()\r\n      this.regionMultiId.push(data);\r\n    });\r\n    this.getBaseBranch(this.regionMultiId);\r\n  }\r\n\r\n  onSelectAll(i) {\r\n    this.regionMultiId = [];\r\n    i.forEach(e => {\r\n      let data = e.regionMasterId.toString()\r\n      this.regionMultiId.push(data);\r\n    });\r\n    this.getBaseBranch(this.regionMultiId);\r\n  }\r\n\r\n  onDeSelectAll(i) {\r\n    this.branchList = [];\r\n  }\r\n\r\n  getBaseBranch(regionMultiId) {\r\n    console.log(this.regionMultiId);\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      regionId: regionMultiId\r\n    }\r\n    if (this.regionMultiId.length != 0) {\r\n      this.http.post(`${this.httpService.baseURL}branch/getListOfBranchesOfMultiRegion`, Dto).subscribe((res: any) => {\r\n        this.branchList = res?.responseObject;\r\n      })\r\n    }\r\n  }\r\n\r\n  changeRegion(region) {\r\n    this.regionId = this.regionList.find((reg) => reg.regionName == region)?.regionMasterId;\r\n    this.region = [{ 'regionMasterId': this.regionId }]\r\n    let req = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      regionId: this.regionId,\r\n    };\r\n    this.baselineService.listOfBranchesOfARegion(req).subscribe(\r\n      (res) => {\r\n        this.branchList = res?.responseObject;\r\n      },\r\n      (error) => {\r\n        this.branchList = null;\r\n      }\r\n    );\r\n    if (this.userForm.value.region == '') {\r\n      this.branchList = [];\r\n    }\r\n  }\r\n  changeBranch(value) {\r\n    this.currentBranchId = value;\r\n    this.branch = [{ 'branchId': this.currentBranchId }]\r\n  }\r\n\r\n  changeBaseBranch(value) {\r\n    this.currentBranchId = value;\r\n  }\r\n\r\n  onSave() {\r\n    console.log(this.userForm);\r\n    if (this.userForm.value.multiRegion != null) {\r\n      this.userForm.value.multiRegion.forEach(x => delete x.regionName);\r\n    }\r\n    // this.changeBranch(this.userForm.value.branch);\r\n    this.userForm.markAllAsTouched();\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      userId: this.data.createMode ? 0 : this.data.userData.userId,\r\n      userFirstName: this.userForm.value.firstName ? this.validationService.camelize(this.userForm.value.firstName.trim()) : null,\r\n      userMiddleName: this.userForm.value.middleName ? this.validationService.camelize(this.userForm.value.middleName.trim()) : null,\r\n      userLastName: this.userForm.value.lastName ? this.validationService.camelize(this.userForm.value.lastName.trim()) : null,\r\n      loginId: 'BK' + this.userForm.value.loginId,\r\n      email: this.userForm.value.primaryEmail,\r\n      emailSecondary: this.userForm.value.secondaryEmail,\r\n      mobileNumber: this.userForm.value.primaryMobile,\r\n      mobileNumberSecondary: this.userForm.value.secondaryMobile,\r\n\r\n      currentBranchId: (this.data.createMode == true)\r\n        ? this.userForm.value.branch || this.userForm.value.baseBranch\r\n        : (this.data.userData.activeHouseholdCount != 0 || this.data.userData.activeSsCount != 0) ? this.data.userData.currentBranchId : this.userForm.value.branch || this.userForm.value.baseBranch,\r\n\r\n      roleShortName: (this.data.createMode == true)\r\n        ? this.userForm.value.userRole\r\n        : (this.data.userData.activeHouseholdCount != 0 || this.data.userData.activeSsCount != 0) ? this.data.userData.roleShortName : this.userForm.value.userRole,\r\n\r\n      roleMasterId: this.roleList.find(role => role.roleShortName ==\r\n        ((this.data.createMode == true)\r\n          ? this.userForm.value.userRole\r\n          : (this.data.userData.activeHouseholdCount != 0 || this.data.userData.activeSsCount != 0) ? this.data.userData.roleShortName : this.userForm.value.userRole)\r\n      )?.roleMasterId,\r\n      branchList: (this.userForm.value.userRole?.indexOf('HCO') != -1) ?\r\n        this.branch : null,\r\n      regionList: (this.userForm.value.userRole?.indexOf('HCO') != -1 || this.userForm.value.userRole?.indexOf('AC') != -1) ?\r\n        this.region : this.userForm.value.multiRegion\r\n    }\r\n    console.log(Dto);\r\n    if (this.userForm.valid) {\r\n      this.http.post(`${this.httpService.baseURL}user/saveOrUpdate`, Dto).subscribe((res: any) => {\r\n        if (res.status) {\r\n          this.showSuccess('Success');\r\n          this.dialogRef.close();\r\n        } else {\r\n          this.showError('Error');\r\n        }\r\n      });\r\n    } else {\r\n      this.showError('User Form is not valid ')\r\n    }\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'New User Created', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n","<h1 mat-dialog-title>\r\n  <div class=\"dialog-header\">\r\n    <h2 class=\"dialog-title\">Create User</h2>\r\n    <div><i class=\"fas fa-times\" (click)=\"closeDialog()\"></i></div>\r\n  </div>\r\n</h1>\r\n\r\n<div mat-dialog-content>\r\n  <form class=\"form-signin\" [formGroup]=\"userForm\">\r\n    <div class=\"row\">\r\n      <div class=\"form-group col-md-4\">\r\n        <label for=\"userRole\"\r\n          >Role:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <select\r\n          class=\"form-select\"\r\n          formControlName=\"userRole\"\r\n          (change)=\"changeRole($event.target.value)\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.userRole.invalid && f.userRole.touched,\r\n            'is-valid':\r\n              f.userRole.valid && (f.userRole.dirty || f.userRole.touched)\r\n          }\"\r\n        >\r\n          <option [value]=\"null\">-- Select Role --</option>\r\n          <option *ngFor=\"let role of roleList\" [value]=\"role.roleShortName\">\r\n            {{role.roleShortName}}\r\n          </option>\r\n        </select>\r\n        <div *ngIf=\"f.userRole.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.userRole.errors.required\">Role is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\" *ngIf=\"selectMultiRegion\">\r\n        <!-- <button class=\"btn btn-link\" (click)=\"createModal(selectRegion)\"> \r\n       +&nbsp;Select&nbsp;Region&nbsp;<span class=\"text-danger\">*&nbsp;</span>\r\n      </button> -->\r\n      <label for=\"multiRegion\"\r\n          >Select Multiple Region&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <ng-multiselect-dropdown\r\n          [placeholder]=\"'Select Multiple Region'\"\r\n          [settings]=\"dropdownSettings\"\r\n          [data]=\"regionList\"\r\n          [disabled]=\"disableMultiRegion\"\r\n          formControlName=\"multiRegion\"\r\n          (onSelectAll)=\"onSelectAll($event)\"\r\n          (onSelect)=\"onItemSelect($event)\"\r\n          (onDeSelect)=\"onDeSelect($event)\"\r\n          (onDeSelectAll)=\"onDeSelectAll($event)\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.multiRegion.invalid && f.multiRegion.touched,\r\n            'is-valid': f.multiRegion.valid && (f.multiRegion.dirty || f.multiRegion.touched)\r\n          }\"\r\n        >\r\n        </ng-multiselect-dropdown>\r\n        <div *ngIf=\"f.multiRegion.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.multiRegion.errors.required\">\r\n            Region selection is required\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <ng-template #selectRegion let-modal>\r\n\r\n      <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n  \r\n              <div class=\"row\">\r\n                  <div class=\"col-md-7\">\r\n                      <h3 class=\"modal-title\" id=\"modal-basic-title\">Select Region</h3>\r\n                  </div>\r\n  \r\n                  <div class=\"col-md-2\">\r\n                      <span class=\"close\" (click)=\"selectRegionModalDismiss()\"\r\n                          style=\"cursor: pointer;font-size: 35px;\">&times;</span>\r\n                  </div>\r\n              </div>\r\n  \r\n          </div>\r\n  \r\n          <div class=\"modal-body\">\r\n            <div class=\"form-check\" *ngFor=\"let item of items\">\r\n              <label class=\"checkbox-inline\">\r\n                <input type=\"checkbox\" formControlName=\"selectRegion\" class=\"form-check\"\r\n                (change)=\"getSelectedValue(item.name)\" > &nbsp;{{item.name}}\r\n              </label>\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </ng-template> -->\r\n\r\n      <div class=\"form-group col-md\" *ngIf=\"selectSingleRegion\">\r\n        <label for=\"region\"\r\n          >Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <select\r\n          class=\"form-select\"\r\n          (change)=\"changeRegion($event.target.value)\"\r\n          formControlName=\"region\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.region.invalid && f.region.touched,\r\n            'is-valid': f.region.valid && (f.region.dirty || f.region.touched)\r\n          }\"\r\n        >\r\n          <option [value]=\"null\">-- Select Region --</option>\r\n          <option *ngFor=\"let region of regionList\" [value]=\"region.regionName\">\r\n            {{region.regionName}}\r\n          </option>\r\n        </select>\r\n        <div *ngIf=\"f.region.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.region.errors.required\">\r\n            Region selection is required\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\" *ngIf=\"selectSingleBranch\">\r\n        <label for=\"branch\"\r\n          >Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <select\r\n          class=\"form-select\"\r\n          (change)=\"changeBranch($event.target.value)\"\r\n          formControlName=\"branch\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.branch.invalid && f.branch.touched,\r\n            'is-valid': f.branch.valid && (f.branch.dirty || f.branch.touched)\r\n          }\"\r\n        >\r\n          <option [value]=\"null\">-- Select Branch --</option>\r\n          <option *ngFor=\"let branch of branchList\" [value]=\"branch.branchId\">\r\n            {{ branch.branchName }}\r\n          </option>\r\n        </select>\r\n        <div *ngIf=\"f.branch.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.branch.errors.required\">\r\n            Branch selection is required\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\" *ngIf=\"selectBaseBranch\">\r\n        <label for=\"baseBranch\"\r\n          >Base Branch :</label\r\n        >\r\n        <select\r\n          class=\"form-select\"\r\n          (change)=\"changeBaseBranch($event.target.value)\"\r\n          formControlName=\"baseBranch\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.baseBranch.invalid && f.baseBranch.touched,\r\n            'is-valid': f.baseBranch.valid && (f.baseBranch.dirty || f.baseBranch.touched)\r\n          }\"\r\n        >\r\n        <option [value]=\"null\">-- Select Branch --</option>\r\n        <option *ngFor=\"let baseBranch of branchList\" [value]=\"baseBranch.branchId\">\r\n          {{ baseBranch.branchName }}\r\n        </option>\r\n        </select>\r\n        <div *ngIf=\"f.branch.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.branch.errors.required\">\r\n            Branch selection is required\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"firstName\"\r\n          >First Name:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter First Name\"\r\n          formControlName=\"firstName\"\r\n          maxlength=\"20\"\r\n          (keypress)=\"validationService.onlyAlphabets($event)\"\r\n          style=\"text-transform: capitalize\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.firstName.invalid && f.firstName.touched,\r\n            'is-valid':\r\n              f.firstName.valid && (f.firstName.dirty || f.firstName.touched)\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.firstName.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n          <div *ngIf=\"f.firstName.errors.minlength\">\r\n            Minimum length should be 3\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"middleName\">Middle Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          maxlength=\"20\"\r\n          (keypress)=\"validationService.onlyAlphabets($event)\"\r\n          style=\"text-transform: capitalize\"\r\n          placeholder=\"Enter Middle Name\"\r\n          formControlName=\"middleName\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.middleName.invalid && f.middleName.touched\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.middleName.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.middleName.errors.minlength\">\r\n            Minimum length should be 3\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"lastName\">Last Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          maxlength=\"20\"\r\n          (keypress)=\"validationService.onlyAlphabets($event)\"\r\n          style=\"text-transform: capitalize\"\r\n          placeholder=\"Enter Last Name\"\r\n          formControlName=\"lastName\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.lastName.invalid && f.lastName.touched\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.lastName.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.lastName.errors.minlength\">\r\n            Minimum length should be 3\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <br />\r\n    <div class=\"row\">\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"loginId\"\r\n          >Login ID / Employee ID:&nbsp;<span class=\"text-danger\"\r\n            >*&nbsp;</span\r\n          ></label\r\n        >\r\n        <div class=\"loginId\" style=\"display: grid; grid-template-columns: 0.1fr 1fr\">\r\n          <p>\r\n            BK\r\n          </p>\r\n          <input\r\n            style=\"display: block\"\r\n            type=\"text\"\r\n            (keypress)=\"validationService.onlyInteger($event)\"\r\n            formControlName=\"loginId\"\r\n            placeholder=\"Enter Username\"\r\n            class=\"form-control\"\r\n            [maxlength]=\"6\"\r\n            [ngClass]=\"{\r\n              'is-invalid': f.loginId.invalid && f.loginId.touched,\r\n              'is-valid':\r\n                f.loginId.valid && (f.loginId.dirty || f.loginId.touched)\r\n            }\"\r\n          />\r\n          <div></div>\r\n          <div *ngIf=\"f.loginId.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.loginId.errors.required\">\r\n              Login ID / Employee ID is required\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"primaryMobile\"\r\n          >Primary Mobile No:&nbsp;<span class=\"text-danger\"\r\n            >*&nbsp;</span\r\n          ></label\r\n        >\r\n        <input\r\n          type=\"\"\r\n          class=\"form-control\"\r\n          maxlength=\"10\"\r\n          (keypress)=\"validationService.onlyInteger($event)\"\r\n          placeholder=\"Enter Mobile No\"\r\n          formControlName=\"primaryMobile\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.primaryMobile.invalid && f.primaryMobile.touched,\r\n            'is-valid':\r\n              f.primaryMobile.valid && (f.primaryMobile.dirty || f.primaryMobile.touched)\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.primaryMobile.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.primaryMobile.errors.required\">\r\n            Primary Mobile No is required\r\n          </div>\r\n          <div *ngIf=\"f.primaryMobile.errors.minlength\">\r\n            Mobile No. should be of 10 digit\r\n          </div>\r\n          <div *ngIf=\"f.primaryMobile.errors.pattern\">\r\n            Mobile No. should be starting with 6, 7, 8 or 9\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"secondaryMobile\">Secondary Mobile No:</label>\r\n        <input\r\n          type=\"\"\r\n          class=\"form-control\"\r\n          maxlength=\"10\"\r\n          (keypress)=\"validationService.onlyInteger($event)\"\r\n          placeholder=\"Enter Mobile No\"\r\n          formControlName=\"secondaryMobile\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.secondaryMobile.invalid && f.secondaryMobile.touched\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.secondaryMobile.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.secondaryMobile.errors.minlength\">\r\n            Mobile No. should be of 10 digit\r\n          </div>\r\n          <div *ngIf=\"f.secondaryMobile.errors.pattern\">\r\n            Mobile No. should be starting with 6, 7, 8 or 9\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <br />\r\n    <div class=\"row\">\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"primaryEmail\"\r\n          >Primary Email:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter Email\"\r\n          formControlName=\"primaryEmail\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.primaryEmail.invalid && f.primaryEmail.touched,\r\n            'is-valid':\r\n              f.primaryEmail.valid &&\r\n              (f.primaryEmail.dirty || f.primaryEmail.touched)\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.primaryEmail.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.primaryEmail.errors.required\">Email is required</div>\r\n          <div *ngIf=\"f.primaryEmail.errors.email\">Email is not valid</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"secondaryEmail\">Secondary Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter Email\"\r\n          formControlName=\"secondaryEmail\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.secondaryEmail.invalid && f.secondaryEmail.touched,\r\n            'is-valid':\r\n              f.secondaryEmail.valid &&\r\n              (f.secondaryEmail.dirty || f.secondaryEmail.touched)\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.secondaryEmail.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.secondaryEmail.errors.email\">Email is not valid</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSave()\">\r\n      Save\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaselineSurveyService } from '../../baseline-survey/baseline-survey.service';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ConfirmationDialogService } from '../../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { SidebarService } from '../../shared/sidebar/sidebar.service';\r\nimport { UserCreateFormComponent } from '../user-create/user-create-form.component';\r\n\r\n@Component({\r\n  selector: 'app-user-table',\r\n  templateUrl: './user-table.component.html',\r\n  styleUrls: ['./user-table.component.css']\r\n})\r\nexport class UserTableComponent implements OnInit {\r\n  userForm: UntypedFormGroup;\r\n  regionList: Array<any> = [];\r\n  branchList: Array<any> = [];\r\n  userList: Array<any> = [];\r\n  regionId: any;\r\n  branchId: any;\r\n  loader: boolean = true;\r\n  createAccess: boolean;\r\n  updateAccess: boolean;\r\n  deleteAccess: boolean;\r\n\r\n  constructor(public dialog: MatDialog, private fb: UntypedFormBuilder, private httpService: HttpService,\r\n    private http: HttpClient, private baselineService: BaselineSurveyService, private toaster: ToastrService,\r\n    private confirmationDialogService: ConfirmationDialogService, private sidebarService: SidebarService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}user/getListOfAllRegions`, Dto).subscribe((res: any) => {\r\n      this.regionList = res.responseObject;\r\n    });\r\n\r\n    this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'System Administration')?.subMenuDetailList\r\n      .find(item => item.subFunctionMasterId == 1 || item.subFunctionMasterId == 2 || item.subFunctionMasterId == 3 || item.subFunctionMasterId == 4)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'view')?.accessType ? this.router.navigate(['/user']) : this.router.navigate(['/error']);\r\n\r\n    this.createAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'System Administration')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 1)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'create')?.accessType ? true : false;\r\n\r\n    this.updateAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'System Administration')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 1)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'update')?.accessType ? true : false;\r\n\r\n    this.deleteAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'System Administration')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 1)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'delete')?.accessType ? true : false;\r\n  }\r\n\r\n  openCreateUser() {\r\n    const dialogRef = this.dialog.open(UserCreateFormComponent, {\r\n      width: '1000px',\r\n      height: '550px',\r\n      data: {\r\n        createMode: true,\r\n        regionList: this.regionList\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getUserList(this.branchId, this.regionId);\r\n    });\r\n  }\r\n\r\n  openEditUser(i) {\r\n    const dialogRef = this.dialog.open(UserCreateFormComponent, {\r\n      width: '1000px',\r\n      height: '550px',\r\n      data: {\r\n        createMode: false,\r\n        regionList: this.regionList,\r\n        branchList: this.branchList,\r\n        userData: this.userList[i]\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getUserList(this.branchId, this.regionId);\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.userForm = this.fb.group({\r\n      region: ['', Validators.required],\r\n      branch: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.userForm.controls;\r\n  }\r\n\r\n  changeRegion(region) {\r\n    this.regionId = this.regionList.find((reg) => reg.regionName == region)?.regionMasterId;\r\n    let req = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      regionId: this.regionId,\r\n    };\r\n    this.baselineService.listOfBranchesOfARegion(req).subscribe(\r\n      (res) => {\r\n        this.branchList = res?.responseObject;\r\n      },\r\n      (error) => {\r\n        this.branchList = null;\r\n      }\r\n    );\r\n    if (this.userForm.value.region == '') {\r\n      this.branchList = [];\r\n    }\r\n  }\r\n  changeBranch(value) {\r\n    this.branchId = this.branchList?.find(branch => branch.branchName == value)?.branchId;\r\n    this.getUserList(this.branchId, this.regionId);\r\n  }\r\n\r\n  getUserList(branchId: any, regionId: any) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      branchId: branchId,\r\n      regionMasterId: regionId\r\n    }\r\n    this.loader = false;\r\n    if (branchId != undefined || regionId != undefined) {\r\n      this.http.post(`${this.httpService.baseURL}user/getListOfAllBranchAndRegionWiseUsers`, Dto).subscribe((res: any) => {\r\n        this.userList = res.responseObject?.branchWiseUserList.concat(res.responseObject?.regionWiseUserList);\r\n        console.log(this.userList);\r\n        this.loader = true;\r\n      }, error => {\r\n        this.showError('Error');\r\n        this.loader = true;\r\n      })\r\n    } else {\r\n      this.loader = true;\r\n    }\r\n\r\n  }\r\n\r\n  resetPasswords(i) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      userId: this.userList[i].userId,\r\n    }\r\n    this.confirmationDialogService.confirm('', 'Do you want to reset password ?').then(() => {\r\n      this.http.post(`${this.httpService.baseURL}user/resteUserLoginPassword`, Dto).subscribe((res) => {\r\n        this.resetPwSuccess('Success');\r\n      })\r\n    }).catch(() => '');\r\n  }\r\n\r\n  deleteUser(i) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      userId: this.userList[i].userId,\r\n    }\r\n    this.confirmationDialogService.confirm('', 'Do you want to delete ?').then(() => {\r\n      this.http.post(`${this.httpService.baseURL}user/deleteUser`, Dto).subscribe((res: any) => {\r\n        if (this.userList[i].activeHouseholdCount == 0 && this.userList[i].activeSsCount == 0) {\r\n          this.showSuccess('Success');\r\n          this.getUserList(this.branchId, this.regionId);\r\n        } else {\r\n          this.showError('User mapped with Household / SS')\r\n        }\r\n      })\r\n    }).catch(() => '');\r\n  }\r\n\r\n  deactivateUser(i) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      userId: this.userList[i].userId,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}user/deactivateUser`, Dto).subscribe((res: any) => {\r\n      this.getUserList(this.branchId, this.regionId);\r\n    });\r\n  }\r\n\r\n  activateUser(i) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      userId: this.userList[i].userId,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}user/activateUser`, Dto).subscribe((res: any) => {\r\n      this.getUserList(this.branchId, this.regionId);\r\n    });\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'User Deleted', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  resetPwSuccess(message) {\r\n    this.toaster.success(message, 'Password Reset Successs', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n}\r\n","<app-loader [hidden]=\"loader\"></app-loader>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"white_box QA_section mb_30\">\r\n        <div id=\"header-fixed\" style=\"display: flex\">\r\n          <h2 class=\"page-title\">User</h2>\r\n        </div>\r\n\r\n        <div class=\"add_button\" *ngIf=\"createAccess\">\r\n          <button class=\"btn btn-primary\" (click)=\"openCreateUser()\">\r\n            <i class=\"fa fa-address-card-o\" ></i>Create User\r\n          </button>\r\n        </div>\r\n\r\n        <br>\r\n\r\n        <form class=\"form-signin\" [formGroup]=\"userForm\">\r\n          <div class=\"row\">\r\n            <div class=\"form-group col-md\">\r\n              <label for=\"region\"\r\n                >Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n              >\r\n              <select\r\n                class=\"form-select\"\r\n                (change)=\"changeRegion($event.target.value)\"\r\n                formControlName=\"region\"\r\n                [ngClass]=\"{\r\n                  'is-invalid': f.region.invalid && f.region.touched,\r\n                  'is-valid': f.region.valid && (f.region.dirty || f.region.touched)\r\n                }\"\r\n              >\r\n                <option value=\"\">-- Select Region --</option>\r\n                <option *ngFor=\"let region of regionList\">\r\n                  {{region.regionName}}\r\n                </option>\r\n              </select>\r\n              <div *ngIf=\"f.region.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.region.errors.required\">\r\n                  Region selection is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n      \r\n            <div class=\"form-group col-md\">\r\n              <label for=\"branch\"\r\n                >Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n              >\r\n              <select\r\n                class=\"form-select\"\r\n                (change)=\"changeBranch($event.target.value)\"\r\n                formControlName=\"branch\"\r\n                id=\"branch\"\r\n                [ngClass]=\"{\r\n                  'is-invalid': f.branch.invalid && f.branch.touched,\r\n                  'is-valid': f.branch.valid && (f.branch.dirty || f.branch.touched)\r\n                }\"\r\n              >\r\n                <option value=\"\">-- Select Branch --</option>\r\n                <option *ngFor=\"let branch of branchList\" >\r\n                  {{ branch.branchName }}\r\n                </option>\r\n              </select>\r\n              <div *ngIf=\"f.branch.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.branch.errors.required\">\r\n                  Branch selection is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <div class=\"white_box_tittle list_header\" >\r\n          <div class=\"QA_table \">\r\n              <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\r\n                  <table\r\n                      class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\r\n                      role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\r\n      \r\n                      <thead>\r\n                          <tr>\r\n                              <th>SL No</th>\r\n                              <th>Name</th>\r\n                              <th>Login Id</th>\r\n                              <th>Mobile No</th>\r\n                              <th>Role</th>\r\n                              <th>Action</th>\r\n                          </tr>\r\n                      </thead>\r\n      \r\n                      <tbody>\r\n      \r\n                          <tr *ngFor=\"let item of userList;index as i\">\r\n                              <td>{{i+1}}</td>\r\n                              <td>{{item.userFirstName}}  {{item.userMiddleName}}  {{item.userLastName}}</td>\r\n                              <td>{{item.loginId}}</td>\r\n                              <td>{{item.mobileNumber}}</td>\r\n                              <td>{{item.roleShortName}}</td>\r\n                              <td style=\"padding: 0px 0px 0px 32px;\">\r\n                                  <i class=\"fas fa-edit\" title=\"Edit User\" *ngIf=\"updateAccess\" (click)=\"openEditUser(i)\"></i>\r\n                                  <span class=\"fa-passwd-reset fa-stack\" title=\"Reset Password\" (click)=\"resetPasswords(i)\">\r\n                                    <i class=\"fa fa-undo fa-stack-2x\"></i>\r\n                                    <i class=\"fa fa-lock fa-stack-1x\"></i>\r\n                                  </span> &nbsp;\r\n                                  <i class=\"fas fa-trash\" title=\"Delete User\" *ngIf=\"deleteAccess\" (click)=\"deleteUser(i)\"></i>\r\n                                  <i *ngIf=\"item.userActiveFlag == 'Y'\" class=\"fa fa-unlock fa-lg\" title=\"Want to deactivate ?\" (click)=\"deactivateUser(i)\"></i>\r\n                                  <i *ngIf=\"item.userActiveFlag == 'N'\" class=\"fa fa-lock fa-lg activate\" title=\"Want to activate ?\" (click)=\"activateUser(i)\"></i>\r\n                              </td>\r\n                          </tr>\r\n                      </tbody>\r\n                  </table>\r\n              </div>\r\n          </div>\r\n      </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"names":["RouterModule","UserTableComponent","routes","path","component","AdminUserRoutingModule","forChild","imports","exports","CommonModule","UserCreateFormComponent","ReactiveFormsModule","FormsModule","MatNativeDateModule","MatDialogModule","MatTabsModule","NgMultiSelectDropDownModule","LoaderModule","AdminUserModule","forRoot","declarations","Validators","MAT_DIALOG_DATA","i0","constructor","dialogRef","dialog","data","toaster","fb","validationService","modalService","httpService","http","baselineService","disableClose","ngOnInit","console","log","createForm","regionList","Dto","dataAccessDTO","post","baseURL","subscribe","res","roleList","responseObject","createMode","userForm","reset","get","enable","disableMultiRegion","userData","activeHouseholdCount","activeSsCount","disable","userId","changeRole","roleShortName","value","filter","item","regionMasterId","forEach","e","toString","regionMultiId","push","indexOf","getBaseBranch","changeRegion","regionName","patchValue","userRole","multiRegion","region","branch","branchList","branchId","baseBranch","currentBranchId","firstName","userFirstName","middleName","userMiddleName","lastName","userLastName","loginId","slice","primaryMobile","mobileNumber","secondaryMobile","mobileNumberSecondary","primaryEmail","email","trim","secondaryEmail","emailSecondary","dropdownSettings","singleSelection","idField","textField","selectAllText","unSelectAllText","allowSearchFilter","itemsShowLimit","group","required","compose","minLength","pattern","f","controls","roleMasterId","find","role","selectMultiRegion","selectSingleRegion","selectSingleBranch","selectBaseBranch","setValidators","clearAsyncValidators","setValue","onDeSelect","i","onItemSelect","onSelectAll","onDeSelectAll","regionId","length","reg","req","listOfBranchesOfARegion","error","changeBranch","changeBaseBranch","onSave","x","markAllAsTouched","camelize","valid","status","showSuccess","close","showError","closeDialog","message","success","timeOut","selectors","decls","vars","consts","template","ctx","confirmationDialogService","sidebarService","router","subMenuList","functionShortName","subMenuDetailList","subFunctionMasterId","accessDetailList","accessType","navigate","createAccess","updateAccess","deleteAccess","openCreateUser","open","width","height","afterClosed","result","getUserList","openEditUser","userList","branchName","loader","undefined","branchWiseUserList","concat","regionWiseUserList","resetPasswords","confirm","then","resetPwSuccess","catch","deleteUser","deactivateUser","activateUser"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}