{"version":3,"file":"src_app_modules_block-setup_block-setup_module_ts.js","mappings":"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","sources":["./src/app/modules/block-setup/block-home/block-home.component.ts","./src/app/modules/block-setup/block-home/block-home.component.html","./src/app/modules/block-setup/block-setup-form/block-setup-form.component.ts","./src/app/modules/block-setup/block-setup-form/block-setup-form.component.html","./src/app/modules/block-setup/block-setup-routing.module.ts","./src/app/modules/block-setup/block-setup.module.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ConfirmationDialogService } from '../../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { SidebarService } from '../../shared/sidebar/sidebar.service';\r\nimport { BlockSetupFormComponent } from '../block-setup-form/block-setup-form.component';\r\n\r\n@Component({\r\n  selector: 'app-block-home',\r\n  templateUrl: './block-home.component.html',\r\n  styleUrls: ['./block-home.component.css']\r\n})\r\nexport class BlockHomeComponent implements OnInit {\r\n  stateSelectForm: UntypedFormGroup;\r\n  stateList: Array<any> = [];\r\n  stateWiseDistrictList: Array<any> = [];\r\n  districtWiseBlockList: Array<any> = [];\r\n  stateId: any;\r\n  districtId: any;\r\n  loader: boolean = true;\r\n  createAccess: boolean;\r\n  updateAccess: boolean;\r\n  deleteAccess: boolean;\r\n\r\n  constructor(private fb: UntypedFormBuilder, private httpService: HttpService,\r\n    private http: HttpClient, private toaster: ToastrService,\r\n    private confirmationDialogService: ConfirmationDialogService, public dialog: MatDialog,\r\n    private sidebarService: SidebarService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}state/getListOfAllStates`, Dto).subscribe((res: any) => {\r\n      this.stateList = res.responseObject.stateList;\r\n    });\r\n\r\n    this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(item => item.subFunctionMasterId == 37 || item.subFunctionMasterId == 38 || item.subFunctionMasterId == 39 || item.subFunctionMasterId == 40)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'view')?.accessType ? this.router.navigate(['/block']) : this.router.navigate(['/error']);\r\n\r\n    this.createAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 37)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'create')?.accessType ? true : false;\r\n\r\n    this.updateAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 37)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'update')?.accessType ? true : false;\r\n\r\n    this.deleteAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 37)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'delete')?.accessType ? true : false;\r\n  }\r\n\r\n  openCreateBlock() {\r\n    const dialogRef = this.dialog.open(BlockSetupFormComponent, {\r\n      width: '500px',\r\n      height: '370px',\r\n      data: { editMode: false }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getBlockList(this.districtId);\r\n    });\r\n  }\r\n\r\n  openEditBlock(blockDetails) {\r\n    console.log(blockDetails)\r\n    const dialogRef = this.dialog.open(BlockSetupFormComponent, {\r\n      width: '530px',\r\n      height: '345px',\r\n      data: { editMode: true, blockInfo: blockDetails }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getBlockList(this.districtId);\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.stateSelectForm = this.fb.group({\r\n      state: ['', Validators.required],\r\n      district: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.stateSelectForm.controls;\r\n  }\r\n\r\n  changeState(value) {\r\n    this.stateId = value;\r\n    console.log(this.stateId)\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      stateId: this.stateId\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n      this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n    });\r\n    this.stateSelectForm.controls.district.setValue('');\r\n    if (!this.stateSelectForm.value.state) {\r\n      this.districtWiseBlockList = [];\r\n      this.stateWiseDistrictList = [];\r\n    }\r\n  }\r\n\r\n  changeDistrict(value) {\r\n    this.districtId = value\r\n    this.getBlockList(this.districtId);\r\n    if (!this.stateSelectForm.value.district) {\r\n      this.districtWiseBlockList = [];\r\n    }\r\n  }\r\n\r\n  getBlockList(districtId) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      districtMasterId: districtId\r\n    }\r\n    this.loader = false;\r\n    this.http.post(`${this.httpService.baseURL}block/getListOfAllBlock`, Dto).subscribe((res: any) => {\r\n      this.districtWiseBlockList = res.responseObject?.blockList;\r\n      this.loader = true;\r\n    }, error => {\r\n      this.showError('Error');\r\n      this.loader = true;\r\n    });\r\n  }\r\n\r\n  onDelete(blockDetails) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      blockMasterId: blockDetails.blockMasterId\r\n    }\r\n    this.confirmationDialogService.confirm('', `Do you want to delete ${blockDetails.blockName} ?`).then(() => {\r\n      this.http.post(`${this.httpService.baseURL}block/deleteBlock`, Dto).subscribe((res: any) => {\r\n        if (res.status) {\r\n          this.showSuccess(res.message);\r\n          this.getBlockList(this.districtId);\r\n        } else {\r\n          this.showError(res.message)\r\n        }\r\n      })\r\n    }).catch(() => '');\r\n  }\r\n\r\n  /* Show success message toaster */\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Success', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  /* Show Error message toaster */\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n}\r\n","<app-loader [hidden]=\"loader\"></app-loader>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"white_box QA_section mb_30\">\r\n\r\n          <div id=\"header-fixed\" style=\"display: flex;\">\r\n            <h2 class=\"page-title\">Block Setup</h2>\r\n        </div>\r\n        \r\n        <div class=\"add_button\" *ngIf=\"createAccess\">\r\n            <button class=\"btn btn-primary\" (click)=\"openCreateBlock()\">\r\n                <i class=\"fa fa-cubes\"></i>Create Block\r\n            </button>    \r\n        </div>\r\n<br>\r\n        <form class=\"form-signin\" [formGroup]=\"stateSelectForm\">\r\n            <div class=\"row\">\r\n              <div class=\"form-group col-md-4\">\r\n                <label for=\"state\"\r\n                  >State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n                >\r\n                <select\r\n                  class=\"form-select\"\r\n                  (change)=\"changeState($event.target.value)\"\r\n                  formControlName=\"state\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': f.state.invalid && f.state.touched,\r\n                    'is-valid': f.state.valid && (f.state.dirty || f.state.touched)\r\n                  }\"\r\n                >\r\n                <option value=\"\">-- Select state --</option>\r\n                <option *ngFor=\"let state of stateList\" [value]=\"state.stateMasterId\">\r\n                  {{state.stateName}}\r\n                </option>\r\n                </select>\r\n                <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.state.errors.required\">\r\n                    State selection is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group col-md-4\">\r\n                <label for=\"district\"\r\n                  >District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n                >\r\n                <select\r\n                  class=\"form-select\"\r\n                  (change)=\"changeDistrict($event.target.value)\"\r\n                  formControlName=\"district\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': f.district.invalid && f.district.touched,\r\n                    'is-valid': f.district.valid && (f.district.dirty || f.district.touched)\r\n                  }\"\r\n                >\r\n                <option value=\"\">-- Select district --</option>\r\n                <option *ngFor=\"let district of stateWiseDistrictList\" [value]=\"district.districtMasterId\">\r\n                  {{district.districtName}}\r\n                </option>\r\n                </select>\r\n                <div *ngIf=\"f.district.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.district.errors.required\">\r\n                    District selection is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </form>\r\n\r\n        <div class=\"white_box_tittle list_header\" >\r\n            <div class=\"QA_table \">\r\n                <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\r\n                    <table\r\n                        class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\r\n                        role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\r\n        \r\n                        <thead>\r\n                            <tr>\r\n                                <th>SL No</th>\r\n                                <th>State</th>\r\n                                <th>District</th>\r\n                                <th>Block Name</th>\r\n                                <th>Pin Code</th> \r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n        \r\n                        <tbody>\r\n        \r\n                            <tr *ngFor=\"let item of districtWiseBlockList;index as i\">\r\n                                <td>{{i+1}}</td>\r\n                                <td>{{item.stateName}}</td>\r\n                                <td>\r\n                                    {{item.districtName}}\r\n                                </td>\r\n                                <td>\r\n                                  {{item.blockName}}\r\n                                </td>\r\n                                <td>\r\n                                  {{item.pinCode}}\r\n                                </td>\r\n                                <td>\r\n                                    <i class=\"fas fa-edit\" title=\"Edit\" *ngIf=\"updateAccess\" (click)=\"openEditBlock(item)\"></i>\r\n                                    <i class=\"fas fa-trash\" title=\"Delete MUAC\" *ngIf=\"deleteAccess\" (click)=\"onDelete(item)\"></i>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ValidationService } from '../../shared/services/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-block-setup-form',\r\n  templateUrl: './block-setup-form.component.html',\r\n  styleUrls: ['./block-setup-form.component.css']\r\n})\r\nexport class BlockSetupFormComponent implements OnInit {\r\n  blockForm: UntypedFormGroup;\r\n  stateList: Array<any> = [];\r\n  stateWiseDistrictList: Array<any> = [];\r\n\r\n\r\n  constructor(private fb: UntypedFormBuilder, private http: HttpClient, private toaster: ToastrService,\r\n    private httpService: HttpService, public validationService: ValidationService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, public dialogRef: MatDialogRef<BlockSetupFormComponent>) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.blockForm.get('district').enable();\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}state/getListOfAllStates`, Dto).subscribe((res: any) => {\r\n      this.stateList = res.responseObject.stateList;\r\n    });\r\n\r\n    if (this.data.editMode == false) {\r\n      this.blockForm.get('state').enable();\r\n      this.blockForm.get('district').enable();\r\n    } else {\r\n      this.blockForm.get('state').disable();\r\n      this.blockForm.get('district').disable();\r\n      this.changeState(this.data.blockInfo.stateMasterId);\r\n      this.blockForm.patchValue({\r\n        state: this.data.blockInfo.stateMasterId,\r\n        district: this.data.blockInfo.districtMasterId,\r\n        blockName: this.data.blockInfo.blockName,\r\n        pinCode: this.data.blockInfo.pinCode,\r\n      })\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.blockForm = this.fb.group({\r\n      state: ['', Validators.required],\r\n      district: ['', Validators.required],\r\n      blockName: ['', Validators.required],\r\n      pinCode: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.blockForm.controls;\r\n  }\r\n\r\n  changeState(value) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      stateId: value\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n      this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n    });\r\n  }\r\n\r\n  onSave() {\r\n    this.blockForm.markAllAsTouched();\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      blockMasterId: this.data.editMode ? this.data.blockInfo.blockMasterId : \"0\",\r\n      districtMasterId: this.blockForm.controls.district.value,\r\n      blockName: this.validationService.camelize(this.blockForm.value.blockName.trim()),\r\n      pinCode: this.blockForm.value.pinCode,\r\n    }\r\n    if (this.blockForm.valid) {\r\n      this.http.post(`${this.httpService.baseURL}block/saveOrUpdate`, Dto).subscribe((res: any) => {\r\n        if (res.status) {\r\n          this.dialogRef.close();\r\n          this.showSuccess('Block Created');\r\n        } else {\r\n          this.showError(res.message);\r\n        }\r\n      }, error => {\r\n        this.dialogRef.close();\r\n        this.showError('Error')\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  /* Show success message toaster */\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Success', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  /* Show Error message toaster */\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n}\r\n","<h1 mat-dialog-title>\r\n  <div class=\"dialog-header\">\r\n    <h2 class=\"dialog-title\">Create New Block</h2>\r\n    <div><i class=\"fas fa-times\" (click)=\"closeDialog()\"></i></div>\r\n  </div>\r\n</h1>\r\n\r\n<div mat-dialog-content>\r\n  <form class=\"form-signin\" [formGroup]=\"blockForm\">\r\n    <div class=\"row\">\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"state\"\r\n          >State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <select\r\n          class=\"form-select\"\r\n          (change)=\"changeState($event.target.value)\"\r\n          formControlName=\"state\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.state.invalid && f.state.touched,\r\n            'is-valid': f.state.valid && (f.state.dirty || f.state.touched)\r\n          }\"\r\n        >\r\n        <option value=\"\">-- Select state --</option>\r\n        <option *ngFor=\"let state of stateList\" [value]=\"state.stateMasterId\">\r\n          {{state.stateName}}\r\n        </option>\r\n        </select>\r\n        <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.state.errors.required\">State selection is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"district\"\r\n          >District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <select\r\n          class=\"form-select\"\r\n          formControlName=\"district\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.district.invalid && f.district.touched,\r\n            'is-valid':\r\n              f.district.valid && (f.district.dirty || f.district.touched)\r\n          }\"\r\n        >\r\n        <option value=\"\">-- Select district --</option>\r\n        <option *ngFor=\"let district of stateWiseDistrictList\" [value]=\"district.districtMasterId\">\r\n          {{district.districtName}}\r\n        </option>\r\n        </select>\r\n        <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.state.errors.required\">\r\n            District selection is required\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- <br /> -->\r\n    <div class=\"row\">\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"blockName\"\r\n          >Block Name :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter Block Name\"\r\n          formControlName=\"blockName\"\r\n          style=\"text-transform: capitalize\"\r\n          spellcheck=\"false\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.blockName.invalid && f.blockName.touched,\r\n            'is-valid':\r\n              f.blockName.valid && (f.blockName.dirty || f.blockName.touched)\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.blockName.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.blockName.errors.required\">Block Name is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md\">\r\n        <label for=\"pinCode\"\r\n          >Pin Code :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Enter Pin Code\"\r\n          formControlName=\"pinCode\"\r\n          (keypress)=\"validationService.onlyInteger($event)\"\r\n          maxlength=\"6\"\r\n          minlength=\"6\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.pinCode.invalid && f.pinCode.touched,\r\n            'is-valid':\r\n              f.pinCode.valid && (f.pinCode.dirty || f.pinCode.touched)\r\n          }\"\r\n        />\r\n        <div *ngIf=\"f.pinCode.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.pinCode.errors.required\">Pin Code is required</div>\r\n          <div *ngIf=\"f.pinCode.errors?.minlength\">Minimum 6 digit required</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n  <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSave()\">Save</button>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BlockHomeComponent } from './block-home/block-home.component';\r\n\r\nconst routes: Routes = [{ path: '', component: BlockHomeComponent },];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BlockSetupRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BlockSetupRoutingModule } from './block-setup-routing.module';\r\nimport { BlockSetupFormComponent } from './block-setup-form/block-setup-form.component';\r\nimport { BlockHomeComponent } from './block-home/block-home.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { LoaderModule } from '../shared/loader/loader.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [BlockSetupFormComponent, BlockHomeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BlockSetupRoutingModule, ReactiveFormsModule, FormsModule,\r\n    MatTabsModule, MatNativeDateModule, MatDialogModule, MatMenuModule,\r\n    MatIconModule, LoaderModule\r\n  ]\r\n})\r\nexport class BlockSetupModule { }\r\n"],"names":["Validators","BlockSetupFormComponent","i0","BlockHomeComponent","constructor","fb","httpService","http","toaster","confirmationDialogService","dialog","sidebarService","router","ngOnInit","createForm","Dto","dataAccessDTO","post","baseURL","subscribe","res","stateList","responseObject","subMenuList","find","functionShortName","subMenuDetailList","item","subFunctionMasterId","accessDetailList","accessType","navigate","createAccess","updateAccess","deleteAccess","openCreateBlock","dialogRef","open","width","height","data","editMode","afterClosed","result","getBlockList","districtId","openEditBlock","blockDetails","console","log","blockInfo","stateSelectForm","group","state","required","district","f","controls","changeState","value","stateId","stateWiseDistrictList","setValue","districtWiseBlockList","changeDistrict","districtMasterId","loader","blockList","error","showError","onDelete","blockMasterId","confirm","blockName","then","status","showSuccess","message","catch","success","timeOut","selectors","decls","vars","consts","template","ctx","MAT_DIALOG_DATA","validationService","disableClose","blockForm","get","enable","disable","stateMasterId","patchValue","pinCode","onSave","markAllAsTouched","camelize","trim","valid","close","closeDialog","RouterModule","routes","path","component","BlockSetupRoutingModule","forChild","imports","exports","CommonModule","ReactiveFormsModule","FormsModule","MatNativeDateModule","MatDialogModule","MatIconModule","MatMenuModule","MatTabsModule","LoaderModule","BlockSetupModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}