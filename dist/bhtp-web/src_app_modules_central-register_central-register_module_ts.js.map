{"version":3,"file":"src_app_modules_central-register_central-register_module_ts.js","mappings":"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","sources":["./src/app/modules/central-register/central-register-create/central-register-create.component.ts","./src/app/modules/central-register/central-register-create/central-register-create.component.html","./src/app/modules/central-register/central-register-routing.module.ts","./src/app/modules/central-register/central-register-view/central-register-view.component.ts","./src/app/modules/central-register/central-register-view/central-register-view.component.html","./src/app/modules/central-register/central-register.module.ts","./src/app/modules/central-register/central-register.service.ts"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ValidationService } from '../../shared/services/validation.service';\r\nimport { CentralRegisterService } from '../central-register.service';\r\n\r\n@Component({\r\n  selector: 'app-central-register-create',\r\n  templateUrl: './central-register-create.component.html',\r\n  styleUrls: ['./central-register-create.component.css']\r\n})\r\nexport class CentralRegisterCreateComponent implements OnInit {\r\n  dropdownSettings: IDropdownSettings;\r\n  centralRegister: UntypedFormGroup;\r\n  modalContent: any;\r\n  modalReference: any;\r\n  modalIndex: any;\r\n  casteList: any;\r\n  educationList: any;\r\n  monthlyIncomeDetails: any;\r\n  religionDetails: any;\r\n  cardDetails: any;\r\n  haveSanitaryLatrine: string = 'N';\r\n  today: string = new Date(new Date().setDate(new Date().getDate() - 1)).toISOString().substring(0, 10);\r\n  minDate: any;\r\n  minYear: any;\r\n  maxYear: any;\r\n  idTypeField: number = 0;\r\n  @ViewChild('aadhaarId') aadhaarId: ElementRef;\r\n\r\n  childDetails = {\r\n    childInfo: [],\r\n  };\r\n\r\n  constructor(private fb: UntypedFormBuilder, private router: Router, private modalService: NgbModal,\r\n    private centralService: CentralRegisterService, private httpService: HttpService,\r\n    public validationService: ValidationService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getMinDate();\r\n    this.getMinYear();\r\n    this.getMaxYear();\r\n    this.createForm();\r\n\r\n    this.childDetails.childInfo.push({\r\n      age: 'string',\r\n      childDetailId: 0,\r\n      childName: '',\r\n      dob: '',\r\n      familyDetailId: 0,\r\n      sex: '',\r\n      status: 'A'\r\n    });\r\n\r\n    let obj = this.httpService.dataAccessDTO;\r\n\r\n    // API call for getting caste\r\n    this.centralService.getCasteView(obj).subscribe((response: any) => {\r\n      this.casteList = response.responseObject;\r\n      console.log(this.casteList);\r\n    })\r\n\r\n    //API call for getting education details\r\n    this.centralService.getEducationDetails(obj).subscribe((response: any) => {\r\n      this.educationList = response.responseObject;\r\n      console.log(this.educationList);\r\n    })\r\n\r\n    //API call for getting monthlyIncomeDetails\r\n    this.centralService.monthlyIncomeDetails(obj).subscribe((response: any) => {\r\n      this.monthlyIncomeDetails = response.responseObject;\r\n      console.log(this.monthlyIncomeDetails);\r\n    })\r\n\r\n    //API call for getting religionDetails\r\n    this.centralService.religionDetails(obj).subscribe((response: any) => {\r\n      this.religionDetails = response.responseObject;\r\n      console.log(this.religionDetails);\r\n    })\r\n\r\n    //API call for getting idCardDetails\r\n    this.centralService.getIdCardDetails(obj).subscribe((response: any) => {\r\n      this.cardDetails = response.responseObject;\r\n      console.log(this.cardDetails);\r\n    })\r\n\r\n  }\r\n\r\n  aadharcardValidation(event) {\r\n    let data;\r\n    if (event.keyCode !== 8 && event.keyCode !== 46) {\r\n      data = this.aadhaarId.nativeElement.value\r\n        .replace(/[^0-9]/g, '')\r\n        .replace(/\\W/gi, '')\r\n        .replace(/(.{4})/g, '$1 ')\r\n        .trim();\r\n    } else {\r\n      data = this.aadhaarId.nativeElement.value;\r\n    }\r\n    let q: any = this.aadhaarId.nativeElement;\r\n    q.value = data;\r\n    return data;\r\n  }\r\n\r\n  restrictZero(event: any) {\r\n    if (event.target.value.length === 0 && event.key === '0') {\r\n      event.preventDefault();\r\n    }\r\n\r\n  }\r\n\r\n  firstChildCaps(event: any) {\r\n    if (event.target.value) {\r\n      event.target.value = event.target.value[0].toUpperCase() + event.target.value.slice(1);\r\n    }\r\n  }\r\n\r\n  getMinDate() {\r\n    let date = new Date();\r\n    let toDate: any = date.getDate();\r\n    if (toDate < 10) {\r\n      toDate = '0' + toDate;\r\n    }\r\n\r\n    let month: any = date.getMonth() + 1;\r\n    if (month < 10) {\r\n      month = \"0\" + month;\r\n    }\r\n\r\n    let year = date.getUTCFullYear() - 5;\r\n    this.minDate = year + \"-\" + month + \"-\" + toDate;\r\n  }\r\n\r\n  getMinYear() {\r\n    let date = new Date();\r\n    let toDate: any = date.getDate();\r\n    if (toDate < 10) {\r\n      toDate = '0' + toDate;\r\n    }\r\n\r\n    let month: any = date.getMonth() + 1;\r\n    if (month < 10) {\r\n      month = \"0\" + month;\r\n    }\r\n\r\n    let year = date.getUTCFullYear() - 18;\r\n    this.minYear = year + \"-\" + month + \"-\" + toDate;\r\n  }\r\n\r\n  getMaxYear() {\r\n    let date = new Date();\r\n    let toDate: any = date.getDate();\r\n    if (toDate < 10) {\r\n      toDate = '0' + toDate;\r\n    }\r\n\r\n    let month: any = date.getMonth() + 1;\r\n    if (month < 10) {\r\n      month = \"0\" + month;\r\n    }\r\n\r\n    let year = date.getUTCFullYear() - 15;\r\n    this.maxYear = year + \"-\" + month + \"-\" + toDate;\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.centralRegister = this.fb.group({\r\n      district: ['', Validators.required],\r\n      block: ['', Validators.required],\r\n      gp: ['', Validators.required],\r\n      gram: ['', Validators.required],\r\n      swasthyaSahayika: ['', Validators.required],\r\n      family: ['', Validators.required],\r\n      household: ['', Validators.required],\r\n      firstName: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      middleName: ['', Validators.compose([Validators.minLength(3)])],\r\n      lastName: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      age: ['', Validators.required],\r\n      husbandName: ['', Validators.compose([Validators.required, Validators.minLength(3),\r\n      Validators.maxLength(20)])],\r\n      mobile: ['', Validators.compose([Validators.minLength(10), Validators.pattern(\"[6789][0-9]{9}\")])],\r\n      idtype: [''],\r\n      aadhar: ['', Validators.compose([Validators.required, Validators.minLength(12), Validators.pattern(\"[2-9]{1}[0-9]{3}\\\\s[0-9]{4}\\\\s[0-9]{4}\")])],\r\n      pan: ['', Validators.compose([Validators.required, Validators.minLength(10), Validators.pattern(\"[A-Z]{5}[0-9]{4}[A-Z]{1}\")])],\r\n      voter: ['', Validators.compose([Validators.required, Validators.minLength(10), Validators.pattern(\"[A-Z]{3}[0-9]{7}\")])],\r\n      religion: ['', Validators.required],\r\n      caste: ['', Validators.required],\r\n      monthly: ['', Validators.required],\r\n      education: ['', Validators.required],\r\n      children: [''],\r\n      pregnant: ['', Validators.required],\r\n      breastFeeding: ['', Validators.required],\r\n      sanitary: this.haveSanitaryLatrine,\r\n    });\r\n  };\r\n\r\n  get f() {\r\n    return this.centralRegister.controls;\r\n  }\r\n\r\n  openModal(child) {\r\n\r\n    this.modalContent = '';\r\n    this.modalReference = this.modalService.open(child, {\r\n      windowClass: 'Child-Create-ModalClass',\r\n    });\r\n  }\r\n\r\n  addNewChild() {\r\n    this.childDetails.childInfo.push({\r\n      age: 'string',\r\n      childDetailId: 0,\r\n      childName: '',\r\n      dob: '',\r\n      familyDetailId: 0,\r\n      sex: '',\r\n      status: 'A'\r\n    });\r\n  }\r\n\r\n  childModalDismiss() {\r\n    this.modalReference?.close();\r\n  }\r\n\r\n  removeNewChild(i) {\r\n    this.childDetails.childInfo.splice(i, 1);\r\n  }\r\n\r\n  changesanitary(e) {\r\n    this.haveSanitaryLatrine = e.target.value;\r\n  }\r\n\r\n  saveChild() {\r\n    console.log(this.childDetails);\r\n    this.modalReference.close();\r\n  }\r\n\r\n  saveCentralRegister() {\r\n\r\n    let item = this.centralRegister.value;\r\n    let idValue = '';\r\n\r\n    item.firstName = this.validationService.firstCaps(\r\n      item.firstName.trim()\r\n    );\r\n\r\n    item.middleName = this.validationService.firstCaps(\r\n      item.middleName.trim()\r\n    );\r\n\r\n    item.lastName = this.validationService.firstCaps(\r\n      item.lastName.trim()\r\n    );\r\n\r\n    item.husbandName = this.validationService.firstCaps(\r\n      item.husbandName.trim()\r\n    );\r\n\r\n    this.childDetails.childInfo.forEach(item => {\r\n      if (item.childName == '') {\r\n        this.childDetails.childInfo = [];\r\n      }\r\n    })\r\n\r\n    if (item.idtype == 1) {\r\n      idValue = item.aadhar;\r\n    } else if (item.idtype == 2) {\r\n      idValue = item.pan;\r\n    } else if (item.idtype == 3) {\r\n      idValue = item.voter;\r\n    }\r\n\r\n    const postBody = {\r\n\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      houseHoldDetailDTO: {\r\n        branchDTO: {\r\n          branchId: 15,\r\n          branchName: \"Kestopur\",\r\n        },\r\n        branchVillageMapId: 5,\r\n        familyDetailDTOList: [\r\n          {\r\n            age: item.age,\r\n            bbMicroGroupMembership: \"N\",\r\n            casteTypeMasterDTO: {\r\n              casteTypeDescription: this.casteList.filter((x) => x.casteTypeMasterId == item.caste)[0]?.casteTypeDescription,\r\n              casteTypeMasterId: item.caste\r\n            },\r\n            educationalQualificationMasterDTO: {\r\n              educationalQualificationMasterId: item.education,\r\n              qualification: this.educationList.filter((x) => x.educationalQualificationMasterId == item.education)[0]?.qualification\r\n            },\r\n            familyDetailId: 0,\r\n            familyNumber: \"string\",\r\n            firstName: item.firstName,\r\n            haveChild: \"Y\",\r\n            haveSanitaryLatrine: item.haveSanitaryLatrine,\r\n            householdDetailsId: 0,\r\n            husbandOrGuardianName: item.husbandName,\r\n            identityCardDTOList: [\r\n              {\r\n                familyIdentityCardMapId: 0,\r\n                identityCardTypesMasterDTO: {\r\n                  identityCardTypesMasterId: item.idtype ? item.idtype : 0,\r\n                  name: this.cardDetails.filter((x) => x.identityCardTypesMasterId == item.idtype)[0]?.name ?\r\n                    this.cardDetails.filter((x) => x.identityCardTypesMasterId == item.idtype)[0]?.name : ''\r\n                },\r\n                number: idValue\r\n              }\r\n            ],\r\n            institutionalDelivery: \"Y\",\r\n            lactetingMother: item.breastFeeding,\r\n            lastName: item.lastName,\r\n            middleName: item.middleName,\r\n            mobileNumber: item.mobile,\r\n            monthlyIncomeMasterDTO: {\r\n              incomeRange: this.monthlyIncomeDetails.filter((x) => x.monthlyIncomeMasterId == item.monthly)[0]?.incomeRange,\r\n              monthlyIncomeMasterId: item.monthly\r\n            },\r\n            occupationMasterDTO: {\r\n              occupationDescription: \"ocococo\",\r\n              occupationMasterId: 1\r\n            },\r\n            pregnantWoman: item.pregnant,\r\n            religionMasterDTO: {\r\n              religionMasterDescription: this.religionDetails.filter((x) => x.religionMasterId == item.religion)[0]?.religionMasterDescription,\r\n              religionMasterId: item.religion\r\n            },\r\n            status: \"A\",\r\n            totaFamilyMemberFemales: 1,\r\n            totaFamilyMemberMales: 2,\r\n            totaFamilyMemberSrcitizen: 3,\r\n            totalNumberOfChildren: item.children,\r\n            zeroToFiveChildDetailDTOList: this.childDetails.childInfo\r\n          }\r\n        ],\r\n        houseHoldNumber: \"string\",\r\n        householdDetailId: 0,\r\n        status: \"A\",\r\n        swasthyaSahayikaDTO: {\r\n          name: \"ABC\",\r\n          swasthyaSahayikaId: 1\r\n        }\r\n      }\r\n    }\r\n    console.log(postBody);\r\n\r\n\r\n    if (!this.centralRegister.value.firstName) {\r\n      this.showError('First Name should not be blank');\r\n      return;\r\n    } else if (this.centralRegister.value.firstName.length < 3) {\r\n      this.showError('First Name should be at least 3 char long');\r\n      return;\r\n    }\r\n\r\n    if (this.centralRegister.value.middleName.length) {\r\n      if (this.centralRegister.value.middleName.length < 3) {\r\n        this.showError('Middle Name should be at least 3 char long');\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    if (!this.centralRegister.value.lastName) {\r\n      this.showError('Last Name should not be blank');\r\n      return;\r\n    } else if (this.centralRegister.value.lastName.length < 3) {\r\n      this.showError('Last Name should be at least 3 char long');\r\n      return;\r\n    }\r\n\r\n    if (!this.centralRegister.value.age) {\r\n      this.showError('Age should not be blank');\r\n      return;\r\n    }\r\n\r\n    if (!this.centralRegister.value.husbandName) {\r\n      this.showError('Husband Name should not be blank');\r\n      return;\r\n    } else if (this.centralRegister.value.husbandName.length < 3) {\r\n      this.showError('Husband Name should be at least 3 char long');\r\n      return;\r\n    }\r\n\r\n\r\n    if (this.centralRegister.value.mobile.length) {\r\n      if (this.centralRegister.value.mobile.length != 10) {\r\n        this.showError('Mobile Number should exactly contain 10 char');\r\n        return;\r\n      } else {\r\n        let startChar = parseInt(\r\n          this.centralRegister.value.mobile.substr(0, 1)\r\n        );\r\n        console.log(startChar);\r\n        if (startChar < 6) {\r\n          this.showError('Mobile Number must start from 6-9');\r\n          return;\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    if (this.centralRegister.value.idtype) {\r\n      if (this.idTypeField == 1) {\r\n        if (!this.centralRegister.value.aadhar) {\r\n          this.showError('Please Enter Aadhaar Card No.');\r\n          return;\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    if (this.centralRegister.value.idtype) {\r\n      if (this.idTypeField == 2) {\r\n        if (!this.centralRegister.value.pan) {\r\n          this.showError('Please Enter PAN Card No');\r\n          return;\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    if (this.centralRegister.value.idtype) {\r\n      if (this.idTypeField == 3) {\r\n        if (!this.centralRegister.value.voter) {\r\n          this.showError('Please Enter Voter Card No');\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    if (!this.centralRegister.value.religion) {\r\n      this.showError('Please select Religion');\r\n      return;\r\n    }\r\n\r\n    if (!this.centralRegister.value.caste) {\r\n      this.showError('Please select Caste');\r\n      return;\r\n    }\r\n\r\n    if (!this.centralRegister.value.monthly) {\r\n      this.showError('Please select Monthly Income');\r\n      return;\r\n    }\r\n\r\n\r\n    if (!this.centralRegister.value.education) {\r\n      this.showError('Please select Education');\r\n      return;\r\n    }\r\n\r\n    if (!this.centralRegister.value.pregnant) {\r\n      this.showError('Please select Pregnancy');\r\n      return;\r\n    }\r\n\r\n    if (!this.centralRegister.value.breastFeeding) {\r\n      this.showError('Please select Breast-Feeding');\r\n      return;\r\n    }\r\n\r\n\r\n    this.centralService.saveCentralRegister(postBody).subscribe((response: any) => {\r\n      console.log(response);\r\n      if (response.message == \"Success\") {\r\n        this.showSuccess(response.message);\r\n        this.createForm();\r\n        this.childModalDismiss();\r\n      } else {\r\n        this.showError(response.message);\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  resetCentralRegister() {\r\n    this.idTypeField = 0;\r\n    this.haveSanitaryLatrine = 'N';\r\n    this.createForm();\r\n    this.childDetails.childInfo = [{\r\n      age: 'string',\r\n      childDetailId: 0,\r\n      childName: '',\r\n      dob: '',\r\n      familyDetailId: 0,\r\n      sex: '',\r\n      status: 'A'\r\n    }];\r\n\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toastr.success(message, 'Central Register Save', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  showError(message) {\r\n    this.toastr.error(message, 'Central Register Save', {\r\n      timeOut: 2000,\r\n    });\r\n  }\r\n\r\n  IdType(IdType) {\r\n\r\n    if (IdType == \"\") {\r\n      this.idTypeField = 0;\r\n    }\r\n    else {\r\n      this.idTypeField = IdType;\r\n    }\r\n\r\n    if (this.centralRegister.value.idtype == '') {\r\n      this.centralRegister.controls.pan.setValue('');\r\n      this.centralRegister.controls.voter.setValue('');\r\n      this.centralRegister.controls.aadhar.setValue('');\r\n    }\r\n\r\n  }\r\n\r\n  checkChildDisabled() {\r\n    let flag = true;\r\n\r\n    if (this.childDetails.childInfo.length == 0) {\r\n      flag = false;\r\n    }\r\n\r\n    this.childDetails.childInfo.forEach((item) => {\r\n      if (!item.childName || !item.dob || !item.sex) {\r\n        flag = false;\r\n      }\r\n    });\r\n\r\n\r\n    return flag;\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"white_box QA_section mb_30\">\r\n                <h2 class=\"page-title\">Create Central Register</h2>\r\n\r\n                <form class=\"form-signin\" [formGroup]=\"centralRegister\">\r\n\r\n                    <fieldset class=\"scheduler-border\">\r\n                        <legend class=\"scheduler-border\">HH Info</legend>\r\n                        <div class=\"row\">\r\n                            <div class=\"form-group col-md-3\">\r\n                                <label for=\"district\">District\r\n                                    :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <select class=\"form-select\" formControlName=\"district\" id=\"district\" [ngClass]=\"{ 'is-invalid': f.district.invalid && f.district.touched,\r\n                            'is-valid': f.district.valid && (f.district.dirty || f.district.touched) }\">\r\n                                    <option value=\"\">-- Select --</option>\r\n                                    <option>gg</option>\r\n                                </select>\r\n                                <div *ngIf=\"f.district.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.district.errors.required\">District is required</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md-2\">\r\n                                <label for=\"block\">Block\r\n                                    :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <select class=\"form-select\" formControlName=\"block\" id=\"block\" [ngClass]=\"{ 'is-invalid': f.block.invalid && f.block.touched,\r\n                            'is-valid': f.block.valid && (f.block.dirty || f.block.touched) }\">\r\n                                    <option value=\"\">-- Select --</option>\r\n                                    <option>gg</option>\r\n                                </select>\r\n                                <div *ngIf=\"f.block.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.block.errors.required\">Block is required</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md-2\">\r\n                                <label for=\"gp\">GP\r\n                                    :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <select class=\"form-select\" formControlName=\"gp\" id=\"gp\" [ngClass]=\"{ 'is-invalid': f.gp.invalid && f.gp.touched,\r\n                            'is-valid': f.gp.valid && (f.gp.dirty || f.gp.touched) }\">\r\n                                    <option value=\"\">-- Select --</option>\r\n                                    <option>gg</option>\r\n                                </select>\r\n                                <div *ngIf=\"f.gp.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.gp.errors.required\">GP is required</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md-3\">\r\n                                <label for=\"gram\">Village/ Gram Sansad/ Locality\r\n                                    :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <select class=\"form-select\" formControlName=\"gram\" id=\"gram\" [ngClass]=\"{ 'is-invalid': f.gram.invalid && f.gram.touched,\r\n                            'is-valid': f.gram.valid && (f.gram.dirty || f.gram.touched) }\">\r\n                                    <option value=\"\">-- Select --</option>\r\n                                    <option>gg</option>\r\n                                </select>\r\n                                <div *ngIf=\"f.gram.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.gram.errors.required\">Selection is required</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md-2\">\r\n                                <label for=\"swasthyaSahayika\">\r\n                                    Name of SS\r\n                                    :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <select class=\"form-select\" formControlName=\"swasthyaSahayika\" id=\"swasthyaSahayika\"\r\n                                    [ngClass]=\"{ 'is-invalid': f.swasthyaSahayika.invalid && f.swasthyaSahayika.touched,\r\n                                        'is-valid': f.swasthyaSahayika.valid && (f.swasthyaSahayika.dirty || f.swasthyaSahayika.touched) }\">\r\n                                    <option value=\"\">-- Select --</option>\r\n                                    <option>gg</option>\r\n                                </select>\r\n                                <div *ngIf=\"f.swasthyaSahayika.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.swasthyaSahayika.errors.required\">\r\n                                        Name of Swasthya Sahayika/ Health Volunteer is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"form-group col-md-3\">\r\n                                <label for=\"family\">Family Type:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n\r\n                                <select class=\"form-select\" formControlName=\"family\" id=\"family\" [ngClass]=\"{ 'is-invalid': f.family.invalid && f.family.touched,\r\n                                        'is-valid': f.family.valid && (f.family.dirty || f.family.touched) }\">\r\n                                    <option value=\"\">-- Select --</option>\r\n                                    <option value=\"\">Single Family</option>\r\n                                    <option value=\"\">Joint Family</option>\r\n                                </select>\r\n                                <div *ngIf=\"f.family.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.family.errors.required\">\r\n                                        Selection of family is required</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md-4\">\r\n                                <label for=\"household\">Household:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <input type=\"text\" class=\"form-control\" maxlength=\"2\"\r\n                                    (keypress)=\"validationService.onlyInteger($event)\" (keydown)=\"restrictZero($event)\"\r\n                                    placeholder=\"Total Member of All Family\" formControlName=\"household\" [ngClass]=\"{ 'is-invalid': f.household.invalid && f.household.touched,\r\n                                'is-valid': f.household.valid && (f.household.dirty || f.household.touched) }\">\r\n                                <div *ngIf=\"f.household.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.household.errors.required\">Total Member of Household is required</div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </fieldset>\r\n\r\n                    <fieldset class=\"scheduler-border\">\r\n                        <legend class=\"scheduler-border\">Family Info</legend>\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"form-group col-md\">\r\n                                <label for=\"firstName\">First Name:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <input type=\"text\" class=\"form-control\" maxlength=\"20\"\r\n                                    (keypress)=\"validationService.onlyAlphabets($event)\"\r\n                                    style=\"text-transform:capitalize;\" placeholder=\"Enter First Name\"\r\n                                    formControlName=\"firstName\" [ngClass]=\"{ 'is-invalid': f.firstName.invalid && f.firstName.touched,\r\n                                'is-valid': f.firstName.valid && (f.firstName.dirty || f.firstName.touched) }\">\r\n                                <div *ngIf=\"f.firstName.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n                                    <div *ngIf=\"f.firstName.errors.minlength\">\r\n                                        Minimum length should be 3\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md\">\r\n                                <label for=\"middleName\">Middle Name:</label>\r\n                                <input type=\"text\" class=\"form-control\"\r\n                                    (keypress)=\"validationService.onlyAlphabets($event)\"\r\n                                    style=\"text-transform:capitalize;\" placeholder=\"Enter Middle Name\" maxlength=\"20\"\r\n                                    formControlName=\"middleName\"\r\n                                    [ngClass]=\"{ 'is-invalid': f.middleName.invalid && f.middleName.touched}\">\r\n                                <div *ngIf=\"f.middleName.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.middleName.errors.minlength\">\r\n                                        Minimum length should be 3\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md\">\r\n                                <label for=\"lastName\">Last Name:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <input type=\"text\" class=\"form-control\"\r\n                                    (keypress)=\"validationService.onlyAlphabets($event)\"\r\n                                    style=\"text-transform:capitalize;\" placeholder=\"Enter Last Name\" maxlength=\"20\"\r\n                                    formControlName=\"lastName\" [ngClass]=\"{ 'is-invalid': f.lastName.invalid && f.lastName.touched,\r\n                                'is-valid': f.lastName.valid && (f.lastName.dirty || f.lastName.touched) }\">\r\n                                <div *ngIf=\"f.lastName.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n                                    <div *ngIf=\"f.lastName.errors.minlength\">\r\n                                        Minimum length should be 3\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md\">\r\n                                <label for=\"age\">Age:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <input type=\"\" class=\"form-control\" (keypress)=\"validationService.onlyInteger($event)\"\r\n                                    maxlength=\"2\" (keydown)=\"restrictZero($event)\" placeholder=\"Enter Age\"\r\n                                    formControlName=\"age\" [ngClass]=\"{ 'is-invalid': f.age.invalid && f.age.touched,\r\n                                'is-valid': f.age.valid && (f.age.dirty || f.age.touched) }\">\r\n                                <div *ngIf=\"f.age.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.age.errors.required\">Age is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"form-group col-md-3\">\r\n                                <label for=\"husbandName\">Husband Name:&nbsp;<span\r\n                                        class=\"text-danger\">*&nbsp;</span></label>\r\n                                <input type=\"text\" class=\"form-control\" maxlength=\"20\"\r\n                                    (keypress)=\"validationService.onlyAlphabetsAndSpace($event)\"\r\n                                    style=\"text-transform:capitalize;\" placeholder=\"Enter Husband Name\"\r\n                                    formControlName=\"husbandName\" [ngClass]=\"{ 'is-invalid': f.husbandName.invalid && f.husbandName.touched,\r\n                                'is-valid': f.husbandName.valid && (f.husbandName.dirty || f.husbandName.touched) }\">\r\n                                <div *ngIf=\"f.husbandName.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.husbandName.errors.required\">Husband Name is required</div>\r\n                                    <div *ngIf=\"f.husbandName.errors.minlength\">\r\n                                        Minimum length should be 3\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md-3\">\r\n                                <label for=\"mobile\">Mobile No:</label>\r\n                                <input type=\"\" class=\"form-control\" maxlength=\"10\"\r\n                                    (keypress)=\"validationService.onlyInteger($event)\" placeholder=\"Enter Mobile Number\"\r\n                                    formControlName=\"mobile\"\r\n                                    [ngClass]=\"{ 'is-invalid': f.mobile.invalid && f.mobile.touched}\">\r\n                                <div *ngIf=\"f.mobile.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.mobile.errors.minlength\">\r\n                                        Mobile No. should be of 10 digit\r\n                                    </div>\r\n                                    <div *ngIf=\"f.mobile.errors.pattern\">\r\n                                        Mobile No. should be starting with 6, 7, 8 or 9\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md\">\r\n                                <label for=\"idtype\">ID Type:</label>\r\n                                <select class=\"form-select\" formControlName=\"idtype\"\r\n                                    (change)=IdType($event.target.value)>\r\n                                    <option value=\"\">-- Select --</option>\r\n                                    <option *ngFor=\"let item of cardDetails; index as i\"\r\n                                        value=\"{{item.identityCardTypesMasterId}}\">{{item.name}}</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md\" *ngIf=\"idTypeField == 1\">\r\n                                <label for=\"aadhar\">AADHAAR CARD NO :&nbsp;<span\r\n                                        class=\"text-danger\">*&nbsp;</span></label>\r\n                                <input #aadhaarId type=\"text\" class=\"form-control\" maxlength=\"14\"\r\n                                    (keyup)=\"aadharcardValidation($event)\"\r\n                                    (keypress)=\"validationService.onlyIntegerAndSpace($event)\"\r\n                                    placeholder=\"Like 2104 0533 7065\" formControlName=\"aadhar\" [ngClass]=\"{ 'is-invalid': f.aadhar.invalid && f.aadhar.touched,\r\n                                    'is-valid': f.aadhar.valid && (f.aadhar.dirty || f.aadhar.touched)}\">\r\n                                <div *ngIf=\"f.aadhar.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.aadhar.errors.required\"> AADHAAR CARD Number is required</div>\r\n                                    <div *ngIf=\"f.aadhar.errors.minlength || f.aadhar.errors.pattern \">\r\n                                        AADHAAR CARD Number Invalid !\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md\" *ngIf=\"idTypeField == 2\">\r\n                                <label for=\"pan\">PAN CARD NO :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <input type=\"text\" class=\"form-control\" maxlength=\"10\"\r\n                                    (keypress)=\"validationService.charnum($event)\" placeholder=\"Like BBHPM5672K\"\r\n                                    formControlName=\"pan\" [ngClass]=\"{ 'is-invalid': f.pan.invalid && f.pan.touched,\r\n                                     'is-valid': f.pan.valid && (f.pan.dirty || f.pan.touched)}\">\r\n                                <div *ngIf=\"f.pan.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.pan.errors.required\"> PAN Number is required</div>\r\n                                    <div *ngIf=\"f.pan.errors.minlength || f.pan.errors.pattern\">\r\n                                        PAN Number Invalid !\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md\" *ngIf=\"idTypeField == 3\">\r\n                                <label for=\"voter\"> VOTER CARD NO :&nbsp;<span\r\n                                        class=\"text-danger\">*&nbsp;</span></label>\r\n                                <input type=\"text\" class=\"form-control\" maxlength=\"10\"\r\n                                    (keypress)=\"validationService.charnum($event)\" placeholder=\"Like NDF1758462\"\r\n                                    formControlName=\"voter\" [ngClass]=\"{ 'is-invalid': f.voter.invalid && f.voter.touched,\r\n                                    'is-valid': f.voter.valid && (f.voter.dirty || f.voter.touched)}\">\r\n                                <div *ngIf=\"f.voter.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.voter.errors.required\"> VOTER CARD Number is required</div>\r\n                                    <div *ngIf=\"f.voter.errors.minlength || f.voter.errors.pattern\">\r\n                                        VOTER CARD Number Invalid !\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"form-group col-md\">\r\n                                <label for=\"religion\">Religion\r\n                                    :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <select class=\"form-select\" formControlName=\"religion\" id=\"religion\" [ngClass]=\"{ 'is-invalid': f.religion.invalid && f.religion.touched,\r\n                            'is-valid': f.religion.valid && (f.religion.dirty || f.religion.touched) }\">\r\n                                    <option value=\"\">-- Select Religion --</option>\r\n                                    <option *ngFor=\"let item of religionDetails; index as i\"\r\n                                        value=\"{{item.religionMasterId}}\">{{item.religionMasterDescription}}</option>\r\n\r\n                                </select>\r\n                                <div *ngIf=\"f.religion.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.religion.errors.required\">Religion is required</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md\">\r\n                                <label for=\"caste\">Caste\r\n                                    :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <select class=\"form-select\" formControlName=\"caste\" id=\"caste\" [ngClass]=\"{ 'is-invalid': f.caste.invalid && f.caste.touched,\r\n                            'is-valid': f.caste.valid && (f.caste.dirty || f.caste.touched) }\">\r\n                                    <option value=\"\">-- Select Caste --</option>\r\n                                    <option *ngFor=\"let item of casteList; index as i\"\r\n                                        value=\"{{item.casteTypeMasterId}}\">{{item.casteTypeDescription}}</option>\r\n                                </select>\r\n                                <div *ngIf=\"f.caste.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.caste.errors.required\">Caste is required</div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div class=\"form-group col-md\">\r\n                                <label for=\"monthly\">Monthly Family Income\r\n                                    :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <select class=\"form-select\" formControlName=\"monthly\" id=\"monthly\" [ngClass]=\"{ 'is-invalid': f.monthly.invalid && f.monthly.touched,\r\n                            'is-valid': f.monthly.valid && (f.monthly.dirty || f.monthly.touched) }\">\r\n                                    <option value=\"\">-- Select Income --</option>\r\n                                    <option *ngFor=\"let item of monthlyIncomeDetails; index as i\"\r\n                                        value=\"{{item.monthlyIncomeMasterId}}\">{{item.incomeRange}}</option>\r\n                                </select>\r\n                                <div *ngIf=\"f.monthly.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.monthly.errors.required\">Income Range is required</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md\">\r\n                                <label for=\"education\">Education Level\r\n                                    :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <select class=\"form-select\" formControlName=\"education\" id=\"education\" [ngClass]=\"{ 'is-invalid': f.education.invalid && f.education.touched,\r\n                            'is-valid': f.education.valid && (f.education.dirty || f.education.touched) }\">\r\n                                    <option value=\"\">-- Select Education --</option>\r\n                                    <option *ngFor=\"let item of educationList; index as i\"\r\n                                        value=\"{{item.educationalQualificationMasterId}}\">{{item.qualification}}\r\n                                    </option>\r\n                                </select>\r\n                                <div *ngIf=\"f.education.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.education.errors.required\">Education Level is required</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"form-group col-md-3\">\r\n                                <label for=\"children\">\r\n                                    Total Number of Children:</label>\r\n                                <input type=\"text\" class=\"form-control\" maxlength=\"2\"\r\n                                    (keypress)=\"validationService.onlyInteger($event)\" (keydown)=\"restrictZero($event)\"\r\n                                    placeholder=\"Enter Total No. of Children\" formControlName=\"children\">\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md-3\">\r\n                                <label for=\"pregnant\">Are you pregnant now?\r\n                                    :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <select class=\"form-select\" formControlName=\"pregnant\" id=\"pregnant\" [ngClass]=\"{ 'is-invalid': f.pregnant.invalid && f.pregnant.touched,\r\n                            'is-valid': f.pregnant.valid && (f.pregnant.dirty || f.pregnant.touched) }\">\r\n                                    <option value=\"\">-- Select --</option>\r\n                                    <option value=\"Y\">Yes</option>\r\n                                    <option value=\"N\">No</option>\r\n                                    <option value=\"NA\">N/A</option>\r\n\r\n                                </select>\r\n                                <div *ngIf=\"f.pregnant.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.pregnant.errors.required\">Pregnant woman is required</div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div class=\"form-group col-md-3\">\r\n                                <label for=\"breastFeeding\">Are you breast-feeding?\r\n                                    :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                                <select class=\"form-select\" formControlName=\"breastFeeding\" id=\"breastFeeding\"\r\n                                    [ngClass]=\"{ 'is-invalid': f.breastFeeding.invalid && f.breastFeeding.touched,\r\n                            'is-valid': f.breastFeeding.valid && (f.breastFeeding.dirty || f.breastFeeding.touched) }\">\r\n                                    <option value=\"\">-- Select --</option>\r\n                                    <option value=\"Y\">Yes</option>\r\n                                    <option value=\"N\">No</option>\r\n                                    <option value=\"NA\">N/A</option>\r\n\r\n                                </select>\r\n                                <div *ngIf=\"f.breastFeeding.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.breastFeeding.errors.required\">Breast Feeding selection is required\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md-3\">\r\n                                <label for=\"sanitary\"> Do you have sanitary latrine at your house premise?&nbsp;<span\r\n                                        class=\"text-danger\">*&nbsp;</span></label>\r\n\r\n                                <div class=\"form-check-inline\">\r\n                                    <input value=\"Y\" class=\"form-check-input\" type=\"radio\" name=\"sanitary\" id=\"yes\"\r\n                                        formControlName='sanitary' (change)=\"changesanitary($event)\">\r\n                                    <label class=\"form-check-label\" for=\"sanitary\"> &nbsp;&nbsp;Yes</label>\r\n\r\n                                    <div class=\"form-check-inline\">\r\n                                        &nbsp;&nbsp;&nbsp;\r\n                                        <input value=\"N\" class=\"form-check-input\" type=\"radio\" name=\"sanitary\" id=\"no\"\r\n                                            formControlName='sanitary' (change)=\"changesanitary($event)\" checked>\r\n                                        <label class=\"form-check-label\" for=\"sanitary\"> &nbsp;&nbsp;No</label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"form-group col-md-4\">\r\n                                <label for=\"addChild\" class=\"btn btn-link\" (click)=\"openModal(child)\">Child\r\n                                    Details:</label>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </fieldset>\r\n                    <!-- [disabled]='!centralRegister.valid' -->\r\n                    <div class=\"text-center\">\r\n                        <button class=\"btn btn-primary m-1\" (click)=\"saveCentralRegister()\"><i\r\n                                class=\"fas fa-check-circle m-1\"></i>Save</button>\r\n                        <button class=\"btn btn-secondary m-1\" (click)=\"resetCentralRegister()\"><i\r\n                                class=\"fa fa-refresh m-1\"></i>Reset</button>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #child let-modal>\r\n\r\n    <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-7\">\r\n                    <h4 class=\"modal-title\" id=\"modal-basic-title\">Child Details</h4>\r\n                </div>\r\n\r\n                <div class=\"col-md-3\">\r\n                    <i class=\"fas fa-plus-circle\" (click)=\"addNewChild()\" style=\"cursor: pointer;\"\r\n                        title=\"Add Child\"></i>\r\n                </div>\r\n\r\n                <div class=\"col-md-2\">\r\n                    <span class=\"close\" (click)=\"childModalDismiss()\" title=\"close\"\r\n                        style=\"cursor: pointer;font-size: 35px;\">&times;</span>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"modal-body\">\r\n\r\n            <div id=\"table_wrapper\">\r\n                <table class=\"table table-striped\" id=\"table_wrapper\">\r\n                    <thead>\r\n\r\n                        <tr style=\"text-align: center;\">\r\n                            <th>Child Name</th>\r\n                            <th>Date of Birth</th>\r\n                            <th>Sex</th>\r\n                            <th>Remove</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        <tr *ngFor=\"let items of childDetails.childInfo; index as i\">\r\n                            <td> <input type=\"text\" class=\"form-control\" maxlength=\"20\"\r\n                                    (keypress)=\"validationService.onlyAlphabetsAndSpace($event)\"\r\n                                    style=\"text-transform:capitalize;\" (keypress)=\"validationService.titleCase($event)\"\r\n                                    placeholder=\"Enter Child Name\" [(ngModel)]=\"childDetails.childInfo[i].childName\">\r\n                            </td>\r\n                            <td> <input type=\"date\" class=\"form-control\" [(ngModel)]=\"childDetails.childInfo[i].dob\"\r\n                                    [min]=\"minDate\" [max]=\"today\">\r\n                            </td>\r\n                            <td>\r\n                                <select class=\"form-select\" id=\"sex\" [(ngModel)]=\"childDetails.childInfo[i].sex\">\r\n                                    <option value=\"\">-- Select Sex --</option>\r\n                                    <option value=\"M\">Male</option>\r\n                                    <option value=\"F\">Female</option>\r\n                                    <option value=\"O\">Others</option>\r\n\r\n                                </select>\r\n\r\n                            </td>\r\n                            <td><button type=\"button\" class=\"btn btn-remove\" (click)=\"removeNewChild(i)\"><i\r\n                                        class=\"fas fa-minus-circle\"></i></button>\r\n                            </td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <button type=\"button\" class=\" btn btn-primary bttn\" (click)=\"saveChild()\"\r\n                        [disabled]=\"!checkChildDisabled()\">Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CentralRegisterCreateComponent } from './central-register-create/central-register-create.component';\r\nimport { CentralRegisterViewComponent } from './central-register-view/central-register-view.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'view', component: CentralRegisterViewComponent },\r\n  { path: 'create', component: CentralRegisterCreateComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CentralRegisterRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, DoCheck, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { BaselineSurveyService } from '../../baseline-survey/baseline-survey.service';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ValidationService } from '../../shared/services/validation.service';\r\nimport { SidebarService } from '../../shared/sidebar/sidebar.service';\r\nimport { CentralRegisterService } from '../central-register.service';\r\nimport CryptoJS from 'crypto-js';\r\n\r\n@Component({\r\n  selector: 'app-central-register-view',\r\n  templateUrl: './central-register-view.component.html',\r\n  styleUrls: ['./central-register-view.component.css'],\r\n})\r\n\r\nexport class CentralRegisterViewComponent implements OnInit, DoCheck {\r\n  centralViewForm: UntypedFormGroup;\r\n  regionList: Array<any> = [];\r\n  branchList: Array<any> = [];\r\n  centralDetails: Array<any> = [];\r\n  gpList: Array<any> = [];\r\n  villageList: Array<any> = [];\r\n  regionBranchHide: boolean;\r\n  villagesOfBranch: Array<any> = [];\r\n  searchFullscreen: boolean;\r\n  p: any;\r\n  page = 1;\r\n  pageSize = 6;\r\n  villageId: any;\r\n  regionId: any;\r\n  branchId: any;\r\n  blockId: any;\r\n  gpId: any;\r\n  localStorageData: any;\r\n  loader: boolean = true;\r\n  registerSearch: any;\r\n  branchEnddateDetailDTO: any;\r\n  timeToTentativeEndDate: any;\r\n\r\n  constructor(private centralService: CentralRegisterService, private http: HttpService, private route: Router,\r\n    public validationService: ValidationService, private fb: UntypedFormBuilder, public sidebarService: SidebarService,\r\n    private httpClient: HttpClient, private baselineService: BaselineSurveyService) { }\r\n\r\n  ngDoCheck(): void {\r\n    this.searchFullscreen = this.validationService.val;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.sidebarService.subMenuList.find(item => item.functionShortName == 'Household Info')?.subMenuDetailList.find(item => item.\r\n      subFunctionMasterId == 89 || item.subFunctionMasterId == 90 || item.subFunctionMasterId == 91 || item.subFunctionMasterId == 92)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'update')?.accessType ? this.route.navigate(['/central-register/view']) : this.route.navigate(['/error']);\r\n\r\n    this.localStorageData = JSON.parse(localStorage.getItem(\"datas\"));\r\n    console.log(this.localStorageData, 'localstorage');\r\n    this.createForm();\r\n\r\n\r\n    if (this.localStorageData) {\r\n      if (this.sidebarService.RoleDTOName.indexOf('HCO') != -1 || this.sidebarService.RoleDTOName.indexOf('TL') != -1) {\r\n        let Dto = {\r\n          dataAccessDTO: this.http.dataAccessDTO,\r\n          branchId: this.localStorageData?.branchID ? this.localStorageData?.branchID : this.sidebarService?.branchId\r\n        }\r\n        if (this.sidebarService.RoleDTOName.indexOf('HCO') != -1 || this.sidebarService.RoleDTOName.indexOf('TL') != -1) {\r\n          this.centralService.villagesOfBranch(Dto).subscribe((res) => {\r\n            if (res.sessionDTO.status == true) {\r\n              this.villagesOfBranch = res.responseObject;\r\n              console.log(this.villagesOfBranch, 'villagesOfBranch12');\r\n            }\r\n          })\r\n          setTimeout(() => {\r\n            this.changeBlock(this.localStorageData?.blockID);\r\n            this.changeGp(this.localStorageData?.gpID);\r\n            this.changeVillage(this.localStorageData?.villageID);\r\n          }, 1000);\r\n\r\n        }\r\n      } else {\r\n        this.changeRegion(this.localStorageData.regionID);\r\n        this.changeBranch(this.localStorageData.branchID);\r\n        setTimeout(() => {\r\n          this.changeBlock(this.localStorageData.blockID);\r\n          this.changeGp(this.localStorageData.gpID);\r\n          this.changeVillage(this.localStorageData.villageID);\r\n        }, 1000);\r\n      }\r\n    }\r\n\r\n    window.onbeforeunload = function () {\r\n      localStorage.removeItem(\"datas\")\r\n    }\r\n\r\n    this.createForm();\r\n\r\n    this.sidebarService.checkRoledetailDTO().then((res: any) => {\r\n      if (res.regionBranchHide) {\r\n        this.regionList = res.region;\r\n        this.regionBranchHide = res.regionBranchHide;\r\n      } else {\r\n        let Dto = {\r\n          dataAccessDTO: res.dataAccessDTO,\r\n          branchId: res.branchId\r\n        }\r\n        // let user = JSON.parse(localStorage.getItem('user'));\r\n        const password = JSON.parse(localStorage.getItem('cachedData'));\r\n        const bytes = CryptoJS.AES.decrypt(password, 'encryptionCode'); let objs = {\r\n          deviceType: \"W\",\r\n          loginId: this.sidebarService.loginId,\r\n          password: bytes.toString(CryptoJS.enc.Utf8)\r\n        }\r\n        this.baselineService.login(objs).subscribe((res: any) => {\r\n          console.log(res.responseObject.branchBaselineSurveyEnddateDetailDTO, 'forclosebaselinedata');\r\n          // console.log(user.responseObject.branchBaselineSurveyEnddateDetailDTO, 'branchBaselineSurveyEnddateDetailDTO');\r\n          if (res.responseObject.branchBaselineSurveyEnddateDetailDTO?.actualEndDate != null) {\r\n            console.log(true, '1');\r\n            this.timeToTentativeEndDate = res.responseObject.branchBaselineSurveyEnddateDetailDTO?.timeToActualEndDate;\r\n          } else if (res.responseObject.branchBaselineSurveyEnddateDetailDTO?.timeToTentativeEndDate != null) {\r\n            console.log(true, '2');\r\n            this.timeToTentativeEndDate = res.responseObject.branchBaselineSurveyEnddateDetailDTO?.timeToTentativeEndDate;\r\n          } else {\r\n            this.timeToTentativeEndDate = '';\r\n          }\r\n        });\r\n        this.regionBranchHide = res.regionBranchHide;\r\n        this.httpClient.post(`${this.sidebarService.baseURL}village/getVillagesOfABranch`, Dto).subscribe((res: any) => {\r\n          if (res.sessionDTO.status == true) {\r\n            this.villagesOfBranch = res.responseObject;\r\n          }\r\n        })\r\n      }\r\n    });\r\n\r\n    this.regionBranchHide = this.sidebarService.regionBranchHide;\r\n  }\r\n\r\n  createForm() {\r\n    this.centralViewForm = this.fb.group({\r\n      region: [this.localStorageData?.regionID ? this.localStorageData?.regionID : '', Validators.required],\r\n      branch: [this.localStorageData?.branchID ? this.localStorageData?.branchID : '', Validators.required],\r\n      block: [this.localStorageData?.blockID ? this.localStorageData?.blockID : '', Validators.required],\r\n      gp: [this.localStorageData?.gpID ? this.localStorageData?.gpID : '', Validators.required],\r\n      gram: [this.localStorageData?.villageID ? this.localStorageData?.villageID : '', Validators.required],\r\n    });\r\n\r\n    if (this.localStorageData != null) {\r\n      this.centralViewForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  get f() {\r\n    return this.centralViewForm.controls;\r\n  }\r\n\r\n  changeRegion(regionId) {\r\n    this.regionId = regionId;\r\n    console.log(this.regionId);\r\n\r\n    let req = {\r\n      dataAccessDTO: this.http.dataAccessDTO,\r\n      regionId: regionId,\r\n    };\r\n    this.centralService.listOfBranchesOfARegion(req).subscribe((res) => {\r\n      this.branchList = res.responseObject;\r\n      console.log(this.branchList, 'this.branchList');\r\n\r\n    }, (error) => {\r\n      this.branchList = null;\r\n    }\r\n    );\r\n\r\n    if (!this.localStorageData) {\r\n      this.centralViewForm.controls.branch.setValue('');\r\n      this.centralViewForm.controls.block.setValue('');\r\n      this.centralViewForm.controls.gp.setValue('');\r\n      this.centralViewForm.controls.gram.setValue('');\r\n      this.villageList = [];\r\n      this.villagesOfBranch = [];\r\n      this.gpList = [];\r\n      this.centralDetails = [];\r\n      this.timeToTentativeEndDate = '';\r\n      if (!this.centralViewForm.value.region) {\r\n        this.villageList = [];\r\n        this.villagesOfBranch = [];\r\n        this.gpList = [];\r\n        this.centralDetails = [];\r\n        this.timeToTentativeEndDate = '';\r\n      }\r\n    } else {\r\n      this.centralViewForm.controls.branch.setValue('');\r\n      this.centralViewForm.controls.block.setValue('');\r\n      this.centralViewForm.controls.gp.setValue('');\r\n      this.centralViewForm.controls.gram.setValue('');\r\n      this.villageList = [];\r\n      this.villagesOfBranch = [];\r\n      this.gpList = [];\r\n      this.centralDetails = [];\r\n      this.timeToTentativeEndDate = '';\r\n    }\r\n\r\n  }\r\n\r\n  changeBranch(branchId) {\r\n    this.branchId = branchId;\r\n    console.log(this.branchId);\r\n\r\n    this.branchEnddateDetailDTO = this.branchList.find(bran => bran.branchId == branchId)?.branchBaselineSurveyEnddateDetailDTO;\r\n    console.log(this.branchEnddateDetailDTO, 'branchEnddateDetailDTO');\r\n    if (this.branchEnddateDetailDTO?.actualEndDate != null) {\r\n      console.log(true, '1');\r\n      this.timeToTentativeEndDate = this.branchEnddateDetailDTO?.timeToActualEndDate;\r\n    } else if (this.branchEnddateDetailDTO?.timeToTentativeEndDate != null) {\r\n      console.log(true, '2');\r\n      this.timeToTentativeEndDate = this.branchEnddateDetailDTO?.timeToTentativeEndDate;\r\n    } else {\r\n      this.timeToTentativeEndDate = '';\r\n    }\r\n\r\n    let Dto = {\r\n      dataAccessDTO: this.http.dataAccessDTO,\r\n      branchId: branchId\r\n    }\r\n\r\n    this.centralService.villagesOfBranch(Dto).subscribe((res) => {\r\n      this.villagesOfBranch = res.responseObject;\r\n      console.log(this.villagesOfBranch, 'villagesOfBranch2');\r\n    });\r\n\r\n    if (!this.localStorageData) {\r\n      this.centralViewForm.controls.block.setValue('');\r\n      this.centralViewForm.controls.gp.setValue('');\r\n      this.centralViewForm.controls.gram.setValue('');\r\n      this.villageList = [];\r\n      this.gpList = [];\r\n      this.centralDetails = [];\r\n      if (!this.centralViewForm.value.branch) {\r\n        this.centralViewForm.controls.block.setValue('');\r\n        this.centralViewForm.controls.gp.setValue('');\r\n        this.centralViewForm.controls.gram.setValue('');\r\n        this.villageList = [];\r\n        this.villagesOfBranch = [];\r\n        this.gpList = [];\r\n        this.centralDetails = [];\r\n      }\r\n    } else {\r\n      this.centralViewForm.controls.block.setValue('');\r\n      this.centralViewForm.controls.gp.setValue('');\r\n      this.centralViewForm.controls.gram.setValue('');\r\n      this.villageList = [];\r\n      this.gpList = [];\r\n      this.centralDetails = [];\r\n      if (!this.centralViewForm.value.branch) {\r\n        this.centralViewForm.controls.block.setValue('');\r\n        this.centralViewForm.controls.gp.setValue('');\r\n        this.centralViewForm.controls.gram.setValue('');\r\n        this.villageList = [];\r\n        this.villagesOfBranch = [];\r\n        this.gpList = [];\r\n        this.centralDetails = [];\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  changeBlock(blockId) {\r\n    this.blockId = blockId;\r\n    console.log(this.blockId);\r\n\r\n    this.gpList = this.villagesOfBranch?.find(block => block.blockMasterId == blockId)?.gpDtoList;\r\n    console.log(this.gpList);\r\n\r\n    if (!this.localStorageData) {\r\n      this.centralViewForm.controls.gp.setValue('');\r\n      this.centralViewForm.controls.gram.setValue('');\r\n      this.centralDetails = [];\r\n      if (!this.centralViewForm.value.block) {\r\n        this.centralViewForm.controls.gp.setValue('');\r\n        this.centralViewForm.controls.gram.setValue('');\r\n        this.villageList = [];\r\n        this.centralDetails = [];\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  changeGp(gpId) {\r\n    this.gpId = gpId;\r\n    console.log(this.gpId);\r\n\r\n    this.villageList = this.gpList?.find(gp => gp.gpMunicipalId == gpId)?.villageDtoList;\r\n    console.log(this.villageList);\r\n\r\n    if (!this.localStorageData) {\r\n      this.centralViewForm.controls.gram.setValue('');\r\n      this.centralDetails = [];\r\n      if (!this.centralViewForm.value.gp) {\r\n        this.centralViewForm.controls.gram.setValue('');\r\n        this.centralDetails = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  changeVillage(villageId) {\r\n    this.villageId = villageId;\r\n    console.log(this.villageId);\r\n    this.loader = false;\r\n    if (!this.centralViewForm.value.gram) {\r\n      this.loader = true;\r\n    }\r\n\r\n    let obj = { dataAccessDTO: this.http.dataAccessDTO, villageId: villageId }\r\n    this.centralService.viewCentralRegisterDetails(obj).subscribe((res) => {\r\n      this.centralDetails = res.responseObject;\r\n      console.log(this.centralDetails);\r\n      this.loader = true;\r\n    });\r\n\r\n    if (!this.localStorageData) {\r\n      this.centralDetails = [];\r\n      if (!this.centralViewForm.value.gram) {\r\n        this.centralDetails = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  routePWStatus(PWitem) {\r\n    if (PWitem.pregnantStatus == 'Y') {\r\n      console.log(PWitem);\r\n      this.route.navigate(['/pw-register'], {\r\n        queryParams: {\r\n          familyID: PWitem.familyDetailId,\r\n          status: 'viewCentral',\r\n          regionID: this.regionId,\r\n          branchID: this.branchId ? this.branchId : this.sidebarService.branchId,\r\n          blockID: this.blockId,\r\n          gpID: this.gpId,\r\n          villageID: this.villageId,\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  routeLMStatus(LMitem) {\r\n    if (LMitem.lactatingWomanStatus == 'Y') {\r\n      console.log(LMitem);\r\n      this.route.navigate(['/lmr'], {\r\n        queryParams: {\r\n          familyID: LMitem.familyDetailId,\r\n          status: 'viewCentralLM',\r\n          regionID: this.regionId,\r\n          branchID: this.branchId ? this.branchId : this.sidebarService.branchId,\r\n          blockID: this.blockId,\r\n          gpID: this.gpId,\r\n          villageID: this.villageId,\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  routePEMStatus(PEMitem) {\r\n    console.log(PEMitem);\r\n    this.route.navigate(['/pem-register/create'], {\r\n      queryParams: {\r\n        familyID: PEMitem.familyDetailId,\r\n        status: 'viewCentralPEM',\r\n        regionID: this.regionId,\r\n        branchID: this.branchId ? this.branchId : this.sidebarService.branchId,\r\n        blockID: this.blockId,\r\n        gpID: this.gpId,\r\n        villageID: this.villageId,\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    localStorage.removeItem(\"datas\");\r\n  }\r\n\r\n}\r\n","<app-loader [hidden]=\"loader\"></app-loader>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"white_box QA_section mb_30\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <h2 class=\"page-title\">View Central Register</h2>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <h4 style=\"color:blue;\">{{timeToTentativeEndDate}}</h4>\r\n                    </div>\r\n                </div>\r\n\r\n                <form class=\"form-signin\" [formGroup]=\"centralViewForm\">\r\n\r\n                    <div class=\"row\" *ngIf=\"regionBranchHide\">\r\n                        <div class=\"form-group col-md\">\r\n                            <label for=\"region\">Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                            <select class=\"form-select\" (change)=\"changeRegion($event.target.value)\"\r\n                                formControlName=\"region\" id=\"region\" [ngClass]=\"{ 'is-invalid': f.region.invalid && f.region.touched,\r\n                              'is-valid':  f.region.valid && (f.region.dirty || f.region.touched) }\">\r\n                                <option value=\"\">-- Select Region --</option>\r\n                                <option *ngFor=\"let region of regionList\" value=\"{{region.regionMasterId}}\">\r\n                                    {{region.regionName}}\r\n                                </option>\r\n                            </select>\r\n                            <div *ngIf=\"f.region.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"f.region.errors.required\">Region selection is required</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md\">\r\n                            <label for=\"branch\">Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                            <select class=\"form-select\" (change)=\"changeBranch($event.target.value)\"\r\n                                formControlName=\"branch\" id=\"branch\" [ngClass]=\"{  'is-invalid': f.branch.invalid && f.branch.touched,\r\n                              'is-valid': f.branch.valid && (f.branch.dirty || f.branch.touched) }\">\r\n                                <option value=\"\">-- Select Branch --</option>\r\n                                <option *ngFor=\"let branch of branchList\" value=\"{{branch.branchId}}\">\r\n                                    {{ branch.branchName }}\r\n                                </option>\r\n                            </select>\r\n                            <div *ngIf=\"f.branch.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"f.branch.errors.required\">Branch selection is required</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group col-md\">\r\n                            <label for=\"block\">Block :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                            <select class=\"form-select\" (change)=\"changeBlock($event.target.value)\"\r\n                                formControlName=\"block\" id=\"block\" [ngClass]=\"{ 'is-invalid': f.block.invalid && f.block.touched,\r\n                              'is-valid': f.block.valid && (f.block.dirty || f.block.touched)  }\">\r\n                                <option value=\"\">-- Select Block --</option>\r\n                                <option *ngFor=\"let block of villagesOfBranch\" value=\"{{block.blockMasterId}}\">\r\n                                    {{ block.blockName }}\r\n                                </option>\r\n                            </select>\r\n                            <div *ngIf=\"f.block.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"f.block.errors.required\">Block selection is required</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md\">\r\n                            <label for=\"gp\">GP/ Municipality :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                            <select class=\"form-select\" (change)=\"changeGp($event.target.value)\" formControlName=\"gp\"\r\n                                id=\"gp\" [ngClass]=\"{ 'is-invalid': f.gp.invalid && f.gp.touched,\r\n                              'is-valid': f.gp.valid && (f.gp.dirty || f.gp.touched) }\">\r\n                                <option value=\"\">-- Select GP/ Municipality --</option>\r\n                                <option *ngFor=\"let gp of gpList\" value=\"{{gp.gpMunicipalId}}\">\r\n                                    {{ gp.name }}\r\n                                </option>\r\n                            </select>\r\n                            <div *ngIf=\"f.gp.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"f.gp.errors.required\">\r\n                                    GP selection is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md\">\r\n                            <label for=\"gram\">Village/ Gram Sansad/ Locality\r\n                                :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\r\n                            <select class=\"form-select\" (change)=\"changeVillage($event.target.value)\"\r\n                                formControlName=\"gram\" id=\"gram\" [ngClass]=\"{'is-invalid': f.gram.invalid && f.gram.touched,\r\n                              'is-valid': f.gram.valid && (f.gram.dirty || f.gram.touched)  }\">\r\n                                <option value=\"\">-- Select Village --</option>\r\n                                <option *ngFor=\"let vill of villageList\" value=\"{{vill.villageMasterId}}\">\r\n                                    {{ vill.villageName }}\r\n                                </option>\r\n                            </select>\r\n                            <div *ngIf=\"f.gram.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"f.gram.errors.required\">\r\n                                    Village selection is required\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"box_right d-flex lms_block col-md-6\">\r\n                        <div class=\"serach_field_2\">\r\n                            <div [ngClass]=\" searchFullscreen? 'search_inner_fullscreen ' : ' search_inner' \">\r\n                                <form active=\"#\">\r\n                                    <div class=\"search_field\">\r\n                                        <input type=\"text\" name=\"search\" placeholder=\"Search central info here...\"\r\n                                            [(ngModel)]=\"registerSearch\">\r\n                                    </div>\r\n                                    <button type=\"submit\"> <i class=\"fa fa-search\"></i> </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"white_box_tittle list_header\">\r\n\r\n                        <div class=\"QA_table \">\r\n                            <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\r\n\r\n                                <table\r\n                                    class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\r\n                                    role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\r\n\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th style=\"width: 10%;\">SL<br>No</th>\r\n                                            <th style=\"width: 10%;\">Family<br>No</th>\r\n                                            <th style=\"width: 22%;\">Name</th>\r\n                                            <th style=\"width: 28%;\">Husband Name</th>\r\n                                            <th>PW<br>Status</th>\r\n                                            <th>LM<br>Status</th>\r\n                                            <th>PEM<br>Status</th>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n                                        <tr\r\n                                            *ngFor=\"let item of centralDetails |filter: registerSearch | paginate: { itemsPerPage: 5, currentPage: p }; index as i\">\r\n                                            <td style=\"width: 10%;\">{{(p-1)*5+i+1 ? (p-1)*5+i+1 : i+1}}</td>\r\n                                            <td style=\"width: 10%;\"> {{item.familyNumber}} </td>\r\n                                            <td style=\"width: 22%;\">{{item.firstName}} {{item.middleName}}\r\n                                                {{item.lastName}}</td>\r\n                                            <td style=\"width: 28%;\">{{item.husbandOrGuardianName}}</td>\r\n                                            <td (click)=\"routePWStatus(item)\"\r\n                                                [ngStyle]=\"{'color':item.pregnantStatus == 'Y' ? 'blue' : '',\r\n                                            'font-weight':item.pregnantStatus == 'Y' ? 'bold' : '', 'cursor': item.pregnantStatus == 'Y' ? 'pointer' : ''}\">\r\n                                                {{item.pregnantStatus}}</td>\r\n                                            <td (click)=\"routeLMStatus(item)\"\r\n                                                [ngStyle]=\"{'color':item.lactatingWomanStatus == 'Y' ? 'blue' : '',\r\n                                                'font-weight':item.lactatingWomanStatus == 'Y' ? 'bold' : '', 'cursor': item.lactatingWomanStatus == 'Y' ? 'pointer' : ''}\">\r\n                                                {{item.lactatingWomanStatus}}</td>\r\n                                            <td *ngIf=\" item.pemStatus.includes('R') || item.pemStatus.includes('G') || item.pemStatus.includes('Y')\"\r\n                                                (click)=\"routePEMStatus(item)\"\r\n                                                [ngStyle]=\"{'color':item.pemStatus.includes('R') || item.pemStatus.includes('G') || item.pemStatus.includes('Y') ? 'blue' : '',\r\n                                                'font-weight':item.pemStatus.includes('R')||  item.pemStatus.includes('G') || item.pemStatus.includes('Y') ? 'bold' : '', \r\n                                                'cursor': item.pemStatus.includes('R')||  item.pemStatus.includes('G') || item.pemStatus.includes('Y') ? 'pointer' : ''}\">\r\n                                                Y</td>\r\n                                            <td *ngIf=\"item.pemStatus == 'N'\">N</td>\r\n                                            <td *ngIf=\"item.pemStatus == 'N/A'\">N/A</td>\r\n\r\n                                        </tr>\r\n                                    </tbody>\r\n\r\n                                </table>\r\n                                <pagination-controls class=\"d-flex justify-content-end p-1 current ngx-pagination1\"\r\n                                    (pageChange)=\"p = $event\" (pageBoundsCorrection)=\"p = $event \">\r\n                                </pagination-controls>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CentralRegisterRoutingModule } from './central-register-routing.module';\r\nimport { CentralRegisterViewComponent } from './central-register-view/central-register-view.component';\r\nimport { CentralRegisterCreateComponent } from './central-register-create/central-register-create.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { LoaderModule } from '../shared/loader/loader.module';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { LocationModule } from '../baseline-survey/location/location.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CentralRegisterViewComponent, CentralRegisterCreateComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CentralRegisterRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    Ng2SearchPipeModule, MatProgressSpinnerModule, LoaderModule,\r\n    NgxPaginationModule, LocationModule\r\n  ],\r\n})\r\nexport class CentralRegisterModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CentralRegisterService {\r\n\r\n  baseURL = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCasteView(obj): any {\r\n    return this.http.post(`${this.baseURL}castemaster/view`, obj)\r\n  }\r\n\r\n  getEducationDetails(obj): any {\r\n    return this.http.post(`${this.baseURL}educationalqualificationmaster/view`, obj)\r\n  }\r\n\r\n  monthlyIncomeDetails(obj): any {\r\n    return this.http.post(`${this.baseURL}monthlyincomemaster/view`, obj)\r\n  }\r\n\r\n  religionDetails(obj): any {\r\n    return this.http.post(`${this.baseURL}religionmaster/view`, obj)\r\n  }\r\n\r\n  getIdCardDetails(obj): any {\r\n    return this.http.post(`${this.baseURL}identitycardtypes/view`, obj)\r\n  }\r\n\r\n  saveCentralRegister(obj): any {\r\n    return this.http.post(`${this.baseURL}baselinesurvey/saveOrUpdate`, obj)\r\n  }\r\n\r\n  viewDetailsCentralRegister(obj): any {\r\n    return this.http.post(`${this.baseURL}familydetail/view`, obj)\r\n  }\r\n\r\n  deleteFamily(obj): any {\r\n    return this.http.post(`${this.baseURL}familydetail/saveOrUpdate`, obj)\r\n  }\r\n\r\n  listOfRegionsOfUser(obj): any {\r\n    return this.http.post(`${this.baseURL}branch/getListOfRegionsOfUser`, obj)\r\n  }\r\n\r\n  listOfBranchesOfARegion(obj): any {\r\n    return this.http.post(`${this.baseURL}branch/getListOfBranchesOfARegion`, obj)\r\n  }\r\n\r\n  villagesOfBranch(obj): any {\r\n    return this.http.post(`${this.baseURL}village/getVillagesOfABranch`, obj)\r\n  }\r\n\r\n  viewCentralRegisterDetails(obj): any {\r\n    return this.http.post(`${this.baseURL}centralRegister/view`, obj)\r\n  }\r\n\r\n\r\n}\r\n\r\n"],"names":["Validators","i0","CentralRegisterCreateComponent","constructor","fb","router","modalService","centralService","httpService","validationService","toastr","Date","setDate","getDate","toISOString","substring","childInfo","ngOnInit","getMinDate","getMinYear","getMaxYear","createForm","childDetails","push","age","childDetailId","childName","dob","familyDetailId","sex","status","obj","dataAccessDTO","getCasteView","subscribe","response","casteList","responseObject","console","log","getEducationDetails","educationList","monthlyIncomeDetails","religionDetails","getIdCardDetails","cardDetails","aadharcardValidation","event","data","keyCode","aadhaarId","nativeElement","value","replace","trim","q","restrictZero","target","length","key","preventDefault","firstChildCaps","toUpperCase","slice","date","toDate","month","getMonth","year","getUTCFullYear","minDate","minYear","maxYear","centralRegister","group","district","required","block","gp","gram","swasthyaSahayika","family","household","firstName","compose","minLength","middleName","lastName","husbandName","maxLength","mobile","pattern","idtype","aadhar","pan","voter","religion","caste","monthly","education","children","pregnant","breastFeeding","sanitary","haveSanitaryLatrine","f","controls","openModal","child","modalContent","modalReference","open","windowClass","addNewChild","childModalDismiss","close","removeNewChild","i","splice","changesanitary","e","saveChild","saveCentralRegister","item","idValue","firstCaps","forEach","postBody","houseHoldDetailDTO","branchDTO","branchId","branchName","branchVillageMapId","familyDetailDTOList","bbMicroGroupMembership","casteTypeMasterDTO","casteTypeDescription","filter","x","casteTypeMasterId","educationalQualificationMasterDTO","educationalQualificationMasterId","qualification","familyNumber","haveChild","householdDetailsId","husbandOrGuardianName","identityCardDTOList","familyIdentityCardMapId","identityCardTypesMasterDTO","identityCardTypesMasterId","name","number","institutionalDelivery","lactetingMother","mobileNumber","monthlyIncomeMasterDTO","incomeRange","monthlyIncomeMasterId","occupationMasterDTO","occupationDescription","occupationMasterId","pregnantWoman","religionMasterDTO","religionMasterDescription","religionMasterId","totaFamilyMemberFemales","totaFamilyMemberMales","totaFamilyMemberSrcitizen","totalNumberOfChildren","zeroToFiveChildDetailDTOList","houseHoldNumber","householdDetailId","swasthyaSahayikaDTO","swasthyaSahayikaId","showError","startChar","parseInt","substr","idTypeField","message","showSuccess","resetCentralRegister","success","timeOut","error","IdType","setValue","checkChildDisabled","flag","selectors","viewQuery","ctx","RouterModule","CentralRegisterViewComponent","routes","path","component","CentralRegisterRoutingModule","forChild","imports","exports","CryptoJS","http","route","sidebarService","httpClient","baselineService","ngDoCheck","searchFullscreen","val","subMenuList","find","functionShortName","subMenuDetailList","subFunctionMasterId","accessDetailList","accessType","navigate","localStorageData","JSON","parse","localStorage","getItem","RoleDTOName","indexOf","Dto","branchID","villagesOfBranch","res","sessionDTO","setTimeout","changeBlock","blockID","changeGp","gpID","changeVillage","villageID","changeRegion","regionID","changeBranch","window","onbeforeunload","removeItem","checkRoledetailDTO","then","regionBranchHide","regionList","region","password","bytes","AES","decrypt","objs","deviceType","loginId","toString","enc","Utf8","login","branchBaselineSurveyEnddateDetailDTO","actualEndDate","timeToTentativeEndDate","timeToActualEndDate","post","baseURL","centralViewForm","branch","markAllAsTouched","regionId","req","listOfBranchesOfARegion","branchList","villageList","gpList","centralDetails","branchEnddateDetailDTO","bran","blockId","blockMasterId","gpDtoList","gpId","gpMunicipalId","villageDtoList","villageId","loader","viewCentralRegisterDetails","routePWStatus","PWitem","pregnantStatus","queryParams","familyID","routeLMStatus","LMitem","lactatingWomanStatus","routePEMStatus","PEMitem","ngOnDestroy","decls","vars","consts","template","CommonModule","FormsModule","ReactiveFormsModule","Ng2SearchPipeModule","MatProgressSpinnerModule","LoaderModule","NgxPaginationModule","LocationModule","CentralRegisterModule","declarations","environment","CentralRegisterService","apiUrl","viewDetailsCentralRegister","deleteFamily","listOfRegionsOfUser","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}