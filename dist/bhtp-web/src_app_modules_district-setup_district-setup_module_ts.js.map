{"version":3,"file":"src_app_modules_district-setup_district-setup_module_ts.js","mappings":"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","sources":["./src/app/modules/district-setup/district-setup-routing.module.ts","./src/app/modules/district-setup/district-setup.component.ts","./src/app/modules/district-setup/district-setup.component.html","./src/app/modules/district-setup/district-setup.module.ts","./src/app/modules/district-setup/district-setup.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DistrictSetupComponent } from './district-setup.component';\n\nconst routes: Routes = [{ path: '', component: DistrictSetupComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DistrictSetupRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from '../core/http/http.service';\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\nimport { ValidationService } from '../shared/services/validation.service';\nimport { SidebarService } from '../shared/sidebar/sidebar.service';\nimport { DistrictSetupService } from './district-setup.service';\n\n@Component({\n  selector: 'app-district-setup',\n  templateUrl: './district-setup.component.html',\n  styleUrls: ['./district-setup.component.css']\n})\nexport class DistrictSetupComponent implements OnInit {\n  districtForm: UntypedFormGroup;\n  districtCreateForm: UntypedFormGroup;\n  stateList: Array<any> = [];\n  districtList: Array<any> = [];\n  page = 1;\n  pageSize = 6;\n  p: any;\n  modalContent: any;\n  modalReference: any;\n  stateId: any;\n  districtId: any;\n  editDistData: any;\n  stateName: any;\n  createMode: boolean;\n  updateMode: boolean;\n  deleteMode: boolean;\n\n  constructor(private fb: UntypedFormBuilder, private httpService: HttpService, private districtService: DistrictSetupService,\n    private modalService: NgbModal, private toaster: ToastrService, private confirmationDialogService: ConfirmationDialogService,\n    private validationService: ValidationService, private sidebarService: SidebarService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.createForm();\n\n    // Api call for viewing state list\n    let obj = {\n      dataAccessDTO: this.httpService.dataAccessDTO\n    }\n\n    this.districtService.getStateList(obj).subscribe((res) => {\n      this.stateList = res.responseObject.stateList;\n      console.log(this.stateList);\n    });\n\n    this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\n      .find(item => item.subFunctionMasterId == 186 || item.subFunctionMasterId == 187 || item.subFunctionMasterId == 188 || item.subFunctionMasterId == 189)?.accessDetailList\n      .find(accessType => accessType.accessType == 'view')?.accessType ? this.router.navigate(['/district-setup']) : this.router.navigate(['/error']);\n\n    this.createMode = this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\n      .find(item => item.subFunctionMasterId == 186 || item.subFunctionMasterId == 187 || item.subFunctionMasterId == 188 || item.subFunctionMasterId == 189)?.accessDetailList\n      .find(accessType => accessType.accessType == 'create')?.accessType ? true : false;\n\n    this.updateMode = this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\n      .find(item => item.subFunctionMasterId == 186 || item.subFunctionMasterId == 187 || item.subFunctionMasterId == 188 || item.subFunctionMasterId == 189)?.accessDetailList\n      .find(accessType => accessType.accessType == 'update')?.accessType ? true : false;\n\n    this.deleteMode = this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\n      .find(item => item.subFunctionMasterId == 186 || item.subFunctionMasterId == 187 || item.subFunctionMasterId == 188 || item.subFunctionMasterId == 189)?.accessDetailList\n      .find(accessType => accessType.accessType == 'delete')?.accessType ? true : false;\n\n  }\n\n  createForm() {\n    this.districtForm = this.fb.group({\n      state: ['', Validators.required]\n    });\n  }\n\n  get f() {\n    return this.districtForm?.controls;\n  }\n\n  createModalForm(editDistData) {\n\n    this.districtCreateForm = this.fb.group({\n      district: [editDistData?.districtName ? editDistData?.districtName : '', Validators.compose([Validators.required, Validators.minLength(3)])]\n    });\n\n    if (editDistData?.districtName) {\n      this.districtCreateForm.markAllAsTouched();\n    }\n  }\n\n  get c() {\n    return this.districtCreateForm?.controls;\n  }\n\n  districtModalDismiss() {\n    console.log(this.districtId);\n\n    if (this.districtId) {\n      this.districtId = 0;\n      this.editDistData = [];\n      this.modalReference?.close();\n    }\n    else {\n      this.modalReference?.close();\n    }\n\n  }\n\n  changeState(stateId) {\n    this.stateId = stateId;\n    console.log(this.stateId);\n    this.stateName = this.stateList.find(state => state.stateMasterId == this.stateId)?.stateName;\n    let postBody = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      stateId: this.stateId\n    }\n    this.districtService.getDistrictList(postBody).subscribe((res) => {\n      this.districtList = res.responseObject;\n      console.log(this.districtList);\n    });\n\n    if (this.districtForm.value.state == '') {\n      this.districtList = [];\n    }\n\n  }\n\n  districtModal(createDistrict, district) {\n    this.districtId = district?.districtMasterId;\n    this.editDistData = district;\n    console.log(this.districtId, this.editDistData, 'districtMasterId', 'editDistData');\n\n\n    console.log(this.stateId, 'stateId create');\n    this.modalContent = '';\n    this.modalReference = this.modalService.open(createDistrict, {\n      windowClass: 'createDistrict',\n    });\n    this.createModalForm(this.editDistData);\n  }\n\n  saveDistrictForm() {\n\n    this.districtCreateForm.value.district = this.validationService.firstCaps(\n      this.districtCreateForm.value.district.trim()\n    );\n\n\n    this.checkDuplicateDistrict();\n\n  }\n\n  checkDuplicateDistrict() {\n    var userInputDistrict = this.districtCreateForm.value.district;\n    let existingDistrictName;\n\n    existingDistrictName = this.districtList?.find(dist => dist.districtName == userInputDistrict)?.districtName\n\n    console.log(existingDistrictName);\n\n\n    if (userInputDistrict == existingDistrictName) {\n      this.showError(userInputDistrict + ' ' + 'already exists in the State. Please retry with a different name');\n      return;\n    }\n\n    if (this.districtCreateForm.valid) {\n      let saveObj = {\n        dataAccessDTO: this.httpService.dataAccessDTO,\n        districtDto: {\n          districtMasterId: this.districtId ? this.districtId : 0,\n          stateId: this.stateId,\n          districtCode: this.editDistData?.districtCode ? this.editDistData?.districtCode : null,\n          districtName: this.validationService.camelize(this.districtCreateForm.value.district.trim()),\n          active_flag: \"Y\"\n        }\n      }\n      console.log(saveObj);\n\n\n      this.districtService.saveOrUpdateDistrict(saveObj).subscribe((res) => {\n        if (res.status == true) {\n          this.showSuccess(res.message);\n          this.districtModalDismiss();\n          this.changeState(this.stateId);\n        }\n        else {\n          this.showError(res.message);\n        }\n\n      })\n\n    }\n\n\n  }\n\n  deleteDistrictForm(district, i) {\n    console.log(district);\n\n    this.confirmationDialogService.confirm('', 'Are you sure you want to delete ?')\n      .then(() => this.delete(district, i)\n      )\n      .catch(() => '');\n  }\n\n  delete(district, i) {\n    let obj = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      districtDto: {\n        districtMasterId: district.districtMasterId,\n        stateId: district.stateId,\n        districtCode: district.districtCode ? district.districtCode : null,\n        districtName: district.districtName,\n        active_flag: 'N'\n      }\n    }\n\n    console.log(obj);\n    this.districtService.saveOrUpdateDistrict(obj).subscribe((res: any) => {\n      console.log(res);\n      if (res.status == true) {\n        this.showSuccess(res.message);\n        this.districtList.splice(i, 1);\n        this.changeState(this.stateId);\n      }\n      else {\n        this.showError(res.message);\n      }\n    })\n\n  }\n\n  showSuccess(message) {\n    this.toaster.success(message, 'Create District', {\n      timeOut: 3000,\n    });\n  }\n\n  showError(message) {\n    this.toaster.error(message, 'Create District', {\n      timeOut: 3000,\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"white_box QA_section mb_30\">\n\n                <div id=\"header-fixed\" style=\"display: flex;\">\n                    <h2 class=\"page-title\">Create District</h2>\n                </div>\n                <form class=\"form-signin\" [formGroup]=\"districtForm\">\n                    <div class=\"row\">\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"state\">State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeState($event.target.value)\"\n                                formControlName=\"state\" [ngClass]=\"{'is-invalid': f.state.invalid && f.state.touched, 'is-valid': \n                                f.state.valid && (f.state.dirty || f.state.touched)}\">\n                                <option value=\"\">-- Select State --</option>\n                                <option *ngFor=\"let state of stateList; index as i\" value=\"{{state.stateMasterId}}\">\n                                    {{state.stateName}}</option>\n                            </select>\n                            <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.state.errors.required\">\n                                    State selection is required\n                                </div>\n                            </div>\n                        </div>\n\n\n                        <div class=\"row\">\n                            <div class=\"form-group col-md\"  *ngIf=\"districtForm.value.state && createMode\"\n                                style=\"display: flex; justify-content:flex-end\">\n                                <button class=\"btn btn-primary\" title=\"Create District Here\"\n                                    (click)=\"districtModal(createDistrict)\">Create</button>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div class=\"white_box_tittle list_header\">\n\n                        <div class=\"QA_table \">\n                            <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                                <table\n                                    class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                                    role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\n\n                                    <thead id=\"header-fixed\">\n                                        <tr>\n                                            <th>SL No</th>\n                                            <th>District Name</th>\n                                            <th *ngIf=\"updateMode || deleteMode\">Action</th>\n\n                                        </tr>\n                                    </thead>\n\n                                    <tbody>\n                                        <tr\n                                            *ngFor=\"let district of districtList | paginate: { itemsPerPage: 5, currentPage: p }; index as i\">\n                                            <td>{{(p-1)*5+i+1 ? (p-1)*5+i+1 : i+1}}</td>\n                                            <td>{{district.districtName}}</td>\n                                            <td style=\"padding: 0px;\" *ngIf=\"updateMode || deleteMode\"><i\n                                                    class=\"fas fa-edit\" title=\"Edit District\"\n                                                    (click)=\"districtModal(createDistrict,district)\"\n                                                    *ngIf=\"updateMode\"></i>\n                                                <i class=\"fas fa-trash\" title=\"Delete District\"\n                                                    (click)=\"deleteDistrictForm(district, i)\" *ngIf=\"deleteMode\"></i>\n                                            </td>\n\n                                        </tr>\n                                    </tbody>\n\n                                </table>\n                                <pagination-controls class=\"d-flex justify-content-end p-1 current ngx-pagination1\"\n                                    (pageChange)=\"p = $event\" (pageBoundsCorrection)=\"p = $event \">\n                                </pagination-controls>\n\n                            </div>\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<ng-template #createDistrict>\n\n    <div class=\"modal-header\">\n\n\n        <div class=\"row\">\n            <div class=\"form-group col-md-5\">\n                <label for=\"branch\" style=\"font-weight: 500;\n                font-size: 1.05rem;\">State :</label>&nbsp;&nbsp;&nbsp;\n                {{stateName}}\n            </div>\n\n            <div class=\"col-md-2\">\n                <span class=\"close\" (click)=\"districtModalDismiss()\"\n                    style=\"cursor: pointer;font-size: 35px;\">&times;</span>\n            </div>\n        </div>\n\n    </div>\n\n    <div class=\"modal-body\">\n        <form class=\"form-signin\" [formGroup]=\"districtCreateForm\">\n\n            <div class=\"row\">\n                <div class=\"form-group col-md-12\">\n                    <label for=\"district\">District:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"district Name\" formControlName=\"district\"\n                        maxlength=\"20\" style=\"text-transform: capitalize\" [ngClass]=\"{'is-invalid': c.district.invalid && c.district.touched,'is-valid': c.district.valid && \n                            (c.district.dirty || c.district.touched)}\" />\n                    <div *ngIf=\"c.district.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"c.district.errors.required\">\n                            District Name is required\n                        </div>\n                        <div *ngIf=\"c.district.errors.minlength\">\n                            Minimum length should be 3\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n\n    <div class=\"modal-footer\">\n        <div class=\"row\">\n            <button type=\"button\" class=\" btn btn-primary bttn\" (click)=\"saveDistrictForm()\">Save</button>\n        </div>\n    </div>\n\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DistrictSetupRoutingModule } from './district-setup-routing.module';\nimport { DistrictSetupComponent } from './district-setup.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n\n@NgModule({\n  declarations: [DistrictSetupComponent],\n  imports: [\n    CommonModule,\n    DistrictSetupRoutingModule,\n    ReactiveFormsModule,\n    NgxPaginationModule\n  ]\n})\nexport class DistrictSetupModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DistrictSetupService {\n  baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getStateList(obj): any {\n    return this.http.post(`${this.baseURL}state/getListOfAllStates`, obj)\n  }\n\n  getDistrictList(obj): any {\n    return this.http.post(`${this.baseURL}district/view`, obj)\n  }\n\n  saveOrUpdateDistrict(obj): any {\n    return this.http.post(`${this.baseURL}district/saveOrUpdate`, obj)\n  }\n}\n"],"names":["RouterModule","DistrictSetupComponent","routes","path","component","DistrictSetupRoutingModule","forChild","imports","exports","Validators","i0","constructor","fb","httpService","districtService","modalService","toaster","confirmationDialogService","validationService","sidebarService","router","ngOnInit","createForm","obj","dataAccessDTO","getStateList","subscribe","res","stateList","responseObject","console","log","subMenuList","find","functionShortName","subMenuDetailList","item","subFunctionMasterId","accessDetailList","accessType","navigate","createMode","updateMode","deleteMode","districtForm","group","state","required","f","controls","createModalForm","editDistData","districtCreateForm","district","districtName","compose","minLength","markAllAsTouched","c","districtModalDismiss","districtId","modalReference","close","changeState","stateId","stateName","stateMasterId","postBody","getDistrictList","districtList","value","districtModal","createDistrict","districtMasterId","modalContent","open","windowClass","saveDistrictForm","firstCaps","trim","checkDuplicateDistrict","userInputDistrict","existingDistrictName","dist","showError","valid","saveObj","districtDto","districtCode","camelize","active_flag","saveOrUpdateDistrict","status","showSuccess","message","deleteDistrictForm","i","confirm","then","delete","catch","splice","success","timeOut","error","selectors","decls","vars","consts","template","ctx","CommonModule","ReactiveFormsModule","NgxPaginationModule","DistrictSetupModule","declarations","environment","DistrictSetupService","http","apiUrl","post","baseURL","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}