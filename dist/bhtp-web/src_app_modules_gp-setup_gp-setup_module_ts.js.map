{"version":3,"file":"src_app_modules_gp-setup_gp-setup_module_ts.js","mappings":"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","sources":["./src/app/modules/gp-setup/gp-home/gp-home.component.ts","./src/app/modules/gp-setup/gp-home/gp-home.component.html","./src/app/modules/gp-setup/gp-setup-form/gp-setup-form.component.ts","./src/app/modules/gp-setup/gp-setup-form/gp-setup-form.component.html","./src/app/modules/gp-setup/gp-setup-routing.module.ts","./src/app/modules/gp-setup/gp-setup.module.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ConfirmationDialogService } from '../../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { SidebarService } from '../../shared/sidebar/sidebar.service';\r\nimport { GpSetupFormComponent } from '../gp-setup-form/gp-setup-form.component';\r\n\r\n@Component({\r\n  selector: 'app-gp-home',\r\n  templateUrl: './gp-home.component.html',\r\n  styleUrls: ['./gp-home.component.css']\r\n})\r\nexport class GpHomeComponent implements OnInit {\r\n  stateSelectForm: UntypedFormGroup;\r\n  stateList: Array<any> = [];\r\n  stateWiseDistrictList: Array<any> = [];\r\n  blockList: Array<any> = [];\r\n  blockId: any;\r\n  gpMunicipality: Array<any> = [];\r\n  loader: boolean = true;\r\n  createAccess: boolean;\r\n  updateAccess: boolean;\r\n  deleteAccess: boolean;\r\n\r\n  constructor(private fb: UntypedFormBuilder, private httpService: HttpService,\r\n    private http: HttpClient, private toaster: ToastrService,\r\n    private confirmationDialogService: ConfirmationDialogService, public dialog: MatDialog,\r\n    private sidebarService: SidebarService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}state/getListOfAllStates`, Dto).subscribe((res: any) => {\r\n      this.stateList = res.responseObject.stateList;\r\n    });\r\n\r\n    this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(item => item.subFunctionMasterId == 41 || item.subFunctionMasterId == 42 || item.subFunctionMasterId == 43 || item.subFunctionMasterId == 44)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'view')?.accessType ? this.router.navigate(['/gp']) : this.router.navigate(['/error']);\r\n\r\n    this.createAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(item => item.subFunctionMasterId == 41 || item.subFunctionMasterId == 42 || item.subFunctionMasterId == 43 || item.subFunctionMasterId == 44)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'create')?.accessType ? true : false;\r\n\r\n    this.updateAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(item => item.subFunctionMasterId == 41 || item.subFunctionMasterId == 42 || item.subFunctionMasterId == 43 || item.subFunctionMasterId == 44)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'update')?.accessType ? true : false;\r\n\r\n    this.deleteAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(item => item.subFunctionMasterId == 41 || item.subFunctionMasterId == 42 || item.subFunctionMasterId == 43 || item.subFunctionMasterId == 44)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'delete')?.accessType ? true : false;\r\n  }\r\n\r\n  openCreateBlock() {\r\n    const dialogRef = this.dialog.open(GpSetupFormComponent, {\r\n      width: '45vw',\r\n      maxWidth: '100vw',\r\n      height: '345px',\r\n      data: { editMode: false }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getListOfAllGpMunicipality(this.blockId);\r\n    });\r\n  }\r\n\r\n  openEditBlock(item) {\r\n    const dialogRef = this.dialog.open(GpSetupFormComponent, {\r\n      width: '45vw',\r\n      maxWidth: '100vw',\r\n      height: '345px',\r\n      data: { editMode: true, gpMunicipalityDetails: item }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getListOfAllGpMunicipality(this.blockId);\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.stateSelectForm = this.fb.group({\r\n      state: ['', Validators.required],\r\n      district: ['', Validators.required],\r\n      block: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.stateSelectForm.controls;\r\n  }\r\n\r\n  changeState(value) {\r\n    let stateId = value;\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      stateId: stateId\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n      this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n    });\r\n    if (!this.stateSelectForm.value.state) {\r\n      this.blockList = [];\r\n      this.gpMunicipality = [];\r\n    }\r\n  }\r\n\r\n  changeDistrict(value) {\r\n    this.blockList = this.stateWiseDistrictList.find(item => item.districtMasterId == value)?.blockList;\r\n    this.stateSelectForm.controls.block.setValue('');\r\n    if (!this.stateSelectForm.value.district) {\r\n      this.gpMunicipality = [];\r\n    }\r\n  }\r\n  changeBlock(value) {\r\n    this.blockId = value;\r\n    this.getListOfAllGpMunicipality(this.blockId);\r\n  }\r\n\r\n  getListOfAllGpMunicipality(blockMasterId) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      blockMasterId: blockMasterId\r\n    }\r\n    this.loader = false;\r\n    this.http.post(`${this.httpService.baseURL}gpmunicipality/getListOfAllGpMunicipality`, Dto).subscribe((res: any) => {\r\n      this.gpMunicipality = res.responseObject?.gpMunicipality;\r\n      this.loader = true;\r\n    }, error => {\r\n      this.showError('Error');\r\n      this.loader = true;\r\n    });\r\n  }\r\n\r\n  onDelete(item) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      gpMunicipalityId: item.gpMunicipalityId\r\n    }\r\n    this.confirmationDialogService.confirm('', `Do you want to delete ${item.gpMunicipalityName} ?`).then(() => {\r\n      this.http.post(`${this.httpService.baseURL}gpmunicipality/deleteGpMunicipality`, Dto).subscribe((res: any) => {\r\n        if (res.status) {\r\n          this.showSuccess(res.message);\r\n          this.getListOfAllGpMunicipality(this.blockId);\r\n        } else {\r\n          this.showError(res.message)\r\n        }\r\n      })\r\n    }).catch(() => '');\r\n  }\r\n\r\n  /* Show success message toaster */\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Success', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  /* Show Error message toaster */\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n}\r\n","<app-loader [hidden]=\"loader\"></app-loader>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"white_box QA_section mb_30\">\r\n\r\n          <div id=\"header-fixed\" style=\"display: flex;\">\r\n            <h2 class=\"page-title\">GP/Municipality  Setup</h2>\r\n        </div>\r\n        \r\n        <div class=\"add_button\" *ngIf=\"createAccess\">\r\n            <button class=\"btn btn-primary\" (click)=\"openCreateBlock()\">\r\n                <i class=\"fa fa-building-o\"></i>Create GP/Municipality\r\n            </button>    \r\n        </div>\r\n<br>\r\n        <form class=\"form-signin\" [formGroup]=\"stateSelectForm\">\r\n            <div class=\"row\">\r\n              <div class=\"form-group col-md-4\">\r\n                <label for=\"state\"\r\n                  >State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n                >\r\n                <select\r\n                  class=\"form-select\"\r\n                  (change)=\"changeState($event.target.value)\"\r\n                  formControlName=\"state\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': f.state.invalid && f.state.touched,\r\n                    'is-valid': f.state.valid && (f.state.dirty || f.state.touched)\r\n                  }\"\r\n                >\r\n                  <option value=\"\">-- Select State --</option>\r\n                  <option *ngFor=\"let state of stateList\" [value]=\"state.stateMasterId\">\r\n                    {{state.stateName}}\r\n                  </option>\r\n                </select>\r\n                <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.state.errors.required\">\r\n                    State selection is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group col-md-4\">\r\n                <label for=\"district\"\r\n                  >District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n                >\r\n                <select\r\n                  class=\"form-select\"\r\n                  (change)=\"changeDistrict($event.target.value)\"\r\n                  formControlName=\"district\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': f.district.invalid && f.district.touched,\r\n                    'is-valid': f.district.valid && (f.district.dirty || f.district.touched)\r\n                  }\"\r\n                >\r\n                  <option value=\"\">-- Select District --</option>\r\n                  <option *ngFor=\"let district of stateWiseDistrictList\" [value]=\"district.districtMasterId\">\r\n                    {{district.districtName}}\r\n                  </option>\r\n                </select>\r\n                <div *ngIf=\"f.district.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.district.errors.required\">\r\n                    District selection is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group col-md-4\">\r\n                <label for=\"block\"\r\n                  >Block :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n                >\r\n                <select\r\n                  class=\"form-select\"\r\n                  (change)=\"changeBlock($event.target.value)\"\r\n                  formControlName=\"block\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': f.block.invalid && f.block.touched,\r\n                    'is-valid': f.block.valid && (f.block.dirty || f.block.touched)\r\n                  }\"\r\n                >\r\n                  <option value=\"\">-- Select Block --</option>\r\n                  <option *ngFor=\"let block of blockList\" [value]=\"block.blockMasterId\">\r\n                    {{block.blockName}}\r\n                  </option>\r\n                </select>\r\n                <div *ngIf=\"f.block.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.block.errors.required\">\r\n                    Block selection is required\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </form>\r\n\r\n        <div class=\"white_box_tittle list_header\" >\r\n            <div class=\"QA_table \">\r\n                <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\r\n                    <table\r\n                        class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\r\n                        role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\r\n        \r\n                        <thead>\r\n                            <tr>\r\n                                <th>SL No</th>\r\n                                <th>State</th>\r\n                                <th>District</th>\r\n                                <th>Block</th>\r\n                                <th>GP/Municipality</th>\r\n                                <th>Type</th> \r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n        \r\n                        <tbody>\r\n        \r\n                            <tr *ngFor=\"let item of gpMunicipality;index as i\">\r\n                                <td>{{i+1}}</td>\r\n                                <td>{{item.stateName}}</td>\r\n                                <td>\r\n                                  {{item.districtName}}\r\n                                </td>\r\n                                <td>\r\n                                  {{item.blockName}}\r\n                                </td>\r\n                                <td>\r\n                                  {{item.gpMunicipalityName}}\r\n                                </td>\r\n                                <td>\r\n                                  {{item.gpMunicipalityType}}\r\n                                </td>\r\n                                <td>\r\n                                    <i class=\"fas fa-edit\" title=\"Edit\" *ngIf=\"updateAccess\" (click)=\"openEditBlock(item)\"></i>\r\n                                    <i class=\"fas fa-trash\" title=\"Delete MUAC\" *ngIf=\"deleteAccess\" (click)=\"onDelete(item)\"></i>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ValidationService } from '../../shared/services/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-gp-setup-form',\r\n  templateUrl: './gp-setup-form.component.html',\r\n  styleUrls: ['./gp-setup-form.component.css']\r\n})\r\nexport class GpSetupFormComponent implements OnInit {\r\n  gpForm: UntypedFormGroup;\r\n  stateList: Array<any> = [];\r\n  stateWiseDistrictList: Array<any> = [];\r\n  blockList: Array<any> = [];\r\n\r\n  constructor(private fb: UntypedFormBuilder, private http: HttpClient, private toaster: ToastrService,\r\n    private httpService: HttpService, public validationService: ValidationService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, public dialogRef: MatDialogRef<GpSetupFormComponent>) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n\r\n    this.http.post(`${this.httpService.baseURL}state/getListOfAllStates`, Dto).subscribe((res: any) => {\r\n      this.stateList = res.responseObject.stateList;\r\n    });\r\n\r\n    if (this.data.editMode) {\r\n      let Dto = {\r\n        dataAccessDTO: this.httpService.dataAccessDTO,\r\n        stateId: this.data.gpMunicipalityDetails.stateMasterId\r\n      }\r\n      this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n        this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n        this.blockList = this.stateWiseDistrictList.find(item => item.districtMasterId == this.data.gpMunicipalityDetails.districtMasterId)?.blockList;\r\n      });\r\n      this.gpForm.patchValue({\r\n        state: this.data.gpMunicipalityDetails.stateMasterId,\r\n        district: this.data.gpMunicipalityDetails.districtMasterId,\r\n        block: this.data.gpMunicipalityDetails.blockMasterId,\r\n        gpName: this.data.gpMunicipalityDetails.gpMunicipalityName,\r\n        type: this.data.gpMunicipalityDetails.gpMunicipalityType,\r\n      })\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.gpForm = this.fb.group({\r\n      state: ['', Validators.required],\r\n      district: ['', Validators.required],\r\n      block: ['', Validators.required],\r\n      gpName: ['', Validators.required],\r\n      type: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.gpForm.controls;\r\n  }\r\n\r\n  changeState(value) {\r\n    let stateId = value;\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      stateId: stateId\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n      this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n    });\r\n    if (!this.gpForm.value.state) {\r\n      this.blockList = [];\r\n    }\r\n  }\r\n\r\n  changeDistrict(value) {\r\n    this.blockList = this.stateWiseDistrictList.find(item => item.districtMasterId == value)?.blockList;\r\n    this.gpForm.controls.block.setValue('');\r\n    if (!this.gpForm.value.district) {\r\n    }\r\n  }\r\n\r\n  onSave() {\r\n    this.gpForm.markAllAsTouched();\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      gpMunicipalityId: this.data.editMode ? this.data.gpMunicipalityDetails.gpMunicipalityId : \"0\",\r\n      gpMunicipalityType: this.gpForm.value.type,\r\n      blockMasterId: this.gpForm.value.block,\r\n      gpMunicipalityName: this.validationService.camelize(this.gpForm.value.gpName.trim()),\r\n    }\r\n    if (this.gpForm.valid) {\r\n      this.http.post(`${this.httpService.baseURL}gpmunicipality/saveOrUpdate`, Dto).subscribe((res: any) => {\r\n        if (res.status) {\r\n          this.dialogRef.close();\r\n          this.showSuccess('GP / Municipality Created');\r\n        } else {\r\n          this.showError(res.message);\r\n        }\r\n      }, error => {\r\n        this.dialogRef.close();\r\n        this.showError('Error')\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  /* Show success message toaster */\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Success', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  /* Show Error message toaster */\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n}\r\n","<h1 mat-dialog-title>\r\n    <div class=\"dialog-header\">\r\n      <h2 class=\"dialog-title\">Create New GP/Municipality</h2>\r\n      <div><i class=\"fas fa-times\" (click)=\"closeDialog()\"></i></div>\r\n    </div>\r\n  </h1>\r\n  \r\n  <div mat-dialog-content>\r\n    <form class=\"form-signin\" [formGroup]=\"gpForm\">\r\n      <div class=\"row\">\r\n        <div class=\"form-group col-md\">\r\n          <label for=\"state\"\r\n            >State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n          >\r\n          <select\r\n            class=\"form-select\"\r\n            (change)=\"changeState($event.target.value)\"\r\n            formControlName=\"state\"\r\n            [ngClass]=\"{\r\n              'is-invalid': f.state.invalid && f.state.touched,\r\n              'is-valid': f.state.valid && (f.state.dirty || f.state.touched)\r\n            }\"\r\n          >\r\n            <option value=\"\">-- Select State --</option>\r\n            <option *ngFor=\"let state of stateList\" [value]=\"state.stateMasterId\">\r\n              {{state.stateName}}\r\n            </option>\r\n          </select>\r\n          <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.state.errors.required\">State selection is required</div>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"form-group col-md\">\r\n          <label for=\"district\"\r\n            >District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n          >\r\n          <select\r\n            class=\"form-select\"\r\n            (change)=\"changeDistrict($event.target.value)\"\r\n            formControlName=\"district\"\r\n            [ngClass]=\"{\r\n              'is-invalid': f.district.invalid && f.district.touched,\r\n              'is-valid':\r\n                f.district.valid && (f.district.dirty || f.district.touched)\r\n            }\"\r\n          >\r\n            <option value=\"\">-- Select District --</option>\r\n            <option *ngFor=\"let district of stateWiseDistrictList\" [value]=\"district.districtMasterId\">\r\n              {{district.districtName}}\r\n            </option>\r\n          </select>\r\n          <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.state.errors.required\">\r\n              District selection is required\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md-4\">\r\n            <label for=\"block\"\r\n              >Block :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"block\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.block.invalid && f.block.touched,\r\n                'is-valid': f.block.valid && (f.block.dirty || f.block.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select Block --</option>\r\n              <option *ngFor=\"let block of blockList\" [value]=\"block.blockMasterId\">\r\n                {{block.blockName}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.block.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.block.errors.required\">\r\n                Block selection is required\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n\r\n      <br>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"form-group col-md\">\r\n          <label for=\"gpName\"\r\n            >GP / Municipality Name :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n          >\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"Enter gp Name\"\r\n            formControlName=\"gpName\"\r\n            style=\"text-transform: capitalize\"\r\n            spellcheck=\"false\"\r\n            [ngClass]=\"{\r\n              'is-invalid': f.gpName.invalid && f.gpName.touched,\r\n              'is-valid':\r\n                f.gpName.valid && (f.gpName.dirty || f.gpName.touched)\r\n            }\"\r\n          />\r\n          <div *ngIf=\"f.gpName.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.gpName.errors.required\">GP / Municipality Name is required</div>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"form-group col-md\">\r\n          <label for=\"type\"\r\n            >Type :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n          >\r\n         <select\r\n              class=\"form-select\"\r\n              formControlName=\"type\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.type.invalid && f.type.touched,\r\n                'is-valid': f.type.valid && (f.type.dirty || f.type.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select Block --</option>\r\n              <option value=\"GP\"> GP </option>\r\n              <option value=\"M\">Municipality</option>\r\n            </select>\r\n          <div *ngIf=\"f.type.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.type.errors.required\">Type is required</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  \r\n  <div mat-dialog-actions>\r\n    <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSave()\">Save</button>\r\n  </div>\r\n  ","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GpHomeComponent } from './gp-home/gp-home.component';\r\n\r\nconst routes: Routes = [{ path: '', component: GpHomeComponent },];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GpSetupRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { GpSetupRoutingModule } from './gp-setup-routing.module';\r\nimport { GpHomeComponent } from './gp-home/gp-home.component';\r\nimport { GpSetupFormComponent } from './gp-setup-form/gp-setup-form.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { LoaderModule } from '../shared/loader/loader.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [GpHomeComponent, GpSetupFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    GpSetupRoutingModule, ReactiveFormsModule, FormsModule,\r\n    MatTabsModule, MatNativeDateModule, MatDialogModule, MatMenuModule,\r\n    MatIconModule, LoaderModule\r\n  ]\r\n})\r\nexport class GpSetupModule { }\r\n"],"names":["Validators","GpSetupFormComponent","i0","GpHomeComponent","constructor","fb","httpService","http","toaster","confirmationDialogService","dialog","sidebarService","router","ngOnInit","createForm","Dto","dataAccessDTO","post","baseURL","subscribe","res","stateList","responseObject","subMenuList","find","functionShortName","subMenuDetailList","item","subFunctionMasterId","accessDetailList","accessType","navigate","createAccess","updateAccess","deleteAccess","openCreateBlock","dialogRef","open","width","maxWidth","height","data","editMode","afterClosed","result","getListOfAllGpMunicipality","blockId","openEditBlock","gpMunicipalityDetails","stateSelectForm","group","state","required","district","block","f","controls","changeState","value","stateId","stateWiseDistrictList","blockList","gpMunicipality","changeDistrict","districtMasterId","setValue","changeBlock","blockMasterId","loader","error","showError","onDelete","gpMunicipalityId","confirm","gpMunicipalityName","then","status","showSuccess","message","catch","success","timeOut","selectors","decls","vars","consts","template","ctx","MAT_DIALOG_DATA","validationService","disableClose","stateMasterId","gpForm","patchValue","gpName","type","gpMunicipalityType","onSave","markAllAsTouched","camelize","trim","valid","close","closeDialog","RouterModule","routes","path","component","GpSetupRoutingModule","forChild","imports","exports","CommonModule","ReactiveFormsModule","FormsModule","MatNativeDateModule","MatDialogModule","MatIconModule","MatMenuModule","MatTabsModule","LoaderModule","GpSetupModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}