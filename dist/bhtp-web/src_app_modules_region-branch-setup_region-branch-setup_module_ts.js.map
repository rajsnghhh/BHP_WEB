{"version":3,"file":"src_app_modules_region-branch-setup_region-branch-setup_module_ts.js","mappings":"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","sources":["./src/app/modules/region-branch-setup/branch-setup/branch-setup.component.ts","./src/app/modules/region-branch-setup/branch-setup/branch-setup.component.html","./src/app/modules/region-branch-setup/region-branch-home/region-branch-home.component.ts","./src/app/modules/region-branch-setup/region-branch-home/region-branch-home.component.html","./src/app/modules/region-branch-setup/region-branch-setup-routing.module.ts","./src/app/modules/region-branch-setup/region-branch-setup.module.ts","./src/app/modules/region-branch-setup/region-setup/region-setup.component.ts","./src/app/modules/region-branch-setup/region-setup/region-setup.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ValidationService } from '../../shared/services/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-branch-setup',\r\n  templateUrl: './branch-setup.component.html',\r\n  styleUrls: ['./branch-setup.component.css']\r\n})\r\nexport class BranchSetupComponent implements OnInit {\r\n  branchForm: UntypedFormGroup;\r\n  regionList: Array<any> = [];\r\n  subVerticalsList: Array<any> = [];\r\n  subVerticleProjectList: Array<any> = [];\r\n  branchTypeList: Array<any> = [];\r\n  stateList: Array<any> = [];\r\n  stateWiseDistrictList: Array<any> = [];\r\n  blockList: Array<any> = [];\r\n  blockMasterId: any;\r\n  stateCode: any;\r\n\r\n  constructor(private fb: UntypedFormBuilder, private http: HttpClient, private toaster: ToastrService, private httpService: HttpService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, public dialogRef: MatDialogRef<BranchSetupComponent>, public validationService: ValidationService,) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.allDropdownValue();\r\n    if (this.data.editMode == false) {\r\n      // this.branchForm.reset();\r\n    } else {\r\n      this.changeSubVertical(this.data.branchDetails.subverticalMasterId);\r\n\r\n      // this.chnageANything(this.data.branchDetails.stateMasterId).then((res) => {\r\n      //   this.changeDistrict(this.data.branchDetails.districtMasterId);\r\n      // });\r\n\r\n\r\n      let Dto = {\r\n        dataAccessDTO: this.httpService.dataAccessDTO,\r\n        stateId: this.data.branchDetails.stateMasterId\r\n      }\r\n      this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n        this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n        this.blockList = this.stateWiseDistrictList.find(item => item.districtMasterId == this.data.branchDetails.districtMasterId)?.blockList;\r\n      });\r\n\r\n      this.branchForm.patchValue({\r\n        region: this.data.regionMasterId,\r\n        subVertical: this.data.branchDetails.subverticalMasterId,\r\n        subVerticleProject: this.data.branchDetails.projectMasterId,\r\n        state: this.data.branchDetails.stateMasterId,\r\n        district: this.data.branchDetails.districtMasterId,\r\n        block: this.data.branchDetails.blockMasterId,\r\n        branchName: this.data.branchDetails.branchName,\r\n        branchType: this.data.branchDetails.branchTypeMasterId,\r\n        startDate: this.data.branchDetails.branchOpenDate,\r\n        address: this.data.branchDetails.branchAddressLine,\r\n        pincode: this.data.branchDetails.branchPincode,\r\n        primaryMobile: this.data.branchDetails.branchPhonePrimary,\r\n        primaryEmail: this.data.branchDetails.branchEmailPrimary,\r\n        postOffice: this.data.branchDetails.branchPostOffice,\r\n        policeStation: this.data.branchDetails.branchPoliceStation,\r\n        branchLandmark: this.data.branchDetails.branchlandMark,\r\n        secondaryMobile: this.data.branchDetails.branchPhoneSecondary,\r\n        secondaryEmail: this.data.branchDetails.branchEmailSecondary,\r\n      });\r\n      this.branchForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  allDropdownValue() {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}user/getListOfAllRegions`, Dto).subscribe((res: any) => {\r\n      this.regionList = res.responseObject;\r\n    });\r\n    this.http.post(`${this.httpService.baseURL}subvertical/getListOfAllSubVerticals`, Dto).subscribe((res: any) => {\r\n      this.subVerticalsList = res.responseObject.subVerticalList;\r\n    });\r\n\r\n    this.http.post(`${this.httpService.baseURL}branch/getListOfALLBranchTypes`, Dto).subscribe((res: any) => {\r\n      this.branchTypeList = res.responseObject.branchTypeList;\r\n    });\r\n\r\n    this.http.post(`${this.httpService.baseURL}state/getListOfAllStates`, Dto).subscribe((res: any) => {\r\n      this.stateList = res.responseObject.stateList;\r\n    });\r\n  }\r\n\r\n  changeSubVertical(value) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      subVerticalMasterId: value\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}subvertical/getSubVerticalWiseListOfAllProjects`, Dto).subscribe((res: any) => {\r\n      this.subVerticleProjectList = res.responseObject.projectList;\r\n    });\r\n  }\r\n\r\n  // chnageANything(value): Promise<any> {\r\n  //   let stateId = value;\r\n\r\n  //   let Dto = {\r\n  //     dataAccessDTO: this.httpService.dataAccessDTO,\r\n  //     stateId: stateId\r\n  //   }\r\n  //   return new Promise((resolve, reject) => {\r\n  //     this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n  //       this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n  //       resolve(res.responseObject);\r\n  //     });\r\n  //   })\r\n  // }\r\n  changeState(value) {\r\n    let stateId = value;\r\n    this.stateCode = this.stateList.find(x => x.stateMasterId == value)?.stateCode;\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      stateId: stateId\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}district/getListOfDistrictAndBlock`, Dto).subscribe((res: any) => {\r\n      this.stateWiseDistrictList = res.responseObject?.stateWiseDistrictList;\r\n    });\r\n  }\r\n\r\n  changeDistrict(value) {\r\n    this.blockList = this.stateWiseDistrictList.find(item => item.districtMasterId == value)?.blockList;\r\n  }\r\n\r\n  createForm() {\r\n    this.branchForm = this.fb.group({\r\n      region: ['', Validators.required],\r\n      subVertical: ['', Validators.required],\r\n      subVerticleProject: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      district: ['', Validators.required],\r\n      block: ['', Validators.required],\r\n      branchName: ['', Validators.required],\r\n      branchType: ['', Validators.required],\r\n      startDate: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      pincode: ['', Validators.required],\r\n      primaryMobile: ['', Validators.compose([Validators.required, Validators.minLength(10), Validators.pattern(\"[6789][0-9]{9}\")])],\r\n      primaryEmail: ['', [Validators.required, Validators.email]],\r\n      postOffice: [''],\r\n      policeStation: [''],\r\n      branchLandmark: [''],\r\n      secondaryMobile: ['', Validators.compose([Validators.minLength(10), Validators.pattern(\"[6789][0-9]{9}\")])],\r\n      secondaryEmail: ['', Validators.email],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.branchForm.controls;\r\n  }\r\n\r\n  onSave() {\r\n    console.log(this.branchForm)\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      branchId: this.data.editMode == false ? \"0\" : this.data.branchDetails.branchId,\r\n      regionMasterId: this.branchForm.value.region,\r\n      projectMasterId: this.branchForm.value.subVerticleProject,\r\n      stateCode: this.stateCode,\r\n      blockMasterId: this.branchForm.value.block,\r\n      branchName: this.validationService.camelize(this.branchForm.value.branchName.trim()),\r\n      branchTypeMasterId: this.branchForm.value.branchType,\r\n      branchPincode: this.branchForm.value.pincode,\r\n      branchActiveFlag: \"Y\",\r\n      branchOpenDate: this.branchForm.value.startDate,\r\n      branchAddressLine: this.branchForm.value.address,\r\n      branchPostOffice: this.branchForm.value.postOffice,\r\n      branchPoliceStation: this.branchForm.value.policeStation,\r\n      branchlandMark: this.branchForm.value.branchLandmark,\r\n      branchPhonePrimary: this.branchForm.value.primaryMobile,\r\n      branchEmailPrimary: this.branchForm.value.primaryEmail,\r\n      branchPhoneSecondary: this.branchForm.value.secondaryMobile,\r\n      branchEmailSecondary: this.branchForm.value.secondaryEmail\r\n    }\r\n    if (this.branchForm.valid) {\r\n      this.http.post(`${this.httpService.baseURL}branch/saveOrUpdate`, Dto).subscribe((res: any) => {\r\n        console.log(res);\r\n        if (res.status) {\r\n          this.dialogRef.close();\r\n          this.showSuccess('Branch Created');\r\n        } else {\r\n          this.showError(res.message);\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Success', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  /* Show Error message toaster */\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h1 mat-dialog-title>\r\n  <div class=\"dialog-header\">\r\n    <h2 class=\"dialog-title\">Create New Branch</h2>\r\n    <div><i class=\"fas fa-times\" (click)=\"closeDialog()\"></i></div>\r\n  </div>\r\n</h1>\r\n\r\n<div mat-dialog-content>\r\n  <form class=\"form-signin\" [formGroup]=\"branchForm\">\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"region\"\r\n              >Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"region\"\r\n              id=\"region\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.region.invalid && f.region.touched,\r\n                'is-valid':\r\n                  f.region.valid && (f.region.dirty || f.region.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select Region --</option>\r\n              <option *ngFor=\"let region of regionList\" [value]=\"region.regionMasterId\">\r\n                {{region.regionName}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.region.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.region.errors.required\">Region selection is required</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"subVertical\"\r\n              >Sub-Vertical :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"subVertical\"\r\n              id=\"subVertical\"\r\n              (change)=\"changeSubVertical($event.target.value)\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.subVertical.invalid && f.subVertical.touched,\r\n                'is-valid':\r\n                  f.subVertical.valid && (f.subVertical.dirty || f.subVertical.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select Sub-Vertical --</option>\r\n              <option *ngFor=\"let subVerticals of subVerticalsList\" [value]=\"subVerticals.subVerticalMasterId\">\r\n                {{subVerticals.subVerticalName}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.subVertical.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.subVertical.errors.required\">SubVertical selection is required</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"subVerticleProject\"\r\n              >Project of selected Sub-Verticle :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"subVerticleProject\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.subVerticleProject .invalid && f.subVerticleProject .touched,\r\n                'is-valid':\r\n                  f.subVerticleProject .valid && (f.subVerticleProject .dirty || f.subVerticleProject .touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select Project of selected Sub-Verticle --</option>\r\n              <option *ngFor=\"let subVerticleProject of subVerticleProjectList\" [value]=\"subVerticleProject.projectMasterId\">\r\n                {{subVerticleProject.projectCode}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.subVerticleProject .errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.subVerticleProject .errors.required\">SubVerticleProject  selection is required</div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n \r\n    <!-- <br /> -->\r\n\r\n    <div class=\"row\">\r\n\r\n          <div class=\"form-group col-md\">\r\n        <label for=\"state\"\r\n          >State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n        >\r\n        <select\r\n          class=\"form-select\"\r\n          formControlName=\"state\"\r\n          (change)=\"changeState($event.target.value)\"\r\n          [ngClass]=\"{\r\n            'is-invalid': f.state.invalid && f.state.touched,\r\n            'is-valid':\r\n              f.state.valid && (f.state.dirty || f.state.touched)\r\n          }\"\r\n        >\r\n          <option value=\"\">-- Select state --</option>\r\n          <option *ngFor=\"let state of stateList\" [value]=\"state.stateMasterId\">\r\n            {{state.stateName}}\r\n          </option>\r\n        </select>\r\n        <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.state.errors.required\">State selection is required</div>\r\n        </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"district\"\r\n              >District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"district\"\r\n              (change)=\"changeDistrict($event.target.value)\"\r\n              id=\"district\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.district.invalid && f.district.touched,\r\n                'is-valid':\r\n                  f.district.valid && (f.district.dirty || f.district.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select district --</option>\r\n              <option *ngFor=\"let district of stateWiseDistrictList\" [value]=\"district.districtMasterId\">\r\n                {{district.districtName}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.district.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.district.errors.required\">District selection is required</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"block\"\r\n              >Block of the selected district :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"block\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.block.invalid && f.block.touched,\r\n                'is-valid':\r\n                  f.block.valid && (f.block.dirty || f.block.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select block --</option>\r\n              <option *ngFor=\"let block of blockList\" [value]=\"block.blockMasterId\">\r\n                {{block.blockName}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.block.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.block.errors.required\">Block selection is required</div>\r\n            </div>\r\n          </div>\r\n   \r\n        <div class=\"form-group col-md\">\r\n            <label for=\"branchName\"\r\n              >Branch Name :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter branchName Name\"\r\n              formControlName=\"branchName\"\r\n              style=\"text-transform: capitalize\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.branchName.invalid && f.branchName.touched,\r\n                'is-valid': f.branchName.valid && (f.branchName.dirty || f.branchName.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.branchName.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.branchName.errors.required\">BranchName is required</div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"form-group col-md\">\r\n            <label for=\"branchType\"\r\n              >Branch Type :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"branchType\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.branchType.invalid && f.branchType.touched,\r\n                'is-valid':\r\n                  f.branchType.valid && (f.branchType.dirty || f.branchType.touched)\r\n              }\"\r\n            >\r\n              <option value=\"\">-- Select branchType --</option>\r\n              <option *ngFor=\"let branchType of branchTypeList\" [value]=\"branchType.branchTypeMasterId\">\r\n                {{branchType.branchTypeDescription}}\r\n              </option>\r\n            </select>\r\n            <div *ngIf=\"f.branchType.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.branchType.errors.required\">BranchType selection is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n \r\n    <!-- <br /> -->\r\n\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-md-3\">\r\n            <label for=\"startDate\"\r\n              >Start Date :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <input\r\n              type=\"date\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter startDate Name\"\r\n              formControlName=\"startDate\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.startDate.invalid && f.startDate.touched,\r\n                'is-valid': f.startDate.valid && (f.startDate.dirty || f.startDate.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.startDate.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.startDate.errors.required\">StartDate is required</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"address\"\r\n              >Address :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter address Name\"\r\n              formControlName=\"address\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.address.invalid && f.address.touched,\r\n                'is-valid': f.address.valid && (f.address.dirty || f.address.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.address.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.address.errors.required\">Address is required</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md-3\">\r\n          <label for=\"pincode\">Pincode:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n          >\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"Enter Pincode\"\r\n            formControlName=\"pincode\"\r\n            maxlength=\"6\"\r\n            minlength=\"6\"\r\n            [ngClass]=\"{\r\n              'is-invalid': f.pincode.invalid && f.pincode.touched,\r\n              'is-valid': f.pincode.valid && (f.pincode.dirty || f.pincode.touched)\r\n            }\"\r\n            (keypress)=\"validationService.onlyInteger($event)\"\r\n          />\r\n          <div *ngIf=\"f.pincode.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.pincode.errors.required\">Pincode is required</div>\r\n            <div *ngIf=\"f.pincode.errors?.minlength\">Minimum 6 digit required</div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n \r\n    <!-- <br /> -->\r\n\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"postOffice\"\r\n              >Post Office (P.O.) of branch locality :</label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter postOffice Name\"\r\n              formControlName=\"postOffice\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.postOffice.invalid && f.postOffice.touched,\r\n                'is-valid': f.postOffice.valid && (f.postOffice.dirty || f.postOffice.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.postOffice.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.postOffice.errors.required\">PostOffice is required</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"policeStation\"\r\n              >Police Station (P.S.) of branch locality :</label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter policeStation Name\"\r\n              formControlName=\"policeStation\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.policeStation.invalid && f.policeStation.touched,\r\n                'is-valid': f.policeStation.valid && (f.policeStation.dirty || f.policeStation.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.policeStation.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.policeStation.errors.required\">PoliceStation is required</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"branchLandmark\"\r\n              >Landmark of branch locality :</label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter branchLandmark Name\"\r\n              formControlName=\"branchLandmark\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.branchLandmark.invalid && f.branchLandmark.touched,\r\n                'is-valid': f.branchLandmark.valid && (f.branchLandmark.dirty || f.branchLandmark.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.branchLandmark.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.branchLandmark.errors.required\">BranchLandmark is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- <br /> -->\r\n\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"primaryMobile\"\r\n              >Primary Mobile No:&nbsp;<span class=\"text-danger\"\r\n                >*&nbsp;</span\r\n              ></label\r\n            >\r\n            <input\r\n              type=\"\"\r\n              class=\"form-control\"\r\n              maxlength=\"10\"\r\n              placeholder=\"Enter Mobile No\"\r\n              formControlName=\"primaryMobile\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.primaryMobile.invalid && f.primaryMobile.touched,\r\n                'is-valid':\r\n                  f.primaryMobile.valid &&\r\n                  (f.primaryMobile.dirty || f.primaryMobile.touched)\r\n              }\"\r\n              (keypress)=\"validationService.onlyInteger($event)\"\r\n            />\r\n            <div *ngIf=\"f.primaryMobile.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.primaryMobile.errors.required\">\r\n                Primary Mobile No is required\r\n              </div>\r\n              <div *ngIf=\"f.primaryMobile.errors.minlength\">\r\n                Mobile No. should be of 10 digit\r\n              </div>\r\n              <div *ngIf=\"f.primaryMobile.errors.pattern\">\r\n                Mobile No. should be starting with 6, 7, 8 or 9\r\n              </div>\r\n            </div>\r\n        </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"primaryEmail\"\r\n              >Primary Email:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n            >\r\n            <input\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter Email\"\r\n              formControlName=\"primaryEmail\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.primaryEmail.invalid && f.primaryEmail.touched,\r\n                'is-valid':\r\n                  f.primaryEmail.valid &&\r\n                  (f.primaryEmail.dirty || f.primaryEmail.touched)\r\n              }\"\r\n            />\r\n            <div *ngIf=\"f.primaryEmail.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.primaryEmail.errors.required\">Email is required</div>\r\n              <div *ngIf=\"f.primaryEmail.errors.email\">Email is not valid</div>\r\n            </div>\r\n          </div>\r\n\r\n        <div class=\"form-group col-md\">\r\n            <label for=\"secondaryMobile\"\r\n              >Phone number of contact person secondary:</label\r\n            >\r\n            <input\r\n              type=\"\"\r\n              class=\"form-control\"\r\n              maxlength=\"10\"\r\n              placeholder=\"Enter secondary Mobile No\"\r\n              formControlName=\"secondaryMobile\"\r\n              [ngClass]=\"{\r\n                'is-invalid': f.secondaryMobile.invalid && f.secondaryMobile.touched\r\n              }\"\r\n              (keypress)=\"validationService.onlyInteger($event)\"\r\n            />\r\n            <div *ngIf=\"f.secondaryMobile.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.secondaryMobile.errors.minlength\">\r\n                Mobile No. should be of 10 digit\r\n              </div>\r\n              <div *ngIf=\"f.secondaryMobile.errors.pattern\">\r\n                Mobile No. should be starting with 6, 7, 8 or 9\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group col-md\">\r\n            <label for=\"secondaryEmail\"\r\n              >Secondary Email:</label\r\n            >\r\n            <input\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              placeholder=\"Enter secondary Email\"\r\n              formControlName=\"secondaryEmail\"\r\n            />\r\n          </div>\r\n    </div>\r\n\r\n    <!-- <br /> -->\r\n\r\n    <!-- <div class=\"addEditBtn\">\r\n      <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSave()\">\r\n        Save\r\n      </button>\r\n    </div> -->\r\n  </form>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSave()\">\r\n        Save\r\n      </button>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaselineSurveyService } from '../../baseline-survey/baseline-survey.service';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ConfirmationDialogService } from '../../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { SidebarService } from '../../shared/sidebar/sidebar.service';\r\nimport { BranchSetupComponent } from '../branch-setup/branch-setup.component';\r\nimport { RegionSetupComponent } from '../region-setup/region-setup.component';\r\n\r\n@Component({\r\n  selector: 'app-region-branch-home',\r\n  templateUrl: './region-branch-home.component.html',\r\n  styleUrls: ['./region-branch-home.component.css']\r\n})\r\nexport class RegionBranchHomeComponent implements OnInit {\r\n  stateSelectForm: UntypedFormGroup;\r\n  stateList: Array<any> = [];\r\n  regionAndBranchList: Array<any> = [];\r\n  stateMasterId: any;\r\n  loader: boolean = true;\r\n  createAccess: boolean;\r\n  updateAccess: boolean;\r\n  deleteAccess: boolean;\r\n\r\n  constructor(private fb: UntypedFormBuilder, private httpService: HttpService, private http: HttpClient,\r\n    private router: Router, private toaster: ToastrService,\r\n    private confirmationDialogService: ConfirmationDialogService, public dialog: MatDialog,\r\n    private sidebarService: SidebarService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n    }\r\n    this.http.post(`${this.httpService.baseURL}state/getListOfAllStates`, Dto).subscribe((res: any) => {\r\n      this.stateList = res.responseObject.stateList;\r\n      this.stateMasterId = res.responseObject.stateList[0].stateMasterId;\r\n      this.stateSelectForm.get('state').patchValue(this.stateMasterId);\r\n      this.getRegionAndBranchList(this.stateMasterId);\r\n    });\r\n\r\n    this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(item => item.subFunctionMasterId == 29 || item.subFunctionMasterId == 30 || item.subFunctionMasterId == 31 || item.subFunctionMasterId == 32)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'view')?.accessType ? this.router.navigate(['/region-branch']) : this.router.navigate(['/error']);\r\n\r\n    this.createAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(item => item.subFunctionMasterId == 29 || item.subFunctionMasterId == 30 || item.subFunctionMasterId == 31 || item.subFunctionMasterId == 32)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'create')?.accessType ? true : false;\r\n\r\n    this.updateAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(item => item.subFunctionMasterId == 29 || item.subFunctionMasterId == 30 || item.subFunctionMasterId == 31 || item.subFunctionMasterId == 32)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'update')?.accessType ? true : false;\r\n\r\n    this.deleteAccess = this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\r\n      .find(item => item.subFunctionMasterId == 29 || item.subFunctionMasterId == 30 || item.subFunctionMasterId == 31 || item.subFunctionMasterId == 32)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'delete')?.accessType ? true : false;\r\n\r\n  }\r\n\r\n  openCreateRegion() {\r\n    const dialogRef = this.dialog.open(RegionSetupComponent, {\r\n      width: '500px',\r\n      height: '280px',\r\n      data: { editMode: false }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getRegionAndBranchList(this.stateMasterId);\r\n    });\r\n  }\r\n\r\n  openCreateBranch() {\r\n    const dialogRef = this.dialog.open(BranchSetupComponent, {\r\n      width: '95vw',\r\n      maxWidth: '100vw',\r\n      data: { editMode: false }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getRegionAndBranchList(this.stateMasterId);\r\n    });\r\n  }\r\n\r\n  openEditRegion(regionMasterId, regionName) {\r\n    const dialogRef = this.dialog.open(RegionSetupComponent, {\r\n      width: '500px',\r\n      height: '280px',\r\n      data: { editMode: true, regionId: regionMasterId, regionName: regionName }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getRegionAndBranchList(this.stateMasterId);\r\n    });\r\n  }\r\n\r\n  openEditBranch(regionMasterId, branch) {\r\n    const dialogRef = this.dialog.open(BranchSetupComponent, {\r\n      width: '95vw',\r\n      maxWidth: '100vw',\r\n      data: { editMode: true, regionMasterId: regionMasterId, branchDetails: branch }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getRegionAndBranchList(this.stateMasterId);\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.stateSelectForm = this.fb.group({\r\n      state: [''],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.stateSelectForm.controls;\r\n  }\r\n\r\n  changeState(value) {\r\n    this.stateMasterId = value;\r\n    this.getRegionAndBranchList(this.stateMasterId);\r\n  }\r\n\r\n  getRegionAndBranchList(stateMasterId) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      stateMasterId: stateMasterId\r\n    }\r\n    this.loader = false;\r\n    this.http.post(`${this.httpService.baseURL}region/getStateWiseRegionAndBranchList`, Dto).subscribe((res: any) => {\r\n      this.regionAndBranchList = res.responseObject.regionbranchlist;\r\n      this.loader = true;\r\n    }, error => {\r\n      this.showError('Error');\r\n      this.loader = true;\r\n    });\r\n  }\r\n\r\n  deleteRegion(regionMasterId, regionName) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      regionMasterId: regionMasterId,\r\n    }\r\n    if (this.regionAndBranchList.find(x => x.regionMasterId == regionMasterId)?.branchList.length != 0) {\r\n      this.showError('Delete all branch');\r\n    } else {\r\n      this.confirmationDialogService.confirm('', `Do you want to delete ${regionName} ?`).then(() => {\r\n        this.http.post(`${this.httpService.baseURL}region/deleteRegion`, Dto).subscribe((res) => {\r\n          this.showSuccess('Success');\r\n          this.getRegionAndBranchList(this.stateMasterId);\r\n        })\r\n      }).catch(() => '');\r\n    }\r\n\r\n  }\r\n\r\n  deleteBranch(branchId, branchName) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      branchId: branchId,\r\n    }\r\n    this.confirmationDialogService.confirm('', `Do you want to delete ${branchName} ?`).then(() => {\r\n      this.http.post(`${this.httpService.baseURL}branch/deleteBranch`, Dto).subscribe((res: any) => {\r\n        if (res.status == true) {\r\n          this.showSuccess(res.message);\r\n          this.getRegionAndBranchList(this.stateMasterId);\r\n        } else {\r\n          this.showError(res.message)\r\n        }\r\n      })\r\n    }).catch(() => '');\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Deleted', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n}\r\n","<app-loader [hidden]=\"loader\"></app-loader>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"white_box QA_section mb_30\">\r\n\r\n          <div id=\"header-fixed\" style=\"display: flex;\">\r\n            <h2 class=\"page-title\">Region Branch Setup</h2>\r\n        </div>\r\n        \r\n        <div class=\"add_button\" *ngIf=\"createAccess\">\r\n            <button class=\"btn btn-primary\" (click)=\"openCreateBranch()\">\r\n                <i class=\"fas fa-code-branch\" ></i>Create Branch\r\n            </button>    \r\n            &nbsp;&nbsp;&nbsp;\r\n            <button class=\"btn btn-primary\" (click)=\"openCreateRegion()\">\r\n                <i class=\"fa fa-map-marker\" ></i>Create Region\r\n            </button>\r\n        </div>\r\n\r\n        <form class=\"form-signin\" [formGroup]=\"stateSelectForm\">\r\n            <div class=\"row\">\r\n              <div class=\"form-group col-md-4\">\r\n                <label for=\"state\"\r\n                  >Select State :</label\r\n                >\r\n                <select\r\n                  class=\"form-select\"\r\n                  (change)=\"changeState($event.target.value)\"\r\n                  formControlName=\"state\"\r\n                >\r\n                <option value=\"\">-- Select state --</option>\r\n                <option *ngFor=\"let state of stateList\" [value]=\"state.stateMasterId\">\r\n                  {{state.stateName}}\r\n                </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n        </form>\r\n\r\n        <div class=\"white_box_tittle list_header\" >\r\n            <div class=\"QA_table \">\r\n                <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\r\n                    <table\r\n                        class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\r\n                        role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\r\n        \r\n                        <thead>\r\n                            <tr>\r\n                                <th>SL No</th>\r\n                                <th>Region Name</th>\r\n                                <th>Branch Name</th>\r\n                                <th>District</th>\r\n                                <th>Project</th> \r\n                                <th>Status</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n        \r\n                        <tbody>\r\n        \r\n                            <tr *ngFor=\"let item of regionAndBranchList;index as i\">\r\n                                <td>{{i+1}}</td>\r\n                                <td>{{item.regionName}}</td>\r\n                                <td>\r\n                                    <ul *ngFor=\"let branch of item.branchList\">\r\n                                        <li *ngIf=\"branch.stateMasterId == stateMasterId || stateMasterId == undefined\" [title]=\"branch.branchName\">\r\n                                          {{branch.branchName.length > 15 ? (branch.branchName.slice(0,14) + '...') : branch.branchName}}</li>\r\n                                    </ul>\r\n                                </td>\r\n                                <td>\r\n                                  <ul *ngFor=\"let branch of item.branchList\">\r\n                                    <li *ngIf=\"branch.stateMasterId == stateMasterId || stateMasterId == undefined\" [title]=\"branch.districtName\">\r\n                                      {{branch.districtName.length > 15 ? (branch.districtName.slice(0,14) + '...') : branch.districtName}}</li>\r\n                                  </ul>\r\n                                </td>\r\n                                <td>\r\n                                  <ul *ngFor=\"let branch of item.branchList\">\r\n                                    <li *ngIf=\"branch.stateMasterId == stateMasterId || stateMasterId == undefined\" [title]=\"branch.projectName\">\r\n                                      {{branch.projectCode}}</li>\r\n                                  </ul>\r\n                                </td>\r\n                                <td>\r\n                                  <ul *ngFor=\"let branch of item.branchList\">\r\n                                    <li *ngIf=\"branch.stateMasterId == stateMasterId || stateMasterId == undefined\">{{branch.branchActiveFlag == 'Y' ? 'Active' : 'Phased out'}}</li>\r\n                                  </ul>\r\n                                </td>\r\n                                <td>\r\n                                    \r\n                                    <i class=\"fa fa-ellipsis-v fa-lg\" *ngIf=\"updateAccess\" aria-hidden=\"true\" mat-icon-button [matMenuTriggerFor]=\"menu\" title=\"Edit\" ></i>\r\n                                    <mat-menu #menu=\"matMenu\">\r\n                                        <button mat-menu-item (click)=\"openEditRegion(item.regionMasterId,item.regionName)\">Edit {{item.regionName}}</button>\r\n                                        <button mat-menu-item [matMenuTriggerFor]=\"vertebrates\">Edit Branch</button>\r\n                                    </mat-menu>\r\n                                    <mat-menu #vertebrates=\"matMenu\">\r\n                                        <button mat-menu-item *ngFor=\"let branch of item.branchList\" (click)=\"openEditBranch(item.regionMasterId,branch)\">Edit {{branch.branchName}}</button>\r\n                                      </mat-menu>\r\n                                    \r\n                                     &nbsp;\r\n                                    <i class=\"fas fa-trash\" *ngIf=\"deleteAccess\" aria-hidden=\"true\" mat-icon-button [matMenuTriggerFor]=\"menu1\" title=\"Delete\"></i>\r\n                                    <mat-menu #menu1=\"matMenu\">\r\n                                        <button mat-menu-item (click)=\"deleteRegion(item.regionMasterId,item.regionName)\">Delete {{item.regionName}}</button>\r\n                                        <button mat-menu-item [matMenuTriggerFor]=\"vertebrates1\">Delete Branch</button>\r\n                                    </mat-menu>\r\n                                    <mat-menu #vertebrates1=\"matMenu\">\r\n                                        <button mat-menu-item *ngFor=\"let branch of item.branchList\" (click)=\"deleteBranch(branch.branchId,branch.branchName)\">Delete {{branch.branchName}}</button>\r\n                                      </mat-menu>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegionBranchHomeComponent } from './region-branch-home/region-branch-home.component';\r\n\r\nconst routes: Routes = [{ path: '', component: RegionBranchHomeComponent },];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RegionBranchSetupRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RegionBranchSetupRoutingModule } from './region-branch-setup-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { RegionBranchHomeComponent } from './region-branch-home/region-branch-home.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RegionSetupComponent } from './region-setup/region-setup.component';\r\nimport { BranchSetupComponent } from './branch-setup/branch-setup.component'\r\nimport { LoaderModule } from '../shared/loader/loader.module';\r\n\r\n@NgModule({\r\n  declarations: [RegionBranchHomeComponent, RegionSetupComponent, BranchSetupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RegionBranchSetupRoutingModule, ReactiveFormsModule, FormsModule,\r\n    MatTabsModule, MatNativeDateModule, MatDialogModule, MatMenuModule,\r\n    MatIconModule, LoaderModule\r\n  ]\r\n})\r\nexport class RegionBranchSetupModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ValidationService } from '../../shared/services/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-region-setup',\r\n  templateUrl: './region-setup.component.html',\r\n  styleUrls: ['./region-setup.component.css']\r\n})\r\nexport class RegionSetupComponent implements OnInit {\r\n  regionForm: UntypedFormGroup;\r\n\r\n  constructor(private fb: UntypedFormBuilder, private http: HttpClient, private toaster: ToastrService,\r\n    private httpService: HttpService, public validationService: ValidationService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, public dialogRef: MatDialogRef<RegionSetupComponent>) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    if (this.data.editMode == false) {\r\n      this.regionForm.reset();\r\n    } else {\r\n      this.regionForm.patchValue({\r\n        regionName: this.data.regionName,\r\n      })\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.regionForm = this.fb.group({\r\n      regionName: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.regionForm.controls;\r\n  }\r\n\r\n  onSave() {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      regionMasterId: this.data.editMode == false ? \"0\" : this.data.regionId,\r\n      regionName: this.validationService.camelize(this.regionForm.value.regionName.trim())\r\n    }\r\n    console.log(Dto);\r\n    if (this.regionForm.valid) {\r\n      this.http.post(`${this.httpService.baseURL}region/saveOrUpdate`, Dto).subscribe((res: any) => {\r\n        console.log(res);\r\n        if (res.status) {\r\n          this.dialogRef.close();\r\n          this.data.editMode == false ? this.showSuccess('Region Created') : this.showSuccess('Region Updated');\r\n        } else {\r\n          this.showError(res.message);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Success', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n  /* Show Error message toaster */\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h1 mat-dialog-title>\r\n  <div class=\"dialog-header\">\r\n    <h2 class=\"dialog-title\">Create New Region</h2>\r\n    <div><i class=\"fas fa-times\" (click)=\"closeDialog()\"></i></div>\r\n  </div>\r\n</h1>\r\n<div mat-dialog-content>\r\n  <form class=\"form-signin\" [formGroup]=\"regionForm\">\r\n    <div class=\"form-group col-md\">\r\n      <label for=\"region\"\r\n        >Region Name :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n      >\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"Enter Region Name\"\r\n        formControlName=\"regionName\"\r\n        style=\"text-transform: capitalize\"\r\n        [ngClass]=\"{\r\n          'is-invalid': f.regionName.invalid && f.regionName.touched,\r\n          'is-valid': f.regionName.valid && (f.regionName.dirty || f.regionName.touched)\r\n        }\"\r\n      />\r\n      <div *ngIf=\"f.regionName.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.regionName.errors.required\">Region Name is required</div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n\r\n    <div class=\"addEditBtn\">\r\n      <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSave()\">\r\n        Save\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n"],"names":["Validators","MAT_DIALOG_DATA","i0","BranchSetupComponent","constructor","fb","http","toaster","httpService","data","dialogRef","validationService","disableClose","ngOnInit","createForm","allDropdownValue","editMode","changeSubVertical","branchDetails","subverticalMasterId","Dto","dataAccessDTO","stateId","stateMasterId","post","baseURL","subscribe","res","stateWiseDistrictList","responseObject","blockList","find","item","districtMasterId","branchForm","patchValue","region","regionMasterId","subVertical","subVerticleProject","projectMasterId","state","district","block","blockMasterId","branchName","branchType","branchTypeMasterId","startDate","branchOpenDate","address","branchAddressLine","pincode","branchPincode","primaryMobile","branchPhonePrimary","primaryEmail","branchEmailPrimary","postOffice","branchPostOffice","policeStation","branchPoliceStation","branchLandmark","branchlandMark","secondaryMobile","branchPhoneSecondary","secondaryEmail","branchEmailSecondary","markAllAsTouched","regionList","subVerticalsList","subVerticalList","branchTypeList","stateList","value","subVerticalMasterId","subVerticleProjectList","projectList","changeState","stateCode","x","changeDistrict","group","required","compose","minLength","pattern","email","f","controls","onSave","console","log","branchId","camelize","trim","branchActiveFlag","valid","status","close","showSuccess","showError","message","success","timeOut","error","closeDialog","selectors","decls","vars","consts","template","ctx","RegionSetupComponent","RegionBranchHomeComponent","router","confirmationDialogService","dialog","sidebarService","stateSelectForm","get","getRegionAndBranchList","subMenuList","functionShortName","subMenuDetailList","subFunctionMasterId","accessDetailList","accessType","navigate","createAccess","updateAccess","deleteAccess","openCreateRegion","open","width","height","afterClosed","result","openCreateBranch","maxWidth","openEditRegion","regionName","regionId","openEditBranch","branch","loader","regionAndBranchList","regionbranchlist","deleteRegion","branchList","length","confirm","then","catch","deleteBranch","RouterModule","routes","path","component","RegionBranchSetupRoutingModule","forChild","imports","exports","CommonModule","FormsModule","ReactiveFormsModule","MatDialogModule","MatNativeDateModule","MatTabsModule","MatMenuModule","MatIconModule","LoaderModule","RegionBranchSetupModule","declarations","regionForm","reset"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}