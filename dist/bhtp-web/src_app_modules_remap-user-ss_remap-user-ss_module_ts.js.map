{"version":3,"file":"src_app_modules_remap-user-ss_remap-user-ss_module_ts.js","mappings":"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","sources":["./src/app/modules/remap-user-ss/remap-user-ss-routing.module.ts","./src/app/modules/remap-user-ss/remap-user-ss.component.ts","./src/app/modules/remap-user-ss/remap-user-ss.component.html","./src/app/modules/remap-user-ss/remap-user-ss.module.ts","./src/app/modules/remap-user-ss/remap-user-ss.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RemapUserSsComponent } from './remap-user-ss.component';\n\nconst routes: Routes = [{ path: '', component: RemapUserSsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RemapUserSsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from '../core/http/http.service';\nimport { SidebarService } from '../shared/sidebar/sidebar.service';\nimport { RemapUserSsService } from './remap-user-ss.service';\n\n@Component({\n  selector: 'app-remap-user-ss',\n  templateUrl: './remap-user-ss.component.html',\n  styleUrls: ['./remap-user-ss.component.css']\n})\nexport class RemapUserSsComponent implements OnInit {\n  remapUserSSForm: UntypedFormGroup;\n  modalForm: UntypedFormGroup;\n  regionList: Array<any> = [];\n  branchList: Array<any> = [];\n  hcoList: Array<any> = [];\n  hcoUserId: any;\n  branchId: any;\n  loader: boolean = true;\n  modalContent: any;\n  modalReference: any;\n  hcoSSList: Array<any> = [];\n  checkboxData: any;\n  hcoModalList: Array<any> = [];\n  remapSSDto = {\n    dataAccessDTO: {},\n    ssId: '',\n    remapUserId: null,\n  };\n  ssNameFilter: any;\n  ssLists: Array<any> = [];\n\n  constructor(private fb: UntypedFormBuilder, private httpService: HttpService, private remapUserSSService: RemapUserSsService,\n    private toaster: ToastrService, private modalService: NgbModal, private router: Router, private sidebarService: SidebarService,\n    config: NgbModalConfig) {\n    config.backdrop = 'static';\n    config.keyboard = false;\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    let obj = { dataAccessDTO: this.httpService.dataAccessDTO }\n    this.remapUserSSService.listOfRegionsOfUser(obj).subscribe((res) => {\n      this.regionList = res.responseObject;\n      console.log(this.regionList);\n    });\n\n    this.sidebarService.subMenuList\n      .find(functionMasterId => functionMasterId.functionMasterId == 3)?.subMenuDetailList\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 206)?.accessDetailList\n      .find(accessType => accessType.accessType == 'create')?.accessType ? this.router.navigate(['/remap-user-ss']) : this.router.navigate(['/error']);\n  }\n\n  createForm() {\n    this.remapUserSSForm = this.fb.group({\n      region: ['', Validators.required],\n      branch: ['', Validators.required],\n      hco: ['', Validators.required]\n    })\n  }\n\n  get f() {\n    return this.remapUserSSForm.controls;\n  }\n\n  changeRegion(regionId) {\n    console.log(regionId);\n\n    let req = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      regionId: regionId,\n    };\n    this.remapUserSSService.listOfBranchesOfARegion(req).subscribe((res) => {\n      this.branchList = res.responseObject;\n      console.log(this.branchList, 'this.branchList');\n\n    }, (error) => {\n      this.branchList = null;\n    }\n    );\n    this.remapUserSSForm.controls.branch.setValue('');\n    this.remapUserSSForm.controls.hco.setValue('');\n    this.hcoSSList = [];\n    this.hcoList = [];\n    if (this.remapUserSSForm.value.region == '') {\n      this.remapUserSSForm.controls.branch.setValue('');\n      this.remapUserSSForm.controls.hco.setValue('');\n      this.hcoSSList = [];\n      this.hcoList = [];\n    }\n  }\n\n  changeBranch(branchId) {\n    this.branchId = branchId;\n    console.log(this.branchId, 'branchId');\n\n    let Dto = { dataAccessDTO: this.httpService.dataAccessDTO, branchId: this.branchId }\n\n    this.remapUserSSService.hcoListOfBranch(Dto).subscribe((res: any) => {\n      this.hcoList = res.responseObject;\n      console.log(this.hcoList, 'hcoList');\n    });\n\n    this.remapUserSSForm.controls.hco.setValue('');\n    this.hcoSSList = [];\n    this.hcoList = [];\n    if (this.remapUserSSForm.value.branch == '') {\n      this.remapUserSSForm.controls.hco.setValue('');\n      this.hcoList = [];\n      this.hcoSSList = [];\n    }\n  }\n\n  changeHco(hcoUserId) {\n    this.hcoUserId = hcoUserId;\n    console.log(this.hcoUserId);\n\n    if (hcoUserId == 'NA') {\n      let obj = { dataAccessDTO: this.httpService.dataAccessDTO, branchId: this.branchId }\n      this.loader = false;\n      console.log(obj);\n\n      this.remapUserSSService.getListOfUnmappedSSOfABranch(obj).subscribe((res: any) => {\n        this.hcoSSList = res.responseObject;\n        console.log(this.hcoSSList);\n        this.loader = true;\n      });\n    } else {\n      let Dto = { dataAccessDTO: this.httpService.dataAccessDTO, userId: this.hcoUserId }\n      this.loader = false;\n\n      this.remapUserSSService.getActiveSsListOfAnUser(Dto).subscribe((res: any) => {\n        this.hcoSSList = res.responseObject;\n        console.log(this.hcoSSList);\n        if (this.hcoSSList == null) {\n          this.showError('No Data Found');\n        }\n        this.loader = true;\n      }, error => {\n        this.showError('Error');\n        this.loader = true;\n      });\n\n    }\n\n    this.hcoSSList = [];\n    if (this.remapUserSSForm.value.hco == '') {\n      this.hcoSSList = [];\n    }\n  }\n\n  remapUserSS(e, ssID, remapSS) {\n    this.checkboxData = e.target.checked;\n    this.remapModalForm();\n\n    console.log(this.checkboxData, 'this.checkboxData ', ssID);\n\n    if (this.checkboxData) {\n\n      this.modalContent = '';\n      this.modalReference = this.modalService.open(remapSS, {\n        windowClass: 'remapSS',\n      });\n\n      let Dto = { dataAccessDTO: this.httpService.dataAccessDTO, branchId: this.branchId }\n\n      this.remapUserSSService.hcoListOfBranch(Dto).subscribe((res: any) => {\n        this.hcoModalList = res.responseObject;\n        console.log(this.hcoModalList, 'hcoModalList');\n      });\n\n      this.remapSSDto.dataAccessDTO = this.httpService.dataAccessDTO,\n        this.remapSSDto.ssId = ssID\n      console.log(this.checkboxData);\n\n    }\n    else {\n      this.remapSSDto.ssId = null;\n    }\n\n    console.log(this.remapSSDto, 'remapSSDto');\n\n  }\n\n  remapModalForm() {\n    this.modalForm = this.fb.group({\n      hcouser: ['', Validators.required]\n    })\n  }\n\n  get s() {\n    return this.modalForm.controls;\n  }\n\n  saveRemapUserSSFromModal() {\n    this.remapSSDto.remapUserId = parseInt(this.modalForm.value.hcouser);\n    console.log(this.remapSSDto, 'final  this.remapSSDto');\n\n    console.log(this.hcoUserId, ' this.hcoUserId ');\n    if (this.hcoUserId == this.modalForm.value.hcouser) {\n      this.showError('SS Cannot be remapped with same user');\n      return;\n    }\n    this.remapUserSSService.remapSsWithUser(this.remapSSDto).subscribe((res) => {\n      console.log(res);\n      if (res.status == true) {\n        this.showSuccess(res.message);\n        this.modalDismiss();\n        this.changeHco(this.hcoUserId);\n      };\n    });\n\n  }\n\n  modalDismiss() {\n    this.modalReference.close();\n    this.remapSSDto.remapUserId = null;\n    var uncheck = document.getElementsByClassName(\"form-check-input\");\n    for (var i = 0; i < uncheck.length; i++) {\n\n      if ((uncheck[i] as HTMLInputElement).checked == true) {\n        (uncheck[i] as HTMLInputElement).checked = false;\n        console.log((uncheck[i] as HTMLInputElement).checked);\n      }\n\n    }\n\n  }\n\n  getActiveSS(hcoUserId) {\n\n    let obj = { dataAccessDTO: this.httpService.dataAccessDTO, userId: hcoUserId };\n\n    this.remapUserSSService.getActiveSsListOfAnUser(obj).subscribe((res) => {\n      this.ssLists = res.responseObject;\n      console.log(this.ssLists, 'ssLists');\n\n    })\n\n  }\n\n  showSuccess(message) {\n    this.toaster.success(message, 'Remap-User-SS', {\n      timeOut: 3000,\n    });\n  }\n\n  showError(message) {\n    this.toaster.error(message, 'Remap-User-SS', {\n      timeOut: 3000,\n    });\n  }\n\n}\n","<app-loader [hidden]=\"loader\"></app-loader>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"white_box QA_section mb_30\">\n\n                <div id=\"header-fixed\" style=\"display: flex;\">\n                    <h2 class=\"page-title\">Remap SS-User</h2>\n                </div>\n\n                <form class=\"form-signin\" [formGroup]=\"remapUserSSForm\">\n\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\">\n                            <label for=\"region\">Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeRegion($event.target.value)\"\n                                formControlName=\"region\" id=\"region\" [ngClass]=\"{ 'is-invalid': f.region.invalid && f.region.touched, \n                                'is-valid': f.region.valid && (f.region.dirty || f.region.touched)}\">\n                                <option value=\"\">-- Select Region --</option>\n                                <option *ngFor=\"let region of regionList\" value=\"{{region.regionMasterId}}\">\n                                    {{region.regionName}}\n                                </option>\n                            </select>\n                            <div *ngIf=\"f.region.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.region.errors.required\">Region selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"branch\">Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBranch($event.target.value)\"\n                                formControlName=\"branch\" id=\"branch\" [ngClass]=\"{'is-invalid': f.branch.invalid && f.branch.touched,\n                              'is-valid': f.branch.valid && (f.branch.dirty || f.branch.touched)}\">\n                                <option value=\"\">-- Select Branch --</option>\n                                <option *ngFor=\"let branch of branchList\" value=\"{{branch.branchId}}\">\n                                    {{ branch.branchName }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"f.branch.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.branch.errors.required\">Branch selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"hco\">HCO/ HCOI/ TL :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeHco($event.target.value)\" formControlName=\"hco\"\n                                id=\"hco\" [ngClass]=\"{'is-invalid': f.hco.invalid && f.hco.touched, 'is-valid':\n                                f.hco.valid && (f.hco.dirty || f.hco.touched)  }\">\n                                <option value=\"\">-- Select Role --</option>\n                                <option *ngFor=\"let hco of hcoList\" value='{{hco.user_id}}'>\n                                    {{ hco.user_firstname}} {{hco.user_middlename}} {{hco.user_lastname}} -\n                                    {{hco.role_shortname}}\n                                </option>\n                                <option value=\"NA\" *ngIf=\"remapUserSSForm.value.branch\">No User</option>\n                            </select>\n                            <div *ngIf=\"f.hco.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.hco.errors.required\">Role selection is required</div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                </form>\n\n                <div class=\"white_box_tittle list_header\">\n\n                    <div class=\"QA_table\">\n                        <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                            <table\n                                class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                                role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed\">\n\n                                <thead id=\"header-fixed\">\n                                    <tr>\n                                        <th style=\"width: 9%;\">SL No</th>\n                                        <th style=\"width: 26%;\">SS Name</th>\n                                        <th style=\"width: 22%;\">SS Husband/ Guardian's Name</th>\n                                        <th style=\"width: 26%;\">SS Address</th>\n                                        <th>Remap</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    <tr *ngFor=\"let item of hcoSSList; index as i\">\n                                        <td style=\"width: 9%;\">{{(p-1)*5+i+1 ? (p-1)*5+i+1 : i+1}}</td>\n                                        <td style=\"width: 26%;\">{{item.swasthyaSahayikaName}}</td>\n                                        <td style=\"width: 22%;\">{{item.swasthyaSahayikaHusbandOrGuardianName}}\n                                        </td>\n                                        <td style=\"width: 28%;\">{{item.swasthyaSahayikaAddress}}</td>\n                                        <td><input class=\"form-check-input\" type=\"checkbox\" value=\"\"\n                                                id=\"flexCheckDefault\"\n                                                (change)=\"remapUserSS($event, item.swasthyaSahayikaId, remapSS)\">\n                                        </td>\n                                    </tr>\n                                </tbody>\n\n                            </table>\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #remapSS>\n    <div class=\"modal-header\">\n\n        <div class=\"col-md-2\">\n            <span class=\"close\" (click)=\"modalDismiss()\" style=\"cursor: pointer;font-size: 35px;\">&times;</span>\n        </div>\n\n    </div>\n\n    <div class=\"modal-body\">\n        <form class=\"form-signin\" [formGroup]=\"modalForm\">\n\n            <div class=\"form-group col-md\">\n                <label for=\"hcouser\">HCO/ HCOI/ TL :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                <select class=\"form-select\" formControlName=\"hcouser\" id=\"hcouser\" [ngClass]=\"{\n                  'is-invalid': s.hcouser.invalid && s.hcouser.touched, 'is-valid':\n                    s.hcouser.valid && (s.hcouser.dirty || s.hcouser.touched) }\">\n                    <option value=\"\">-- Select Role --</option>\n                    <option *ngFor=\"let hcouser of hcoModalList\" value='{{hcouser.user_id}}'>\n                        {{ hcouser.user_firstname}} {{hcouser.user_middlename}} {{hcouser.user_lastname}} -\n                        {{hcouser.role_shortname}}\n                    </option>\n                </select>\n                <div *ngIf=\"s.hcouser.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"s.hcouser.errors.required\">User selection is required</div>\n                </div>\n            </div><br>\n\n            <span style=\"color:#dc3545 ;\">NOTE: All household mapped with this SS will be unmapped</span>\n\n        </form>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"form-group col-md-6\" style=\"margin-left: 420px;\">\n            <button type=\"button\" class=\" btn btn-primary btn-sm\" [disabled]=\"!modalForm.value.hcouser\"\n                (click)=\"saveRemapUserSSFromModal()\">Remap\n            </button>\n        </div>\n    </div>\n\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RemapUserSsRoutingModule } from './remap-user-ss-routing.module';\nimport { RemapUserSsComponent } from './remap-user-ss.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoaderModule } from '../shared/loader/loader.module';\n\n\n@NgModule({\n  declarations: [RemapUserSsComponent],\n  imports: [\n    CommonModule,\n    RemapUserSsRoutingModule,\n    ReactiveFormsModule, LoaderModule\n  ]\n})\nexport class RemapUserSsModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RemapUserSsService {\n  baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  listOfRegionsOfUser(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfRegionsOfUser`, obj)\n  }\n\n  listOfBranchesOfARegion(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfBranchesOfARegion`, obj)\n  }\n\n  hcoListOfBranch(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfActiveHcoITL`, obj)\n  }\n\n  getActiveSsListOfAnUser(obj): any {\n    return this.http.post(`${this.baseURL}swasthyasahayika/getActiveSsListOfAnUser`, obj)\n  }\n\n  remapSsWithUser(obj): any {\n    return this.http.post(`${this.baseURL}remap/remapSsWithUser`, obj)\n  }\n\n  getListOfUnmappedSSOfABranch(obj): any {\n    return this.http.post(`${this.baseURL}remap/getListOfUnmappedSSOfAVillage`, obj)\n  }\n}\n"],"names":["RouterModule","RemapUserSsComponent","routes","path","component","RemapUserSsRoutingModule","forChild","imports","exports","Validators","i0","constructor","fb","httpService","remapUserSSService","toaster","modalService","router","sidebarService","config","dataAccessDTO","ssId","remapUserId","backdrop","keyboard","ngOnInit","createForm","obj","listOfRegionsOfUser","subscribe","res","regionList","responseObject","console","log","subMenuList","find","functionMasterId","subMenuDetailList","subFunctionMasterId","accessDetailList","accessType","navigate","remapUserSSForm","group","region","required","branch","hco","f","controls","changeRegion","regionId","req","listOfBranchesOfARegion","branchList","error","setValue","hcoSSList","hcoList","value","changeBranch","branchId","Dto","hcoListOfBranch","changeHco","hcoUserId","loader","getListOfUnmappedSSOfABranch","userId","getActiveSsListOfAnUser","showError","remapUserSS","e","ssID","remapSS","checkboxData","target","checked","remapModalForm","modalContent","modalReference","open","windowClass","hcoModalList","remapSSDto","modalForm","hcouser","s","saveRemapUserSSFromModal","parseInt","remapSsWithUser","status","showSuccess","message","modalDismiss","close","uncheck","document","getElementsByClassName","i","length","getActiveSS","ssLists","success","timeOut","selectors","decls","vars","consts","template","ctx","CommonModule","ReactiveFormsModule","LoaderModule","RemapUserSsModule","declarations","environment","RemapUserSsService","http","apiUrl","post","baseURL","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}