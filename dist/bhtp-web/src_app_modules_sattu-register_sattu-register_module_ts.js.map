{"version":3,"file":"src_app_modules_sattu-register_sattu-register_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;AACoE;AACK;;;;;;;;;;;;;AASnE,MAAOE,4BAA4B;EAIvCC,YAAoBC,EAAe,EAAUC,WAAwB,EAC3DC,YAAkC,EAAkCC,IAAS,EAC9EC,SAAqD;IAF1C,OAAE,GAAFJ,EAAE;IAAuB,gBAAW,GAAXC,WAAW;IAC9C,iBAAY,GAAZC,YAAY;IAAwD,SAAI,GAAJC,IAAI;IACzE,cAAS,GAATC,SAAS;IAJlB,sBAAiB,GAAe,EAAE;IAKhCA,SAAS,CAACC,YAAY,GAAG,IAAI;EAC/B;EAGAC,QAAQ;IACN,IAAI,CAACC,gBAAgB,EAAE;IACvBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,IAAI,CAAC;IAGtB,IAAIO,GAAG,GAAG;MAAEC,aAAa,EAAE,IAAI,CAACV,WAAW,CAACU,aAAa;MAAEC,QAAQ,EAAE,IAAI,CAACT,IAAI,CAACU;IAAc,CAAE;IAC/F,IAAI,CAACX,YAAY,CAACY,6BAA6B,CAACJ,GAAG,CAAC,CAACK,SAAS,CAAEC,GAAG,IAAI;MACrE,IAAI,CAACC,iBAAiB,GAAGD,GAAG,CAACE,cAAc;MAC3CV,OAAO,CAACC,GAAG,CAAC,IAAI,CAACQ,iBAAiB,EAAE,mBAAmB,CAAC;IAC1D,CAAC,CAAC;EAEJ;EAEAE,WAAW;IACT,IAAI,CAACf,SAAS,CAACgB,KAAK,EAAE;EACxB;EAEAb,gBAAgB;IACd,IAAI,CAACc,eAAe,GAAG,IAAI,CAACrB,EAAE,CAACsB,KAAK,CAAC;MACnCC,WAAW,EAAE,CAAC,EAAE,EAAE3B,+DAAmB,CAAC;MACtC6B,SAAS,EAAE,CAAC,EAAE,EAAE7B,+DAAmB,CAAC;MACpC8B,WAAW,EAAE,CAAC,EAAE,EAAE9B,+DAAmB,CAAC;MACtC+B,YAAY,EAAE,CAAC,EAAE,EAAE/B,+DAAmB,CAAC;MACvCgC,MAAM,EAAE,CAAC,EAAE,EAAEhC,+DAAmB;KACjC,CAAC;EACJ;EAEA,IAAIiC,CAAC;IACH,OAAO,IAAI,CAACR,eAAe,CAACS,QAAQ;EACtC;EAEAP,WAAW,CAACQ,CAAC,GAAI;EACjBN,SAAS,CAACM,CAAC,GAAI;EAEfL,WAAW,CAACK,CAAC,GAEb;EAEAJ,YAAY,CAACI,CAAC,GAEd;;AAnDWjC,4BAA4B;mBAA5BA,4BAA4B,2cAKeD,qEAAe;AAAA;AAL1DC,4BAA4B;QAA5BA,4BAA4B;EAAAkC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXzCC,4DAAAA,YAAqB;MAEYA,oDAAAA,4BAAqB;MAAAA,0DAAAA,EAAK;MACnDA,4DAAAA,UAAK;MAAwBA,wDAAAA;QAAA,OAASC,iBAAa;MAAA,EAAC;MAACD,0DAAAA,EAAI;MAGjEA,uDAAAA,SAAI;MAEJA,4DAAAA,aAAwB;MAMJA,oDAAAA,wDAA+C;MAAAA,4DAAAA,eAA0B;MAAAA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAO;MAE3FA,4DAAAA,eAA+B;MAEOA,wDAAAA;QAAA,OAAUC,uBAAmB;MAAA,EAAC;MADhED,0DAAAA,EACmE;MACnEA,4DAAAA,iBAAkD;MAC9CA,oDAAAA,wBAAe;MAAAA,0DAAAA,EAAQ;MAE3BA,4DAAAA,eAA+B;MAC3BA,oDAAAA,4BACA;MAAAA,4DAAAA,iBAC6E;MAAzEA,wDAAAA;QAAA,OAAUC,uBAAmB;MAAA,EAAC;MADlCD,0DAAAA,EAC6E;MAC7EA,4DAAAA,iBAAkD;MAC9CA,oDAAAA,uBAAc;MAAAA,0DAAAA,EAAQ;MAO1CA,4DAAAA,cAAiB;MAGLA,oDAAAA,sCAA6B;MAAAA,4DAAAA,eAA0B;MAAAA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAO;MAEzEA,4DAAAA,eAA+B;MAEKA,wDAAAA;QAAA,OAAUC,qBAAiB;MAAA,EAAC;MAD5DD,0DAAAA,EACuF;MACvFA,4DAAAA,iBAAgD;MAC5CA,oDAAAA,8BAAqB;MAAAA,0DAAAA,EAAQ;MAEjCA,4DAAAA,eAA+B;MAC3BA,oDAAAA,4BACA;MAAAA,4DAAAA,iBAC6E;MAAzEA,wDAAAA;QAAA,OAAUC,uBAAmB;MAAA,EAAC;MADlCD,0DAAAA,EAC6E;MAC7EA,4DAAAA,iBAAkD;MAC9CA,oDAAAA,gCAAuB;MAAAA,0DAAAA,EAAQ;MAGvCA,4DAAAA,eAA+B;MAC3BA,oDAAAA,4BACA;MAAAA,4DAAAA,iBAC+E;MAA3EA,wDAAAA;QAAA,OAAUC,wBAAoB;MAAA,EAAC;MADnCD,0DAAAA,EAC+E;MAC/EA,4DAAAA,iBAAmD;MAC/CA,oDAAAA,kCAAyB;MAAAA,0DAAAA,EAAQ;MAGzCA,4DAAAA,eAA+B;MAC3BA,oDAAAA,4BACA;MAAAA,4DAAAA,kBAEwC;MACnBA,oDAAAA,0BAAkB;MAAAA,0DAAAA,EAAS;MAmCpEA,uDAAAA,UAAI;MAEJA,4DAAAA,cAAiB;MACiEA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAS;;;MA/FrEA,uDAAAA,GAA6B;MAA7BA,wDAAAA,kCAA6B;MAsD8BA,uDAAAA,IAE1B;MAF0BA,wDAAAA,YAAAA,6DAAAA,2HAE1B;;;;;;;;;;;;;;;;;;;;;;AChER;AACa;;;AAEpE,MAAMI,MAAM,GAAW,CAAC;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEH,6EAAsBA;AAAA,CAAE,CAAC;AAMlE,MAAOI,0BAA0B;AAA1BA,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;QAA1BA;AAA0B;AAA1BA,0BAA0B;YAH3BL,kEAAqB,CAACE,MAAM,CAAC,EAC7BF,yDAAY;AAAA;;sHAEXK,0BAA0B;IAAAE,UAAAA,yDAAAA;IAAAC,UAF3BR,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN4C;AAUuB;;;;;;;;;;;;;;;;;;IC2C3DF,4DAAAA,iBAA4E;IACxEA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAS;;;;IAFiCA,mEAAAA,oCAAiC;IACvEA,uDAAAA,GACJ;IADIA,gEAAAA,iCACJ;;;;;IAGAA,4DAAAA,UAAsC;IAAAA,oDAAAA,mCAA4B;IAAAA,0DAAAA,EAAM;;;;;IAD5EA,4DAAAA,cAAsD;IAClDA,wDAAAA,yEAAwE;IAC5EA,0DAAAA,EAAM;;;;IADIA,uDAAAA,GAA8B;IAA9BA,wDAAAA,yCAA8B;;;;;IAUpCA,4DAAAA,iBAAsE;IAClEA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAS;;;;IAFiCA,mEAAAA,8BAA2B;IACjEA,uDAAAA,GACJ;IADIA,gEAAAA,iCACJ;;;;;IAGAA,4DAAAA,UAAsC;IAAAA,oDAAAA,mCAA4B;IAAAA,0DAAAA,EAAM;;;;;IAD5EA,4DAAAA,cAAsD;IAClDA,wDAAAA,yEAAwE;IAC5EA,0DAAAA,EAAM;;;;IADIA,uDAAAA,GAA8B;IAA9BA,wDAAAA,0CAA8B;;;;;;;;;;;;IA5BhDA,4DAAAA,aAA0C;IAEdA,oDAAAA,qBAAc;IAAAA,4DAAAA,eAA0B;IAAAA,oDAAAA,cAAO;IAAAA,0DAAAA,EAAO;IAC1EA,4DAAAA,iBAGkG;IAHtEA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAUA,yDAAAA,0CAAiC;IAAA,EAAC;IAIpEA,4DAAAA,iBAAiB;IAAAA,oDAAAA,0BAAmB;IAAAA,0DAAAA,EAAS;IAC7CA,wDAAAA,wEAES;IACbA,0DAAAA,EAAS;IACTA,wDAAAA,oEAEM;IACVA,0DAAAA,EAAM;IAENA,4DAAAA,cAA+B;IACPA,oDAAAA,sBAAc;IAAAA,4DAAAA,gBAA0B;IAAAA,oDAAAA,eAAO;IAAAA,0DAAAA,EAAO;IAC1EA,4DAAAA,kBAEwE;IAF5CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAUA,yDAAAA,0CAAiC;IAAA,EAAC;IAGpEA,4DAAAA,kBAAiB;IAAAA,oDAAAA,2BAAmB;IAAAA,0DAAAA,EAAS;IAC7CA,wDAAAA,0EAES;IACbA,0DAAAA,EAAS;IACTA,wDAAAA,oEAEM;IACVA,0DAAAA,EAAM;;;;IAzBEA,uDAAAA,GAC6F;IAD7FA,wDAAAA,YAAAA,6DAAAA,0IAC6F;IAElEA,uDAAAA,GAAa;IAAbA,wDAAAA,8BAAa;IAItCA,uDAAAA,GAAqB;IAArBA,wDAAAA,gCAAqB;IAQcA,uDAAAA,GAC8B;IAD9BA,wDAAAA,YAAAA,6DAAAA,0IAC8B;IAExCA,uDAAAA,GAAa;IAAbA,wDAAAA,8BAAa;IAItCA,uDAAAA,GAAqB;IAArBA,wDAAAA,gCAAqB;;;;;IAcvBA,4DAAAA,iBAA+E;IAC3EA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAS;;;;IAFsCA,mEAAAA,kCAA+B;IAC1EA,uDAAAA,GACJ;IADIA,gEAAAA,+BACJ;;;;;IAGAA,4DAAAA,UAAqC;IAAAA,oDAAAA,kCAA2B;IAAAA,0DAAAA,EAAM;;;;;IAD1EA,4DAAAA,cAAqD;IACjDA,wDAAAA,kEAAsE;IAC1EA,0DAAAA,EAAM;;;;IADIA,uDAAAA,GAA6B;IAA7BA,wDAAAA,wCAA6B;;;;;IAUnCA,4DAAAA,iBAA+D;IAC3DA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAS;;;;IAFyBA,mEAAAA,+BAA4B;IAC1DA,uDAAAA,GACJ;IADIA,gEAAAA,uBACJ;;;;;IAGAA,4DAAAA,UAAkC;IAC9BA,oDAAAA,iCACJ;IAAAA,0DAAAA,EAAM;;;;;IAHVA,4DAAAA,cAAkD;IAC9CA,wDAAAA,kEAEM;IACVA,0DAAAA,EAAM;;;;IAHIA,uDAAAA,GAA0B;IAA1BA,wDAAAA,qCAA0B;;;;;IAahCA,4DAAAA,iBAA0E;IACtEA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAS;;;;IAFgCA,mEAAAA,mCAAgC;IACrEA,uDAAAA,GACJ;IADIA,gEAAAA,gCACJ;;;;;IAGAA,4DAAAA,UAAoC;IAChCA,oDAAAA,sCACJ;IAAAA,0DAAAA,EAAM;;;;;IAHVA,4DAAAA,cAAoD;IAChDA,wDAAAA,kEAEM;IACVA,0DAAAA,EAAM;;;;IAHIA,uDAAAA,GAA4B;IAA5BA,wDAAAA,uCAA4B;;;;;IAgCtBA,4DAAAA,aAAyD;IAAAA,oDAAAA,aAAM;IAAAA,0DAAAA,EAAK;;;AD3I1G,MAAOG,sBAAsB;EAsBjCzC,YAAoBkD,cAA8B,EAAUC,IAAgB,EAAUC,MAAc,EAAUnD,EAAe,EACnHC,WAAwB,EAAUC,YAAkC,EAAUkD,YAAsB,EAC5GC,MAAsB,EAASC,iBAAoC,EAASC,MAAiB,EAAUC,OAAsB,EAAUC,yBAAoD;IAFzK,mBAAc,GAAdR,cAAc;IAA0B,SAAI,GAAJC,IAAI;IAAsB,WAAM,GAANC,MAAM;IAAkB,OAAE,GAAFnD,EAAE;IACtG,gBAAW,GAAXC,WAAW;IAAuB,iBAAY,GAAZC,YAAY;IAAgC,iBAAY,GAAZkD,YAAY;IACnE,sBAAiB,GAAjBE,iBAAiB;IAA4B,WAAM,GAANC,MAAM;IAAqB,YAAO,GAAPC,OAAO;IAAyB,8BAAyB,GAAzBC,yBAAyB;IAjBlK,WAAM,GAAY,IAAI;IAEtB,eAAU,GAAe,EAAE;IAE3B,eAAU,GAAe,EAAE;IAC3B,qBAAgB,GAAe,EAAE;IACjC,gBAAW,GAAe,EAAE;IAC5B,WAAM,GAAe,EAAE;IAMvB,cAAS,GAAe,EAAE;IAKxBJ,MAAM,CAACK,QAAQ,GAAG,QAAQ;IAC1BL,MAAM,CAACM,QAAQ,GAAG,KAAK;EACzB;EAEAC,SAAS;IACP,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACP,iBAAiB,CAACQ,GAAG;EACpD;EAEAxD,QAAQ;IACN,IAAI,CAACyD,kBAAkB,EAAE;IACzB,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAACf,cAAc,CAACgB,kBAAkB,EAAE,CAACC,IAAI,CAAElD,GAAQ,IAAI;MACzD,IAAI,CAACgD,MAAM,GAAG,IAAI;MAClB,IAAIhD,GAAG,CAACmD,gBAAgB,EAAE;QACxB,IAAI,CAACC,UAAU,GAAGpD,GAAG,CAACqD,MAAM;QAC5B,IAAI,CAACF,gBAAgB,GAAGnD,GAAG,CAACmD,gBAAgB;OAC7C,MAAM;QACL,IAAI,CAACG,iBAAiB,GAAGtD,GAAG,CAACuD,QAAQ;QACrC,IAAI5D,aAAa,GAAG6D,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC;QACrE,IAAIC,GAAG,GAAG;UACRjE,aAAa,EAAE;YACbkE,MAAM,EAAElE,aAAa,CAACkE,MAAM;YAC5BC,QAAQ,EAAEnE,aAAa,CAACmE;WACzB;UACDP,QAAQ,EAAE,IAAI,CAACD;SAChB;QACD,IAAI,CAACH,gBAAgB,GAAGnD,GAAG,CAACmD,gBAAgB;QAC5C,IAAI,CAACjB,IAAI,CAAC6B,IAAI,CAAC,GAAG,IAAI,CAAC9B,cAAc,CAAC+B,OAAO,8BAA8B,EAAEJ,GAAG,CAAC,CAAC7D,SAAS,CAAEC,GAAQ,IAAI;UACvG,IAAIA,GAAG,CAACiE,UAAU,CAACC,MAAM,IAAI,IAAI,EAAE;YACjC,IAAI,CAACC,gBAAgB,GAAGnE,GAAG,CAACE,cAAc;YAC1CV,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC0E,gBAAgB,EAAE,2BAA2B,CAAC;;QAEnE,CAAC,CAAC;;IAEN,CAAC,CAAC;IAEF;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;EACF;;EAEApB,kBAAkB;IAChB,IAAI,CAACqB,iBAAiB,GAAG,IAAI,CAACpF,EAAE,CAACsB,KAAK,CAAC;MACrC+C,MAAM,EAAE,CAAC,EAAE,EAAEzE,+DAAmB,CAAC;MACjCyF,MAAM,EAAE,CAAC,EAAE,EAAEzF,+DAAmB,CAAC;MACjC0F,KAAK,EAAE,CAAC,EAAE,EAAE1F,+DAAmB,CAAC;MAChC2F,EAAE,EAAE,CAAC,EAAE,EAAE3F,+DAAmB,CAAC;MAC7B4F,IAAI,EAAE,CAAC,EAAE,EAAE5F,+DAAmB;KAC/B,CAAC;EACJ;EAEA,IAAI6F,CAAC;IACH,OAAO,IAAI,CAACL,iBAAiB,CAACtD,QAAQ;EACxC;EAEA4D,YAAY,CAACC,QAAQ;IACnBnF,OAAO,CAACC,GAAG,CAACkF,QAAQ,EAAE,gBAAgB,CAAC;IACvC,IAAIA,QAAQ,EAAE;MACZ,IAAIjF,GAAG,GAAG;QAAEC,aAAa,EAAE,IAAI,CAACV,WAAW,CAACU,aAAa;QAAEgF,QAAQ,EAAEA;MAAQ,CAAE;MAC/E,IAAI,CAACzF,YAAY,CAAC0F,mBAAmB,CAAClF,GAAG,CAAC,CAACK,SAAS,CAAEC,GAAG,IAAI;QAC3D,IAAI,CAAC6E,UAAU,GAAG7E,GAAG,CAACE,cAAc;QACpCV,OAAO,CAACC,GAAG,CAAC,IAAI,CAACoF,UAAU,EAAE,YAAY,CAAC;MAC5C,CAAC,CAAC;;IAGJ,IAAI,CAACT,iBAAiB,CAACtD,QAAQ,CAACuD,MAAM,CAACS,QAAQ,CAAC,EAAE,CAAC;IACnD,IAAI,CAACV,iBAAiB,CAACtD,QAAQ,CAACwD,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;IAClD,IAAI,CAACV,iBAAiB,CAACtD,QAAQ,CAACyD,EAAE,CAACO,QAAQ,CAAC,EAAE,CAAC;IAC/C,IAAI,CAACV,iBAAiB,CAACtD,QAAQ,CAAC0D,IAAI,CAACM,QAAQ,CAAC,EAAE,CAAC;IACjD,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACb,gBAAgB,GAAG,EAAE;IAC1B,IAAI,IAAI,CAACC,iBAAiB,CAACa,KAAK,CAAC5B,MAAM,IAAI,EAAE,EAAE;MAC7C,IAAI,CAACwB,UAAU,GAAG,EAAE;MACpB;;EAEJ;;EAEAK,YAAY,CAAC3B,QAAQ;IACnB/D,OAAO,CAACC,GAAG,CAAC8D,QAAQ,EAAE,UAAU,CAAC;IACjC,IAAI7D,GAAG,GAAG;MAAEC,aAAa,EAAE,IAAI,CAACV,WAAW,CAACU,aAAa;MAAE4D,QAAQ,EAAEA;IAAQ,CAAE;IAC/E,IAAI,CAACrE,YAAY,CAACiG,mBAAmB,CAACzF,GAAG,CAAC,CAACK,SAAS,CAAEC,GAAG,IAAI;MAC3D,IAAI,CAACmE,gBAAgB,GAAGnE,GAAG,CAACE,cAAc;MAC1CV,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC0E,gBAAgB,EAAE,kBAAkB,CAAC;IACxD,CAAC,CAAC;IAEF,IAAI,CAACC,iBAAiB,CAACtD,QAAQ,CAACwD,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;IAClD,IAAI,CAACV,iBAAiB,CAACtD,QAAQ,CAACyD,EAAE,CAACO,QAAQ,CAAC,EAAE,CAAC;IAC/C,IAAI,CAACV,iBAAiB,CAACtD,QAAQ,CAAC0D,IAAI,CAACM,QAAQ,CAAC,EAAE,CAAC;IACjD,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB;EACF;;EAEAI,WAAW,CAACC,OAAO;IACjB7F,OAAO,CAACC,GAAG,CAAC4F,OAAO,EAAE,SAAS,CAAC;IAC/B,IAAI,CAACN,MAAM,GAAG,IAAI,CAACZ,gBAAgB,CAACmB,IAAI,CAAChB,KAAK,IAAIA,KAAK,CAACiB,aAAa,IAAIF,OAAO,CAAC,EAAEG,SAAS;IAC5FhG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsF,MAAM,EAAE,QAAQ,CAAC;IAElC,IAAI,CAACX,iBAAiB,CAACtD,QAAQ,CAACyD,EAAE,CAACO,QAAQ,CAAC,EAAE,CAAC;IAC/C,IAAI,CAACV,iBAAiB,CAACtD,QAAQ,CAAC0D,IAAI,CAACM,QAAQ,CAAC,EAAE,CAAC;IACjD,IAAI,CAACE,WAAW,GAAG,EAAE;IACrB;EACF;;EAEAS,QAAQ,CAACC,IAAI;IACXlG,OAAO,CAACC,GAAG,CAACiG,IAAI,EAAE,MAAM,CAAC;IACzB,IAAI,CAACV,WAAW,GAAG,IAAI,CAACD,MAAM,CAACO,IAAI,CAACf,EAAE,IAAIA,EAAE,CAACoB,aAAa,IAAID,IAAI,CAAC,EAAEE,cAAc;IACnFpG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACuF,WAAW,EAAE,aAAa,CAAC;IAC5C,IAAI,CAACZ,iBAAiB,CAACtD,QAAQ,CAAC0D,IAAI,CAACM,QAAQ,CAAC,EAAE,CAAC;IACjD;EACF;;EAEAe,aAAa,CAACC,SAAS;IACrB;IACA;IACAtG,OAAO,CAACC,GAAG,CAACqG,SAAS,EAAE,WAAW,CAAC;IAEnC,IAAIC,OAAO,GAAG;MAAEpG,aAAa,EAAE,IAAI,CAACV,WAAW,CAACU,aAAa;MAAEmG,SAAS,EAAEA,SAAS;MAAEE,SAAS,EAAE;IAAI,CAAE;IACtG,IAAI,CAAChD,MAAM,GAAG,KAAK;IACnB,IAAI,CAAC9D,YAAY,CAAC+G,YAAY,CAACF,OAAO,CAAC,CAAChG,SAAS,CAAEC,GAAQ,IAAI;MAC7D,IAAI,CAACgD,MAAM,GAAG,IAAI;MAClB,IAAI,CAACkD,SAAS,GAAGlG,GAAG,CAACE,cAAc;MACnC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAV,OAAO,CAACC,GAAG,CAAC,IAAI,CAACyG,SAAS,EAAE,WAAW,CAAC;MACxC;MACA;MACA;MACA;MACA;MACA;IAEF,CAAC,CAAC;IAEF;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;EAEF;;EAEAC,cAAc;IACZ;IACA;IACA;IACA;IACA;IAEA,MAAM/G,SAAS,GAAG,IAAI,CAACmD,MAAM,CAAC6D,IAAI,CAACpE,oGAAwB,EAAE;MAC3DqE,KAAK,EAAE,QAAQ;MACfC,MAAM,EAAE,OAAO;MACfnH,IAAI,EAAE,IAAI,CAACiF,iBAAiB,CAACa,KAAK,CAACT;KACpC,CAAC;IAEF;IACA;EAGF;;;AAtNWhD,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAR;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCnBnCC,uDAAAA,oBAA2C;MAC3CA,4DAAAA,aAAuB;MAQ4BA,oDAAAA,qBAAc;MAAAA,0DAAAA,EAAK;MAI9CA,4DAAAA,cAA+B;MAOPA,wDAAAA;QAAA;MAAA,EAAyB;MAF7BA,0DAAAA,EAE8B;MAElCA,4DAAAA,kBAAsB;MAACA,uDAAAA,aAA4B;MAACA,0DAAAA,EAAS;MAejFA,4DAAAA,eAA+E;MAGzCA,wDAAAA;QAAA,OAASC,oBAAgB;MAAA,EAAC;MAACD,0DAAAA,EAAI;MAKzEA,4DAAAA,gBAA0D;MAEtDA,wDAAAA,+DA+BM;MAENA,4DAAAA,cAAiB;MAEUA,oDAAAA,qBAAa;MAAAA,4DAAAA,gBAA0B;MAAAA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAO;MACxEA,4DAAAA,kBAG0C;MAHdA,wDAAAA;QAAA,OAAUC,oCAAgC;MAAA,EAAC;MAInED,4DAAAA,kBAAiB;MAAAA,oDAAAA,0BAAkB;MAAAA,0DAAAA,EAAS;MAC5CA,wDAAAA,mEAES;MACbA,0DAAAA,EAAS;MACTA,wDAAAA,6DAEM;MACVA,0DAAAA,EAAM;MAENA,4DAAAA,cAA+B;MACXA,oDAAAA,gCAAwB;MAAAA,4DAAAA,gBAA0B;MAAAA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAO;MAChFA,4DAAAA,kBAE4D;MAFhCA,wDAAAA;QAAA,OAAUC,iCAA6B;MAAA,EAAC;MAGhED,4DAAAA,kBAAiB;MAAAA,oDAAAA,qCAA6B;MAAAA,0DAAAA,EAAS;MACvDA,wDAAAA,mEAES;MACbA,0DAAAA,EAAS;MACTA,wDAAAA,6DAIM;MACVA,0DAAAA,EAAM;MAENA,4DAAAA,cAA+B;MACTA,oDAAAA,8CACP;MAAAA,4DAAAA,gBAA0B;MAAAA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAO;MACnDA,4DAAAA,kBAEkE;MAFtCA,wDAAAA;QAAA,OAAUC,sCAAkC;MAAA,EAAC;MAGrED,4DAAAA,kBAAiB;MAAAA,oDAAAA,4BAAoB;MAAAA,0DAAAA,EAAS;MAC9CA,wDAAAA,mEAES;MACbA,0DAAAA,EAAS;MACTA,wDAAAA,6DAIM;MACVA,0DAAAA,EAAM;MAGVA,4DAAAA,eAA0C;MAUKA,oDAAAA,WAAG;MAAAA,uDAAAA,UAAI;MAAAA,oDAAAA,WAAG;MAAAA,0DAAAA,EAAK;MACtCA,4DAAAA,cAAwB;MAAAA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAK;MAMjCA,4DAAAA,cAAuB;MAAAA,oDAAAA,cAAM;MAAAA,uDAAAA,UAAI;MAAAA,oDAAAA,WAAG;MAAAA,0DAAAA,EAAK;MACzCA,4DAAAA,cAAwB;MAAAA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAK;MACjCA,4DAAAA,cAAwB;MAAAA,oDAAAA,qBAAa;MAAAA,0DAAAA,EAAK;MAC1CA,4DAAAA,cAAwB;MAAAA,oDAAAA,mBAAW;MAAAA,0DAAAA,EAAK;MACxCA,4DAAAA,cAAwB;MAAAA,oDAAAA,cAAM;MAAAA,0DAAAA,EAAK;MACnCA,4DAAAA,cAAwB;MAAAA,oDAAAA,iBAAS;MAAAA,uDAAAA,UAAI;MAAAA,oDAAAA,iBAAS;MAAAA,0DAAAA,EAAK;MACnDA,4DAAAA,cAAwB;MAAAA,oDAAAA,aAAK;MAAAA,0DAAAA,EAAK;MAClCA,4DAAAA,cAAwB;MAAAA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAK;MACjCA,wDAAAA,2DAAoE;MACxEA,0DAAAA,EAAK;MA+DbA,4DAAAA,+BACmE;MAA/DA,wDAAAA;QAAA;MAAA,EAAyB;QAAA;MAAA;MAC7BA,0DAAAA,EAAsB;;;MAhO1CA,wDAAAA,sBAAiB;MAeQA,uDAAAA,IAA4E;MAA5EA,wDAAAA,gFAA4E;MAKjEA,uDAAAA,GAAyB;MAAzBA,wDAAAA,4BAAyB;MAyB/BA,uDAAAA,GAA+B;MAA/BA,wDAAAA,oCAA+B;MAEnCA,uDAAAA,GAAsB;MAAtBA,wDAAAA,8BAAsB;MAqCOA,uDAAAA,GAEE;MAFFA,wDAAAA,YAAAA,6DAAAA,uHAEE;MAEXA,uDAAAA,GAAmB;MAAnBA,wDAAAA,iCAAmB;MAI3CA,uDAAAA,GAAoB;MAApBA,wDAAAA,4BAAoB;MAQdA,uDAAAA,GAC+C;MAD/CA,wDAAAA,YAAAA,6DAAAA,wGAC+C;MAEhCA,uDAAAA,GAAS;MAATA,wDAAAA,uBAAS;MAI9BA,uDAAAA,GAAiB;MAAjBA,wDAAAA,yBAAiB;MAWcA,uDAAAA,GAC4B;MAD5BA,wDAAAA,YAAAA,6DAAAA,kHAC4B;MAEpCA,uDAAAA,GAAc;MAAdA,wDAAAA,4BAAc;MAIrCA,uDAAAA,GAAmB;MAAnBA,wDAAAA,2BAAmB;MAiCgBA,uDAAAA,IAA8B;MAA9BA,wDAAAA,0CAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7JpD;AAE8B;AACT;AACN;AACI;AACP;AAC4C;AACZ;AACtC;;AAiB/C,MAAOwF,mBAAmB;AAAnBA,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA;AAAmB;AAAnBA,mBAAmB;YAP5BN,yDAAY,EACZ3E,sFAA0B,EAC1B8E,+DAAmB,EACnBD,uDAAW,EAAED,sEAAY,EACzBG,qEAAe,EAAEC,+DAAmB;AAAA;;sHAG3BC,mBAAmB;IAAAC,eAZ5BtF,6EAAsB,EACtB1C,gHAA4B,EAC5BkD,oGAAwB;IAAAF,UAGxByE,yDAAY,EACZ3E,sFAA0B,EAC1B8E,+DAAmB,EACnBD,uDAAW,EAAED,sEAAY,EACzBG,qEAAe,EAAEC,+DAAmB;EAAA;AAAA;;;;;;;;;;;;;;;;;ACtBmB;;;AAKrD,MAAOI,oBAAoB;EAG/BjI,YAAoBmD,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAG6E,4EAAkB;EAEY;EAExCnC,mBAAmB,CAACsC,GAAG;IACrB,OAAO,IAAI,CAAChF,IAAI,CAAC6B,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,mCAAmC,EAAEkD,GAAG,CAAC;EAChF;EAEA/B,mBAAmB,CAAC+B,GAAG;IACrB,OAAO,IAAI,CAAChF,IAAI,CAAC6B,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,8BAA8B,EAAEkD,GAAG,CAAC;EAC3E;EAEAC,2BAA2B,CAACD,GAAG;IAC7B,OAAO,IAAI,CAAChF,IAAI,CAAC6B,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,2CAA2C,EAAEkD,GAAG,CAAC;EACxF;EAEApH,6BAA6B,CAACoH,GAAG;IAC/B,OAAO,IAAI,CAAChF,IAAI,CAAC6B,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,6CAA6C,EAAEkD,GAAG,CAAC;EAC1F;EAEAjB,YAAY,CAACiB,GAAG;IACd,OAAO,IAAI,CAAChF,IAAI,CAAC6B,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,oBAAoB,EAAEkD,GAAG,CAAC;EACjE;;AAvBWF,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;SAApBA,oBAAoB;EAAAI,SAApBJ,oBAAoB;EAAAK,YAFnB;AAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHgD;AACgB;AAEnD;AAKuE;;;;;;;;;;;;;;;ICSpFhG,4DAAAA,UAAoC;IAAAA,oDAAAA,iCAA0B;IAAAA,0DAAAA,EAAM;;;;;IADxEA,4DAAAA,cAAoD;IAChDA,wDAAAA,oEAAoE;IACxEA,0DAAAA,EAAM;;;;IADIA,uDAAAA,GAA4B;IAA5BA,wDAAAA,uCAA4B;;;;;;IAiC9BA,4DAAAA,SAAgD;IACrBA,oDAAAA,GAAO;IAAAA,0DAAAA,EAAK;IACnCA,4DAAAA,aAAuB;IAAAA,oDAAAA,GAAqB;IAAAA,0DAAAA,EAAK;IACjDA,4DAAAA,aAAwB;IAAAA,oDAAAA,GAAuD;IAAAA,0DAAAA,EAAK;IACpFA,4DAAAA,aAAwB;IAAAA,oDAAAA,GAA8B;IAAAA,0DAAAA,EAAK;IAC3DA,4DAAAA,aAAwB;IAAAA,oDAAAA,cAAM;IAAAA,0DAAAA,EAAK;IACnCA,4DAAAA,cAEgC;IAA5BA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,4BAAiB;IAAA,EAAC;IAACA,oDAAAA,cAAM;IAAAA,0DAAAA,EAAK;;;;;IAPpBA,uDAAAA,GAAO;IAAPA,+DAAAA,UAAO;IACPA,uDAAAA,GAAqB;IAArBA,+DAAAA,sBAAqB;IACpBA,uDAAAA,GAAuD;IAAvDA,gEAAAA,0EAAuD;IACvDA,uDAAAA,GAA8B;IAA9BA,+DAAAA,+BAA8B;;;;;;;;;ADtC5E,MAAOW,wBAAwB;EASnCjD,YAA4CI,IAAS,EAAU8C,cAA8B,EAAUC,IAAgB,EAC7GC,MAAc,EAAUnD,EAAe,EAASsD,iBAAoC,EACpFrD,WAAwB,EAAUC,YAAkC,EACrEqD,MAAiB,EAAUC,OAAsB,EACjDpD,SAAiD;IAJd,SAAI,GAAJD,IAAI;IAAe,mBAAc,GAAd8C,cAAc;IAA0B,SAAI,GAAJC,IAAI;IACjG,WAAM,GAANC,MAAM;IAAkB,OAAE,GAAFnD,EAAE;IAAsB,sBAAiB,GAAjBsD,iBAAiB;IACjE,gBAAW,GAAXrD,WAAW;IAAuB,iBAAY,GAAZC,YAAY;IAC/C,WAAM,GAANqD,MAAM;IAAqB,YAAO,GAAPC,OAAO;IAClC,cAAS,GAATpD,SAAS;IAZlB,WAAM,GAAY,IAAI;IAEtB,eAAU,GAAe,EAAE;IAUmCA,SAAS,CAACC,YAAY,GAAG,IAAI;EAAE;EAE7FuD,SAAS;IACP,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACP,iBAAiB,CAACQ,GAAG;EACpD;EAEAxD,QAAQ;IACNE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,IAAI,CAAC;IACtB,IAAI,CAACoI,eAAe,EAAE;IACtB,IAAI,CAACC,OAAO,GAAGF,mCAAM,CAAC,IAAIG,IAAI,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAACC,MAAM,CAAC,YAAY,CAAC;IAC1E,IAAI,CAACC,OAAO,GAAGN,mCAAM,CAAC,IAAIG,IAAI,EAAE,CAAC,CAACI,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAACF,MAAM,CAAC,YAAY,CAAC;EACvE;EAEAJ,eAAe;IACb,IAAI,CAACO,cAAc,GAAG,IAAI,CAAC9I,EAAE,CAACsB,KAAK,CAAC;MAClCyH,IAAI,EAAE,CAAC,EAAE,EAAEnJ,+DAAmB;KAC/B,CAAC;EACJ;EAEAuB,WAAW;IACT,IAAI,CAACf,SAAS,CAACgB,KAAK,EAAE;EACxB;EAEA,IAAI4H,CAAC;IACH,OAAO,IAAI,CAACF,cAAc,CAAChH,QAAQ;EACrC;EAEAmH,UAAU;IACR,IAAIC,MAAM,GAAG;MACXvI,aAAa,EAAE,IAAI,CAACV,WAAW,CAACU,aAAa;MAC7CqG,SAAS,EAAE,IAAI,CAAC8B,cAAc,CAAC7C,KAAK,CAAC8C,IAAI;MACzCjC,SAAS,EAAE,IAAI,CAAC3G;KACjB;IAED,IAAI,CAAC6D,MAAM,GAAG,KAAK;IACnB,IAAI,CAAC9D,YAAY,CAACiI,2BAA2B,CAACe,MAAM,CAAC,CAACnI,SAAS,CAAEC,GAAQ,IAAI;MAC3E,IAAI,CAACgD,MAAM,GAAG,IAAI;MAClB,IAAIhD,GAAG,CAACkE,MAAM,IAAI,IAAI,EAAE;QACtB,IAAI,CAACiE,UAAU,GAAGnI,GAAG,CAACE,cAAc;QACpCV,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC0I,UAAU,EAAE,kBAAkB,CAAC;OACjD,MAAM;QACL,IAAI,CAACA,UAAU,GAAG,EAAE;;IAGxB,CAAC,CAAC;EAEJ;EAEAC,WAAW,CAACC,IAAI;IACd,IAAI,CAAC9F,MAAM,CAAC6D,IAAI,CAACtH,gHAA4B,EAAE;MAC7CuH,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,OAAO;MACfnH,IAAI,EAAEkJ;KACP,CAAC;EACJ;EAEAC,kBAAkB;IAChB,OAAO,KAAK;EACd;;AAvEWtG,wBAAwB;mBAAxBA,wBAAwB,kEASfnD,qEAAe;AAAA;AATxBmD,wBAAwB;QAAxBA,wBAAwB;EAAAhB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MClBrCC,uDAAAA,oBAA2C;MAC3CA,4DAAAA,YAAqB;MAEYA,oDAAAA,uBAAgB;MAAAA,0DAAAA,EAAK;MAC9CA,4DAAAA,UAAK;MAAwBA,wDAAAA;QAAA,OAASC,iBAAa;MAAA,EAAC;MAACD,0DAAAA,EAAI;MAGjEA,uDAAAA,SAAI;MAEJA,4DAAAA,aAAwB;MAGZA,uDAAAA,cAAuC;MACvCA,4DAAAA,cAAiC;MACXA,oDAAAA,oBAAY;MAAAA,4DAAAA,gBAA0B;MAAAA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAO;MACtEA,4DAAAA,iBAEsF;MADlFA,wDAAAA;QAAA,OAAWC,wBAAoB;MAAA,EAAC;QAAA,OAAWA,gBAAY;MAAA,EAAvB;MADpCD,0DAAAA,EAEsF;MACtFA,wDAAAA,+DAEM;MACVA,0DAAAA,EAAM;MAENA,4DAAAA,cAAiC;MAKbA,wDAAAA;QAAA;MAAA,EAAyB;MAD7BA,0DAAAA,EAC8B;MAC9BA,4DAAAA,kBAAsB;MAACA,uDAAAA,aAA4B;MAACA,0DAAAA,EAAS;MAK7EA,uDAAAA,cAAuC;MAC3CA,0DAAAA,EAAM;MAENA,4DAAAA,eAAmB;MAKwBA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAK;MACnCA,4DAAAA,cAAuB;MAAAA,oDAAAA,kBAAU;MAAAA,0DAAAA,EAAK;MACtCA,4DAAAA,cAAwB;MAAAA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAK;MACjCA,4DAAAA,cAAwB;MAAAA,oDAAAA,qBAAa;MAAAA,0DAAAA,EAAK;MAC1CA,4DAAAA,cAAwB;MAAAA,oDAAAA,cAAM;MAAAA,0DAAAA,EAAK;MACnCA,4DAAAA,cAAuB;MAAAA,oDAAAA,cAAM;MAAAA,0DAAAA,EAAK;MAI1CA,4DAAAA,iBAAkC;MAC9BA,wDAAAA,8DASK;MACTA,0DAAAA,EAAQ;;;MA9DhBA,wDAAAA,sBAAiB;MAUCA,uDAAAA,GAA4B;MAA5BA,wDAAAA,iCAA4B;MAKqBA,uDAAAA,GAAe;MAAfA,wDAAAA,oBAAe;MAGxEA,uDAAAA,GAAmB;MAAnBA,wDAAAA,2BAAmB;MAQAA,uDAAAA,GAA2E;MAA3EA,wDAAAA,+EAA2E;MAEpFA,uDAAAA,GAAyB;MAAzBA,wDAAAA,4BAAyB;MAwBZA,uDAAAA,IAAe;MAAfA,wDAAAA,2BAAe","sources":["./src/app/modules/sattu-register/create-sattu-register/create-sattu-register.component.ts","./src/app/modules/sattu-register/create-sattu-register/create-sattu-register.component.html","./src/app/modules/sattu-register/sattu-register-routing.module.ts","./src/app/modules/sattu-register/sattu-register.component.ts","./src/app/modules/sattu-register/sattu-register.component.html","./src/app/modules/sattu-register/sattu-register.module.ts","./src/app/modules/sattu-register/sattu-register.service.ts","./src/app/modules/sattu-register/view-sattu-family/view-sattu-family.component.ts","./src/app/modules/sattu-register/view-sattu-family/view-sattu-family.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpService } from '../../core/http/http.service';\nimport { SattuRegisterService } from '../sattu-register.service';\n\n@Component({\n  selector: 'app-create-sattu-register',\n  templateUrl: './create-sattu-register.component.html',\n  styleUrls: ['./create-sattu-register.component.css']\n})\nexport class CreateSattuRegisterComponent {\n  createSattuForm: FormGroup;\n  prequisiteDetails: Array<any> = [];\n\n  constructor(private fb: FormBuilder, private httpService: HttpService,\n    private sattuService: SattuRegisterService, @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<CreateSattuRegisterComponent>) {\n    dialogRef.disableClose = true\n  }\n\n\n  ngOnInit(): void {\n    this.createSattu_Form();\n    console.log(this.data);\n\n\n    let req = { dataAccessDTO: this.httpService.dataAccessDTO, familyId: this.data.familyDetailId };\n    this.sattuService.getSattuRegisterPrerequisites(req).subscribe((res) => {\n      this.prequisiteDetails = res.responseObject;\n      console.log(this.prequisiteDetails, 'prequisiteDetails');\n    });\n\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  createSattu_Form() {\n    this.createSattuForm = this.fb.group({\n      orientation: ['', Validators.required],\n      regularly: ['', Validators.required],\n      irregularly: ['', Validators.required],\n      notPreparing: ['', Validators.required],\n      reason: ['', Validators.required],\n    })\n  }\n\n  get s() {\n    return this.createSattuForm.controls;\n  }\n\n  orientation(e) { }\n  regularly(e) { }\n\n  irregularly(e) {\n\n  }\n\n  notPreparing(e) {\n\n  }\n\n\n}\n\n","<h1 mat-dialog-title>\n    <div class=\"dialog-header\">\n        <h2 class=\"dialog-title\">Create Sattu Register</h2>\n        <div><i class=\"fas fa-times\" (click)=\"closeDialog()\"></i></div>\n    </div>\n</h1>\n<hr>\n\n<div mat-dialog-content>\n    <form class=\"form-signin\" [formGroup]=\"createSattuForm\">\n\n        <div class=\"row\">\n            <div class=\"form-group col-md\">\n                <label for=\"orientation\">\n                    Received Orientation For Preparing Sattu?&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n\n                <div class=\"form-check-inline\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"orientation\" id=\"yes\" value=\"Y\"\n                        formControlName=\"orientation\" (change)=\"orientation($event)\" />\n                    <label class=\"form-check-label\" for=\"orientation\">\n                        &nbsp;&nbsp;Yes</label>\n\n                    <div class=\"form-check-inline\">\n                        &nbsp;&nbsp;&nbsp;\n                        <input class=\"form-check-input\" type=\"radio\" name=\"orientation\" id=\"no\"\n                            (change)=\"orientation($event)\" value=\"N\" formControlName=\"orientation\" />\n                        <label class=\"form-check-label\" for=\"orientation\">\n                            &nbsp;&nbsp;No</label>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"row\">\n            <div class=\"form-group col-md\">\n                <label for=\"preparing \">\n                    Family preparing Sattu?&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n\n                <div class=\"form-check-inline\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"regularly\" id=\"yes\" value=\"Y\"\n                        formControlName=\"regularly\" (change)=\"regularly($event)\" style=\"margin-top: 33px;\">\n                    <label class=\"form-check-label\" for=\"regularly\">\n                        &nbsp;&nbsp;Regularly</label>\n\n                    <div class=\"form-check-inline\">\n                        &nbsp;&nbsp;&nbsp;\n                        <input class=\"form-check-input\" type=\"radio\" name=\"irregularly\" id=\"no\"\n                            (change)=\"irregularly($event)\" value=\"N\" formControlName=\"irregularly\" />\n                        <label class=\"form-check-label\" for=\"irregularly\">\n                            &nbsp;&nbsp;Irregularly</label>\n                    </div>\n\n                    <div class=\"form-check-inline\">\n                        &nbsp;&nbsp;&nbsp;\n                        <input class=\"form-check-input\" type=\"radio\" name=\"notPreparing\" id=\"no\"\n                            (change)=\"notPreparing($event)\" value=\"N\" formControlName=\"notPreparing\" />\n                        <label class=\"form-check-label\" for=\"notPreparing\">\n                            &nbsp;&nbsp;Not Preparing</label>\n                    </div>\n\n                    <div class=\"form-check-inline\">\n                        &nbsp;&nbsp;&nbsp;\n                        <select class=\"form-select\" formControlName=\"reason\" id=\"reason\" [ngClass]=\"{'is-invalid': s.reason.invalid \n                        && s.reason.touched,'is-valid': s.reason.valid && \n                        (s.reason.dirty || s.reason.touched) }\">\n                            <option value=\"\">-- Select Reason--</option>\n                            <!-- <option *ngFor=\"let reason of villagesOfBranch\" value=\"{{reason.reasonMasterId}}\">\n                                {{ reason.reasonName }}\n                            </option> -->\n                        </select>\n                        <!-- <div *ngIf=\"s.reason.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"s.reason.errors.required\">Reason selection is required</div>\n                        </div> -->\n                        <!-- <input class=\"form-check-input\" type=\"radio\" name=\"notPreparing\" id=\"no\"\n                            (change)=\"notPreparing($event)\" value=\"N\" formControlName=\"notPreparing\" />\n                        <label class=\"form-check-label\" for=\"notPreparing\">\n                            &nbsp;&nbsp;Not Preparing</label> -->\n                    </div>\n\n\n                    <!-- <div class=\"form-group col-md\"> \n                         <div class=\"form-check-inline\">\n                            <select class=\"form-select\" formControlName=\"reason\" id=\"reason\" [ngClass]=\"{'is-invalid': s.reason.invalid \n                                    && s.reason.touched,'is-valid': s.reason.valid && \n                                    (s.reason.dirty || s.reason.touched) }\">\n                                <option value=\"\">-- Select Reason--</option>\n                                 <option *ngFor=\"let reason of villagesOfBranch\" value=\"{{reason.reasonMasterId}}\">\n                                        {{ reason.reasonName }}\n                                    </option>\n                                </select>\n                                <div *ngIf=\"s.reason.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"s.reason.errors.required\">Reason selection is required</div>\n                                </div>\n                            </div>-->\n\n                </div>\n\n            </div>\n        </div>\n    </form>\n    <hr>\n\n    <div class=\"row\">\n        <div class=\"col-md-4\"> <button type=\"button\" class=\" btn btn-primary btn-sm\" >Save</button></div>\n       \n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SattuRegisterComponent } from './sattu-register.component';\n\nconst routes: Routes = [{ path: '', component: SattuRegisterComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SattuRegisterRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from '../core/http/http.service';\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\nimport { ValidationService } from '../shared/services/validation.service';\nimport { SidebarService } from '../shared/sidebar/sidebar.service';\nimport { SattuRegisterService } from './sattu-register.service';\nimport { ViewSattuFamilyComponent } from './view-sattu-family/view-sattu-family.component';\n\n@Component({\n  selector: 'app-sattu-register',\n  templateUrl: './sattu-register.component.html',\n  styleUrls: ['./sattu-register.component.css']\n})\nexport class SattuRegisterComponent {\n  selectVillageForm: FormGroup;\n\n  searchFullscreen: boolean;\n  createMode: boolean;\n  updateMode: boolean;\n  deleteMode: boolean;\n  loader: boolean = true;\n  regionBranchHide: boolean;\n  regionList: Array<any> = [];\n  lowerRoleBranchId: any;\n  branchList: Array<any> = [];\n  villagesOfBranch: Array<any> = [];\n  villageList: Array<any> = [];\n  gpList: Array<any> = [];\n  modalContent: any;\n  viewFamilyListModal: any;\n  createSattuModal: any;\n  sattuSearch: any;\n  p: any;\n  sattuView: Array<any> = [];\n\n  constructor(private sidebarService: SidebarService, private http: HttpClient, private router: Router, private fb: FormBuilder,\n    private httpService: HttpService, private sattuService: SattuRegisterService, private modalService: NgbModal,\n    config: NgbModalConfig, public validationService: ValidationService, public dialog: MatDialog, private toaster: ToastrService, private confirmationDialogService: ConfirmationDialogService,) {\n    config.backdrop = 'static';\n    config.keyboard = false;\n  }\n\n  ngDoCheck(): void {\n    this.searchFullscreen = this.validationService.val;\n  }\n\n  ngOnInit(): void {\n    this.selectVillage_Form();\n    this.loader = false;\n    this.sidebarService.checkRoledetailDTO().then((res: any) => {\n      this.loader = true;\n      if (res.regionBranchHide) {\n        this.regionList = res.region;\n        this.regionBranchHide = res.regionBranchHide;\n      } else {\n        this.lowerRoleBranchId = res.branchId;\n        let dataAccessDTO = JSON.parse(localStorage.getItem('dataAccessDTO'));\n        let Dto = {\n          dataAccessDTO: {\n            userId: dataAccessDTO.userId,\n            userName: dataAccessDTO.userName,\n          },\n          branchId: this.lowerRoleBranchId\n        }\n        this.regionBranchHide = res.regionBranchHide;\n        this.http.post(`${this.sidebarService.baseURL}village/getVillagesOfABranch`, Dto).subscribe((res: any) => {\n          if (res.sessionDTO.status == true) {\n            this.villagesOfBranch = res.responseObject;\n            console.log(this.villagesOfBranch, 'lowerrankvillagesOfBranch');\n          }\n        });\n      }\n    });\n\n    // this.sidebarService.subMenuList\n    //   .find(functionShortName => functionShortName.functionMasterId == 5)?.subMenuDetailList\n    //   .find(item => item.subFunctionMasterId == 266 || item.subFunctionMasterId == 267 || item.subFunctionMasterId == 268 || item.subFunctionMasterId == 269)?.accessDetailList\n    //   .find(accessType => accessType.accessType == 'view')?.accessType ? this.router.navigate(['/sattu-register']) : this.router.navigate(['/error']);\n\n    // this.createMode = this.sidebarService.subMenuList\n    //   .find(functionShortName => functionShortName.functionMasterId == 5)?.subMenuDetailList\n    //   .find(item => item.subFunctionMasterId == 266 || item.subFunctionMasterId == 267 || item.subFunctionMasterId == 268 || item.subFunctionMasterId == 269)?.accessDetailList\n    //   .find(accessType => accessType.accessType == 'create')?.accessType ? true : false;\n\n    // this.updateMode = this.sidebarService.subMenuList\n    //   .find(functionShortName => functionShortName.functionMasterId == 5)?.subMenuDetailList\n    //   .find(item => item.subFunctionMasterId == 266 || item.subFunctionMasterId == 267 || item.subFunctionMasterId == 268 || item.subFunctionMasterId == 269)?.accessDetailList\n    //   .find(accessType => accessType.accessType == 'update')?.accessType ? true : false;\n\n    // this.deleteMode = this.sidebarService.subMenuList\n    //   .find(functionShortName => functionShortName.functionMasterId == 5)?.subMenuDetailList\n    //   .find(item => item.subFunctionMasterId == 266 || item.subFunctionMasterId == 267 || item.subFunctionMasterId == 268 || item.subFunctionMasterId == 269)?.accessDetailList\n    //   .find(accessType => accessType.accessType == 'delete')?.accessType ? true : false;\n  }\n\n  selectVillage_Form() {\n    this.selectVillageForm = this.fb.group({\n      region: ['', Validators.required],\n      branch: ['', Validators.required],\n      block: ['', Validators.required],\n      gp: ['', Validators.required],\n      gram: ['', Validators.required]\n    })\n  }\n\n  get m() {\n    return this.selectVillageForm.controls;\n  }\n\n  changeRegion(regionId) {\n    console.log(regionId, 'regionMasterId');\n    if (regionId) {\n      let req = { dataAccessDTO: this.httpService.dataAccessDTO, regionId: regionId };\n      this.sattuService.getBranchesOfRegion(req).subscribe((res) => {\n        this.branchList = res.responseObject;\n        console.log(this.branchList, 'branchList');\n      });\n    }\n\n    this.selectVillageForm.controls.branch.setValue('');\n    this.selectVillageForm.controls.block.setValue('');\n    this.selectVillageForm.controls.gp.setValue('');\n    this.selectVillageForm.controls.gram.setValue('');\n    this.gpList = [];\n    this.villageList = [];\n    this.villagesOfBranch = [];\n    if (this.selectVillageForm.value.region == '') {\n      this.branchList = [];\n      // this.escortviewData = [];\n    }\n  }\n\n  changeBranch(branchId) {\n    console.log(branchId, 'branchId');\n    let req = { dataAccessDTO: this.httpService.dataAccessDTO, branchId: branchId };\n    this.sattuService.getVillagesOfBranch(req).subscribe((res) => {\n      this.villagesOfBranch = res.responseObject;\n      console.log(this.villagesOfBranch, 'villagesOfBranch');\n    });\n\n    this.selectVillageForm.controls.block.setValue('');\n    this.selectVillageForm.controls.gp.setValue('');\n    this.selectVillageForm.controls.gram.setValue('');\n    this.gpList = [];\n    this.villageList = [];\n    // this.escortviewData = [];\n  }\n\n  changeBlock(blockId) {\n    console.log(blockId, 'blockId');\n    this.gpList = this.villagesOfBranch.find(block => block.blockMasterId == blockId)?.gpDtoList;\n    console.log(this.gpList, 'gplist');\n\n    this.selectVillageForm.controls.gp.setValue('');\n    this.selectVillageForm.controls.gram.setValue('');\n    this.villageList = [];\n    // this.escortviewData = [];\n  }\n\n  changeGp(gpId) {\n    console.log(gpId, 'GpId');\n    this.villageList = this.gpList.find(gp => gp.gpMunicipalId == gpId)?.villageDtoList;\n    console.log(this.villageList, 'villageList');\n    this.selectVillageForm.controls.gram.setValue('');\n    // this.escortviewData = [];\n  }\n\n  changeVillage(villageId) {\n    // this.escortviewData = [];\n    // this.selectVillageForm.controls.filterDate.setValue('')\n    console.log(villageId, 'villageId');\n\n    let viewreq = { dataAccessDTO: this.httpService.dataAccessDTO, villageId: villageId, visitDate: null };\n    this.loader = false;\n    this.sattuService.getSattuview(viewreq).subscribe((res: any) => {\n      this.loader = true;\n      this.sattuView = res.responseObject;\n      //   this.sattuView?.forEach((x) => {\n      //     x.familyList = x.familyList?.map(({\n      //       visitDate = x.visitDate,\n      //       ...rest\n      //     }) => ({\n      //       visitDate,\n      //       ...rest\n      //     }));\n      //   })\n      console.log(this.sattuView, 'sattuView');\n      //   this.escortview?.forEach(y => {\n      //     console.log(y);\n      //     y.familyList.forEach(z => {\n      //       this.escortviewData.push(z)\n      //     })\n      //     console.log(this.escortviewData, 'escortviewData');\n\n    })\n\n    //   this.escortviewData.forEach(x => {\n    //     if (x.escortOrReferType == 'R') {\n    //       x.escortOrReferType = 'Refer'\n    //     } else {\n    //       x.escortOrReferType = 'Escort'\n    //     }\n    //   });\n\n    //   this.escortviewFilterData = this.escortviewData\n    //   console.log(this.escortviewData, 'escortviewData');\n    // })\n\n  }\n\n  viewFamilyList() {\n    // this.escortSearch = '';\n    // this.viewFamilyListModal = this.modalService.open(viewFam, {\n    //   windowClass: 'viewFam',\n    // });\n    // this.viewFamily_Form();\n\n    const dialogRef = this.dialog.open(ViewSattuFamilyComponent, {\n      width: '1100px',\n      height: '570px',\n      data: this.selectVillageForm.value.gram\n    });\n\n    // dialogRef.afterClosed().subscribe(result => {\n    // });\n\n\n  }\n\n  // viewFamModalDismiss() {\n  //   this.viewFamilyListModal.close();\n  //   // this.escortSearch = '';\n  //   // this.villageName = [];\n  //   // this.familyList = [];\n  // }\n\n\n  // createSattu_Form() {\n  //   this.createSattuForm = this.fb.group({\n  //     orientation: ['', Validators.required],\n  //   })\n  // }\n\n  // createSattuModalDismiss() {\n  //   this.createSattuModal.close();\n  //   // var ID = this.editEscortDetails?.escortReferRegisterId;\n\n  //   // if (ID) {\n  //   //   this.editEscortDetails = '';\n  //   //   ID = 0;\n  //   //   this.viewBeneficiaryModal.close();\n  //   // }\n  //   // else {\n  //   //   this.viewBeneficiaryModal.close();\n  //   //   this.viewBeneficiaryDetails = [];\n  //   //   this.onclickBenFamDetails = [];\n  //   // }\n  // }\n\n\n}\n","<app-loader [hidden]=\"loader\"></app-loader>\n<div class=\"container\">\n    <div class=\"row\">\n\n        <div class=\"col-md-12\">\n            <div class=\"white_box QA_section mb_30\">\n                <div id=\"header-fixed\" style=\"display: flex;\">\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\">\n                            <h2 class=\"page-title\">Sattu Register</h2>\n                        </div>\n\n                        <!-- *ngIf=\"escortviewData.length>0\" -->\n                        <div class=\"form-group col-md\">\n                            <div class=\"serach_field_2\">\n                                <div [ngClass]=\" searchFullscreen? 'search_inner_fullscreen ' : ' search_inner' \">\n                                    <form active=\"#\">\n                                        <div class=\"search_field\">\n                                            <input type=\"text\" name=\"search\"\n                                                placeholder=\"search fam, name, place, type ...\"\n                                                [(ngModel)]=\"sattuSearch\">\n                                        </div>\n                                        <button type=\"submit\"> <i class=\"fa fa-search\"></i> </button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- <div class=\"form-group col-md\" style=\"display: flex; justify-content:flex-end\"\n                        *ngIf=\"!selectVillageForm.value.gram || !createMode\">\n                        <i class=\"fas fa-plus-circle\"\n                            style=\"cursor: pointer; color: #a8d7d7; font-size: 30px; margin-top: 5px;\"\n                            title=\"Create Escort/ Refer Register\"></i>\n                    </div> -->\n\n                    <!-- *ngIf=\"selectVillageForm.value.gram && createMode\" -->\n                    <div class=\"form-group col-md\" style=\"display: flex; justify-content:flex-end\">\n                        <i class=\"fas fa-plus-circle\"\n                            style=\"cursor: pointer; color: #499; font-size: 30px; margin-top: 5px;\"\n                            title=\"Create Sattu Register\" (click)=\"viewFamilyList()\"></i>\n                    </div>\n\n                </div>\n\n                <form class=\"form-signin\" [formGroup]=\"selectVillageForm\">\n\n                    <div class=\"row\" *ngIf=\"regionBranchHide\">\n                        <div class=\"form-group col-md\">\n                            <label for=\"region\">Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeRegion($event.target.value)\"\n                                formControlName=\"region\" id=\"region\"\n                                [ngClass]=\"{'is-invalid': m.region.invalid\n                                 && m.region.touched,  'is-valid':  m.region.valid && (m.region.dirty || m.region.touched) }\">\n                                <option value=\"\">-- Select Region --</option>\n                                <option *ngFor=\"let region of regionList\" value=\"{{region.regionMasterId}}\">\n                                    {{region.regionName}}\n                                </option>\n                            </select>\n                            <div *ngIf=\"m.region.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"m.region.errors.required\">Region selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"branch\">Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBranch($event.target.value)\"\n                                formControlName=\"branch\" id=\"branch\" [ngClass]=\"{'is-invalid': m.branch.invalid && m.branch.touched,\n                              'is-valid': m.branch.valid && (m.branch.dirty || m.branch.touched) }\">\n                                <option value=\"\">-- Select Branch --</option>\n                                <option *ngFor=\"let branch of branchList\" value=\"{{branch.branchId}}\">\n                                    {{ branch.branchName }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"m.branch.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"m.branch.errors.required\">Branch selection is required</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\">\n                            <label for=\"block\">Block :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBlock($event.target.value)\"\n                                formControlName=\"block\" id=\"block\" [ngClass]=\"{'is-invalid': m.block.invalid \n                                && m.block.touched,'is-valid': m.block.valid && \n                                (m.block.dirty || m.block.touched) }\">\n                                <option value=\"\">-- Select Block --</option>\n                                <option *ngFor=\"let block of villagesOfBranch\" value=\"{{block.blockMasterId}}\">\n                                    {{ block.blockName }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"m.block.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"m.block.errors.required\">Block selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"gp\">GP/ Municipality :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeGp($event.target.value)\" formControlName=\"gp\"\n                                id=\"gp\" [ngClass]=\"{'is-invalid': m.gp.invalid && m.gp.touched,\n                              'is-valid': m.gp.valid && (m.gp.dirty || m.gp.touched) }\">\n                                <option value=\"\">-- Select GP/ Municipality --</option>\n                                <option *ngFor=\"let gp of gpList\" value=\"{{gp.gpMunicipalId}}\">\n                                    {{ gp.name }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"m.gp.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"m.gp.errors.required\">\n                                    GP selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"gram\">Village/ Gram Sansad/ Locality\n                                :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeVillage($event.target.value)\"\n                                formControlName=\"gram\" id=\"gram\" [ngClass]=\"{'is-invalid': m.gram.invalid && m.gram.touched,\n                              'is-valid': m.gram.valid && (m.gram.dirty || m.gram.touched) }\">\n                                <option value=\"\">-- Select Village --</option>\n                                <option *ngFor=\"let vill of villageList\" value=\"{{vill.villageMasterId}}\">\n                                    {{ vill.villageName }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"m.gram.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"m.gram.errors.required\">\n                                    Village selection is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"white_box_tittle list_header\">\n\n                        <div class=\"QA_table\">\n                            <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                                <table\n                                    class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                                    role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\n\n                                    <thead>\n                                        <tr>\n                                            <th style=\"width: 6%;\">Sl.<br>No.</th>\n                                            <th style=\"width: 20%;\">Date</th>\n                                            <!-- <th style=\"width: 20%;\">Date\n                                                <input type=\"date\" class=\"form-controls\" formControlName=\"filterDate\"\n                                                    (change)=\"filterList($event.target.value)\"\n                                                    *ngIf=\"viewEscortReferForm.value.gram\">\n                                            </th> -->\n                                            <th style=\"width: 8%;\">Family<br>No.</th>\n                                            <th style=\"width: 25%;\">Name</th>\n                                            <th style=\"width: 25%;\">Guardian Name</th>\n                                            <th style=\"width: 13%;\">Beneficiary</th>\n                                            <th style=\"width: 10%;\">Reason</th>\n                                            <th style=\"width: 12%;\">Done by- <br>Staff/ SS</th>\n                                            <th style=\"width: 25%;\">Place</th>\n                                            <th style=\"width: 11%;\">Type</th>\n                                            <th style=\"width: 12%;\" *ngIf=\"deleteMode || updateMode\">Action</th>\n                                        </tr>\n                                    </thead>\n\n                                    <!-- <tbody style=\"text-align: center;\">\n                                        <tr *ngFor=\"let escort of escortviewData |escortRegisterFilter: {familyNumber :  escortSearch,\n                                                 familyName :escortSearch, visitingPlaceName : escortSearch, escortOrReferType:escortSearch}|\n                                                  paginate: { itemsPerPage: 5, currentPage: p }; index as i\">\n                                            <td style=\"width: 6%;\">{{(p-1)*5+i+1 ? (p-1)*5+i+1 : i+1}}</td>\n                                            <td style=\"width: 20%;\">{{escort.visitDate.split(\"-\").reverse().join(\"-\")}}\n                                            </td>\n                                            <td style=\"width: 8%;\">{{escort.familyNumber}}</td>\n                                            <td style=\"width: 25%;\">{{escort.familyName}}</td>\n                                            <td style=\"width: 25%;\">{{escort.husbandOrGuardianName}}</td>\n                                            <td class=\"btn-link\"\n                                                style=\"width: 13%; color:#0d6efd; text-decoration: none; cursor: pointer;\"\n                                                (click)=\"openDialog(escort)\">view</td>\n                                            <td style=\"width: 10%;\">\n                                                <div class=\"popover__wrapper\">\n                                                    <h3 class=\"popover__title\" style=\"color:#0d6efd;\">view</h3>\n                                                    <div class=\"popover__content\" *ngIf=\"escort?.reasonList?.length>0\">\n                                                        <li style=\"word-wrap: break-word; text-align: left;\" *ngFor=\"let reason of escort.reasonList\n                                                        ; index as i\">\n                                                            {{i+1}}. {{reason.reasonName}}\n                                                        </li>\n                                                    </div>\n                                                    <div class=\"popover__content\" *ngIf=\"escort?.reasonList?.length==0\">\n                                                        <li style=\"word-wrap: break-word; text-align: left;\">\n                                                            No Data Found\n                                                        </li>\n                                                    </div>\n                                                </div>\n                                            </td>\n\n                                            <td style=\"width: 12%;\">\n                                                <div class=\"popover__wrapper\">\n                                                    <h3 class=\"popover__title\" style=\"color:#0d6efd;\">view</h3>\n                                                    <div class=\"popover__content\">\n                                                        <li style=\"word-wrap: break-word; text-align: left;\">\n                                                            <div\n                                                                *ngIf=\"escort.escorteeRefereeStaffName != null && escort.escortedReferredByStaff=='Y'\">\n                                                                * STAFF :\n                                                                {{escort.escortedReferredByStaff=='Y'?\n                                                                escort.escorteeRefereeStaffName:''}}</div>\n                                                            <div\n                                                                *ngIf=\"escort.escorteeRefereeSsName != null && escort.escortedReferredBySS =='Y'\">\n                                                                * SS : {{escort.escortedReferredBySS =='Y' ?\n                                                                escort.escorteeRefereeSsName :''}}</div>\n                                                        </li>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td style=\"width: 25%;\">{{escort.visitingPlaceName}}</td>\n                                            <td style=\"width: 11%;\">{{escort.escortOrReferType}}</td>\n                                            <td style=\"width: 12%;\">\n                                                <i class=\"fas fa-edit\" title=\"Edit Escort/ Refer Register\"\n                                                    (click)=\"editEscort(Benificiary, escort)\" *ngIf=\"updateMode\"></i>\n                                                <i class=\"fas fa-trash\" title=\"Delete Escort/ Refer Register\"\n                                                    (click)=\"deleteEscort(escort)\" *ngIf=\"deleteMode\"></i>\n                                            </td>\n                                        </tr>\n                                    </tbody> -->\n\n                                </table>\n                                <pagination-controls class=\"d-flex justify-content-end p-1 current ngx-pagination1\"\n                                    (pageChange)=\"p = $event\" (pageBoundsCorrection)=\"p = $event \">\n                                </pagination-controls>\n\n                            </div>\n                        </div>\n                    </div>\n\n                </form>\n\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SattuRegisterRoutingModule } from './sattu-register-routing.module';\nimport { SattuRegisterComponent } from './sattu-register.component';\nimport { LoaderModule } from '../shared/loader/loader.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { CreateSattuRegisterComponent } from './create-sattu-register/create-sattu-register.component';\nimport { ViewSattuFamilyComponent } from './view-sattu-family/view-sattu-family.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n\n@NgModule({\n  declarations: [\n    SattuRegisterComponent,\n    CreateSattuRegisterComponent,\n    ViewSattuFamilyComponent\n  ],\n  imports: [\n    CommonModule,\n    SattuRegisterRoutingModule,\n    ReactiveFormsModule,\n    FormsModule, LoaderModule,\n    MatDialogModule, NgxPaginationModule\n  ]\n})\nexport class SattuRegisterModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SattuRegisterService {\n  baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getBranchesOfRegion(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfBranchesOfARegion`, obj)\n  }\n\n  getVillagesOfBranch(obj): any {\n    return this.http.post(`${this.baseURL}village/getVillagesOfABranch`, obj)\n  }\n\n  getListOfFamiliesOfAVillage(obj): any {\n    return this.http.post(`${this.baseURL}sattuRegister/getListOfFamiliesOfAVillage`, obj)\n  }\n\n  getSattuRegisterPrerequisites(obj): any {\n    return this.http.post(`${this.baseURL}sattuRegister/getSattuRegisterPrerequisites`, obj)\n  }\n\n  getSattuview(obj): any {\n    return this.http.post(`${this.baseURL}sattuRegister/view`, obj)\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from '../../core/http/http.service';\nimport { ValidationService } from '../../shared/services/validation.service';\nimport { SidebarService } from '../../shared/sidebar/sidebar.service';\nimport { CreateSattuRegisterComponent } from '../create-sattu-register/create-sattu-register.component';\nimport { SattuRegisterService } from '../sattu-register.service';\n\n@Component({\n  selector: 'app-view-sattu-family',\n  templateUrl: './view-sattu-family.component.html',\n  styleUrls: ['./view-sattu-family.component.css']\n})\nexport class ViewSattuFamilyComponent {\n  loader: boolean = true;\n  viewFamilyForm: FormGroup;\n  familyList: Array<any> = [];\n  minDate: any;\n  maxDate: any;\n  searchFullscreen: boolean;\n  sattuSearch: any;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private sidebarService: SidebarService, private http: HttpClient,\n    private router: Router, private fb: FormBuilder, public validationService: ValidationService,\n    private httpService: HttpService, private sattuService: SattuRegisterService,\n    public dialog: MatDialog, private toaster: ToastrService,\n    public dialogRef: MatDialogRef<ViewSattuFamilyComponent>) { dialogRef.disableClose = true; }\n\n  ngDoCheck(): void {\n    this.searchFullscreen = this.validationService.val;\n  }\n\n  ngOnInit(): void {\n    console.log(this.data);\n    this.viewFamily_Form();\n    this.minDate = moment(new Date()).subtract(7, \"days\").format(\"YYYY-MM-DD\");\n    this.maxDate = moment(new Date()).add(0, \"days\").format(\"YYYY-MM-DD\");\n  }\n\n  viewFamily_Form() {\n    this.viewFamilyForm = this.fb.group({\n      date: ['', Validators.required],\n    })\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  get r() {\n    return this.viewFamilyForm.controls;\n  }\n\n  changeDate() {\n    let famReq = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      visitDate: this.viewFamilyForm.value.date,\n      villageId: this.data,\n    }\n\n    this.loader = false;\n    this.sattuService.getListOfFamiliesOfAVillage(famReq).subscribe((res: any) => {\n      this.loader = true;\n      if (res.status == true) {\n        this.familyList = res.responseObject;\n        console.log(this.familyList, ' this.familyList');\n      } else {\n        this.familyList = [];\n      }\n\n    })\n\n  }\n\n  createSattu(fami) {\n    this.dialog.open(CreateSattuRegisterComponent, {\n      width: '760px',\n      height: '300px',\n      data: fami\n    });\n  }\n\n  restrictTypeOfDate() {\n    return false;\n  }\n\n}\n","<app-loader [hidden]=\"loader\"></app-loader>\n<h1 mat-dialog-title>\n    <div class=\"dialog-header\">\n        <h3 class=\"dialog-title\">List Of Families</h3>\n        <div><i class=\"fas fa-times\" (click)=\"closeDialog()\"></i></div>\n    </div>\n</h1>\n<hr>\n\n<div mat-dialog-content>\n    <form class=\"form-signin\" [formGroup]=\"viewFamilyForm\">\n        <div class=\"row\">\n            <div class=\"form-group col-md-2\"></div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"date\">Date :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                <input type=\"date\" class=\"form-control\" formControlName=\"date\" [min]=\"minDate\" [max]=\"maxDate\"\n                    (keydown)=\"restrictTypeOfDate()\" (change)=\"changeDate()\" [ngClass]=\"{'is-invalid': r.date.invalid\n                    && r.date.touched,'is-valid': r.date.valid && (r.date.dirty || r.date.touched) }\">\n                <div *ngIf=\"r.date.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"r.date.errors.required\">Date selection is required</div>\n                </div>\n            </div>\n\n            <div class=\"form-group col-md-4\">\n                <div class=\"serach_field_23\">\n                    <div>\n                        <form active=\"#\" [ngClass]=\" searchFullscreen? 'search_inner_fullscreen' : ' search_inner' \">\n                            <input type=\"text\" name=\"search\" placeholder=\"search by fam no., name & guardian name ...\"\n                                [(ngModel)]=\"sattuSearch\">\n                            <button type=\"submit\"> <i class=\"fa fa-search\"></i> </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group col-md-2\"></div>\n        </div>\n\n        <div id=\"tbodyFam\">\n            <div id=\"table_wrapper\">\n                <table class=\"table table-striped\" id=\"table_wrapper\">\n                    <thead id=\"header_fixed\">\n                        <tr style=\"text-align: center;\">\n                            <th style=\"width: 3%;\">Sl. No.</th>\n                            <th style=\"width: 3%;\">Family No.</th>\n                            <th style=\"width: 25%;\">Name</th>\n                            <th style=\"width: 25%;\">Guardian Name</th>\n                            <th style=\"width: 30%;\">Status</th>\n                            <th style=\"width: 5%;\">Create</th>\n                        </tr>\n                    </thead>\n\n                    <tbody style=\"text-align:center;\">\n                        <tr *ngFor=\"let fami of familyList; index as i\">\n                            <td style=\"width: 3%;\">{{i+1}}</td>\n                            <td style=\"width: 3%;\">{{fami.familyNumber}}</td>\n                            <td style=\"width: 25%;\">{{fami.firstName}}{{fami.middleName}} {{fami.lastName}}</td>\n                            <td style=\"width: 25%;\">{{fami.husbandOrGuardianName}}</td>\n                            <td style=\"width: 30%;\">status</td>\n                            <td class=\"btn-link\"\n                                style=\"width: 5%; color:#0d6efd; text-decoration: none; cursor: pointer;\"\n                                (click)=\"createSattu(fami)\">create</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </form>\n</div>"],"names":["Validators","MAT_DIALOG_DATA","CreateSattuRegisterComponent","constructor","fb","httpService","sattuService","data","dialogRef","disableClose","ngOnInit","createSattu_Form","console","log","req","dataAccessDTO","familyId","familyDetailId","getSattuRegisterPrerequisites","subscribe","res","prequisiteDetails","responseObject","closeDialog","close","createSattuForm","group","orientation","required","regularly","irregularly","notPreparing","reason","s","controls","e","selectors","decls","vars","consts","template","i0","ctx","RouterModule","SattuRegisterComponent","routes","path","component","SattuRegisterRoutingModule","forChild","imports","exports","ViewSattuFamilyComponent","sidebarService","http","router","modalService","config","validationService","dialog","toaster","confirmationDialogService","backdrop","keyboard","ngDoCheck","searchFullscreen","val","selectVillage_Form","loader","checkRoledetailDTO","then","regionBranchHide","regionList","region","lowerRoleBranchId","branchId","JSON","parse","localStorage","getItem","Dto","userId","userName","post","baseURL","sessionDTO","status","villagesOfBranch","selectVillageForm","branch","block","gp","gram","m","changeRegion","regionId","getBranchesOfRegion","branchList","setValue","gpList","villageList","value","changeBranch","getVillagesOfBranch","changeBlock","blockId","find","blockMasterId","gpDtoList","changeGp","gpId","gpMunicipalId","villageDtoList","changeVillage","villageId","viewreq","visitDate","getSattuview","sattuView","viewFamilyList","open","width","height","CommonModule","LoaderModule","FormsModule","ReactiveFormsModule","MatDialogModule","NgxPaginationModule","SattuRegisterModule","declarations","environment","SattuRegisterService","apiUrl","obj","getListOfFamiliesOfAVillage","factory","providedIn","moment","viewFamily_Form","minDate","Date","subtract","format","maxDate","add","viewFamilyForm","date","r","changeDate","famReq","familyList","createSattu","fami","restrictTypeOfDate"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}