{"version":3,"file":"src_app_modules_ss-training_ss-training_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AACO;;;AAE9D,MAAME,MAAM,GAAW,CAAC;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEH,uEAAmBA;AAAA,CAAE,CAAC;AAM/D,MAAOI,uBAAuB;AAAvBA,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA;AAAuB;AAAvBA,uBAAuB;YAHxBL,kEAAqB,CAACE,MAAM,CAAC,EAC7BF,yDAAY;AAAA;;sHAEXK,uBAAuB;IAAAE,UAAAA,yDAAAA;IAAAC,UAFxBR,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN0D;AAKjD;;;;;;;;;;;;;;;;;;ICCbW,4DAAAA,cACqF;IAE7EA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,mCAAkC;IAAA,EAAC;IAACA,oDAAAA,uCAC/B;IAAAA,0DAAAA,EAAI;;;;;IAYdA,4DAAAA,iBAA4E;IACxEA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAS;;;;IAFiCA,mEAAAA,oCAAiC;IACvEA,uDAAAA,GACJ;IADIA,gEAAAA,iCACJ;;;;;IAGAA,4DAAAA,UAAsC;IAAAA,oDAAAA,mCAA4B;IAAAA,0DAAAA,EAAM;;;;;IAD5EA,4DAAAA,cAAsD;IAClDA,wDAAAA,sEAAwE;IAC5EA,0DAAAA,EAAM;;;;IADIA,uDAAAA,GAA8B;IAA9BA,wDAAAA,0CAA8B;;;;;IAUpCA,4DAAAA,iBAAsE;IAClEA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAS;;;;IAFiCA,mEAAAA,8BAA2B;IACjEA,uDAAAA,GACJ;IADIA,gEAAAA,iCACJ;;;;;IAGAA,4DAAAA,UAAsC;IAAAA,oDAAAA,mCAA4B;IAAAA,0DAAAA,EAAM;;;;;IAD5EA,4DAAAA,cAAsD;IAClDA,wDAAAA,sEAAwE;IAC5EA,0DAAAA,EAAM;;;;IADIA,uDAAAA,GAA8B;IAA9BA,wDAAAA,0CAA8B;;;;;;;;;;;;IA3BhDA,4DAAAA,aAA0C;IAEdA,oDAAAA,qBAAc;IAAAA,4DAAAA,eAA0B;IAAAA,oDAAAA,cAAO;IAAAA,0DAAAA,EAAO;IAC1EA,4DAAAA,iBAEwE;IAF5CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAUA,yDAAAA,0CAAiC;IAAA,EAAC;IAGpEA,4DAAAA,iBAAiB;IAAAA,oDAAAA,0BAAmB;IAAAA,0DAAAA,EAAS;IAC7CA,wDAAAA,qEAES;IACbA,0DAAAA,EAAS;IACTA,wDAAAA,iEAEM;IACVA,0DAAAA,EAAM;IAENA,4DAAAA,eAA+B;IACPA,oDAAAA,sBAAc;IAAAA,4DAAAA,gBAA0B;IAAAA,oDAAAA,eAAO;IAAAA,0DAAAA,EAAO;IAC1EA,4DAAAA,kBAEwE;IAF5CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAUA,yDAAAA,0CAAiC;IAAA,EAAC;IAGpEA,4DAAAA,kBAAiB;IAAAA,oDAAAA,2BAAmB;IAAAA,0DAAAA,EAAS;IAC7CA,wDAAAA,uEAES;IACbA,0DAAAA,EAAS;IACTA,wDAAAA,iEAEM;IACVA,0DAAAA,EAAM;;;;IAzBuCA,uDAAAA,GAC8B;IAD9BA,wDAAAA,YAAAA,6DAAAA,0IAC8B;IAExCA,uDAAAA,GAAa;IAAbA,wDAAAA,8BAAa;IAItCA,uDAAAA,GAAqB;IAArBA,wDAAAA,gCAAqB;IAQcA,uDAAAA,GAC8B;IAD9BA,wDAAAA,YAAAA,6DAAAA,0IAC8B;IAExCA,uDAAAA,GAAa;IAAbA,wDAAAA,8BAAa;IAItCA,uDAAAA,GAAqB;IAArBA,wDAAAA,gCAAqB;;;;;IAwBvBA,4DAAAA,iBACuD;IACnDA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAS;;;;IAFLA,mEAAAA,qDAAkD;IAClDA,uDAAAA,GACJ;IADIA,gEAAAA,iDACJ;;;;;IAuBQA,4DAAAA,aAAuE;IAAAA,oDAAAA,cACvE;IAAAA,0DAAAA,EAAK;;;;;;IAoBDA,4DAAAA,YACyE;IAArEA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,6CAAuC;IAAA,EAAC;IACrDA,0DAAAA,EAAI;;;;;;IACJA,4DAAAA,YAC+D;IAA3DA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,0CAA6B;IAAA,EAAC;IAAoBA,0DAAAA,EAAI;;;;;;IACnEA,4DAAAA,YACiE;IAA7DA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,2CAA8B;IAAA,EAAC;IAAqBA,0DAAAA,EAAI;;;;;IAPzEA,4DAAAA,aAAwE;IACpEA,wDAAAA,gEAEI;IACJA,wDAAAA,gEACmE;IACnEA,wDAAAA,gEACqE;IACzEA,0DAAAA,EAAK;;;;IANsDA,uDAAAA,GAAgB;IAAhBA,wDAAAA,4BAAgB;IAG1BA,uDAAAA,GAAgB;IAAhBA,wDAAAA,4BAAgB;IAEfA,uDAAAA,GAAiB;IAAjBA,wDAAAA,6BAAiB;;;;;;IArBvEA,4DAAAA,SACkG;IACxEA,oDAAAA,GAAO;IAAAA,0DAAAA,EAAK;IAClCA,4DAAAA,aAAuB;IAAAA,oDAAAA,GAA4B;IAAAA,0DAAAA,EAAK;IACxDA,4DAAAA,aAAuB;IACnBA,oDAAAA,GAAqE;IAAAA,0DAAAA,EAAK;IAC9EA,4DAAAA,aAAuB;IACnBA,oDAAAA,GAAmE;IAAAA,0DAAAA,EAAK;IAC5EA,4DAAAA,aAAuB;IAAAA,oDAAAA,IAAiB;IAAAA,0DAAAA,EAAK;IAC7CA,4DAAAA,cAAuB;IAAAA,oDAAAA,IAA6B;IAAAA,0DAAAA,EAAK;IACzDA,4DAAAA,cAAuB;IAAAA,oDAAAA,IAAiB;IAAAA,0DAAAA,EAAK;IAC7CA,4DAAAA,cAE0C;IADtCA,wDAAAA;MAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,gDAAqD;IAAA,EAAC;IACzBA,oDAAAA,YAAI;IAAAA,0DAAAA,EAAK;IACnDA,wDAAAA,8DAQK;IACTA,0DAAAA,EAAK;;;;;;IArBqBA,uDAAAA,GAAO;IAAPA,+DAAAA,WAAO;IACNA,uDAAAA,GAA4B;IAA5BA,+DAAAA,8BAA4B;IAE/CA,uDAAAA,GAAqE;IAArEA,gEAAAA,gFAAqE;IAErEA,uDAAAA,GAAmE;IAAnEA,gEAAAA,8EAAmE;IAChDA,uDAAAA,GAAiB;IAAjBA,+DAAAA,mBAAiB;IACjBA,uDAAAA,GAA6B;IAA7BA,+DAAAA,+BAA6B;IAC7BA,uDAAAA,GAAiB;IAAjBA,gEAAAA,2BAAiB;IAIfA,uDAAAA,GAA6C;IAA7CA,wDAAAA,sEAA6C;;;;;IA6D9EA,4DAAAA,SAAoD;IAC1BA,oDAAAA,GAAO;IAAAA,0DAAAA,EAAK;IAClCA,4DAAAA,aAAuB;IAAAA,oDAAAA,GAAkC;IAAAA,0DAAAA,EAAK;IAC9DA,4DAAAA,aAAuB;IAAAA,oDAAAA,GAAuB;IAAAA,0DAAAA,EAAK;IACnDA,4DAAAA,aAAuB;IAAAA,oDAAAA,GAAwB;IAAAA,0DAAAA,EAAK;IACpDA,4DAAAA,aAAuB;IAAAA,oDAAAA,IAGvB;IAAAA,0DAAAA,EAAK;IACLA,4DAAAA,cAAuB;IAAAA,oDAAAA,IACvB;IAAAA,0DAAAA,EAAK;IACLA,4DAAAA,cAAuB;IAAAA,oDAAAA,IAAyC;IAAAA,0DAAAA,EAAK;;;;;IAV/CA,uDAAAA,GAAO;IAAPA,+DAAAA,WAAO;IACNA,uDAAAA,GAAkC;IAAlCA,+DAAAA,oCAAkC;IAClCA,uDAAAA,GAAuB;IAAvBA,+DAAAA,yBAAuB;IACvBA,uDAAAA,GAAwB;IAAxBA,+DAAAA,0BAAwB;IACxBA,uDAAAA,GAGvB;IAHuBA,gEAAAA,0IAGvB;IACuBA,uDAAAA,GACvB;IADuBA,gEAAAA,0EACvB;IACuBA,uDAAAA,GAAyC;IAAzCA,+DAAAA,+CAAyC;;;;;IAU5FA,4DAAAA,aAAsF;IAAAA,oDAAAA,+BACtF;IAAAA,0DAAAA,EAAK;;;;;IAEDA,4DAAAA,cAA2E;IAEnEA,uDAAAA,cAAgE;IAChEA,4DAAAA,aAAgC;IAAAA,oDAAAA,GAA0D;IAAAA,0DAAAA,EAAK;;;;IAFhGA,uDAAAA,GAA2D;IAA3DA,mEAAAA,+DAAAA,2DAAAA,CAA2D;IACrDA,uDAAAA,GAA0D;IAA1DA,mEAAAA,8DAAAA,2DAAAA,CAA0D;IAC/BA,uDAAAA,GAA0D;IAA1DA,gEAAAA,oEAA0D;;;;;;IA9D1GA,4DAAAA,cAA2B;IAIoCA,oDAAAA,2BAAoB;IAAAA,0DAAAA,EAAK;IAE5EA,4DAAAA,cAAoB;IACIA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,4CAAmC;IAAA,EAAC;IACpBA,oDAAAA,aAAO;IAAAA,0DAAAA,EAAO;IAKvEA,4DAAAA,cAAwB;IAW0BA,oDAAAA,aAAK;IAAAA,0DAAAA,EAAK;IAChCA,4DAAAA,cAAuB;IAAAA,oDAAAA,eAAO;IAAAA,0DAAAA,EAAK;IACnCA,4DAAAA,cAAuB;IAAAA,oDAAAA,cAAM;IAAAA,0DAAAA,EAAK;IAClCA,4DAAAA,cAAuB;IAAAA,oDAAAA,eAAO;IAAAA,0DAAAA,EAAK;IACnCA,4DAAAA,cAAuB;IAAAA,oDAAAA,uBAAe;IAAAA,0DAAAA,EAAK;IAC3CA,4DAAAA,cAAuB;IAAAA,oDAAAA,kBAAU;IAAAA,0DAAAA,EAAK;IACtCA,4DAAAA,cAAuB;IAAAA,oDAAAA,cAAM;IAAAA,0DAAAA,EAAK;IAI1CA,4DAAAA,iBAAmC;IAC/BA,wDAAAA,wEAYK;IACTA,0DAAAA,EAAQ;IAQ5BA,wDAAAA,uEACK;IACLA,4DAAAA,cAAiB;IACbA,wDAAAA,yEAKM;IACVA,0DAAAA,EAAM;;;;IA9B0CA,uDAAAA,IAAgB;IAAhBA,wDAAAA,+BAAgB;IAqBbA,uDAAAA,GAAiC;IAAjCA,wDAAAA,4CAAiC;IAGrCA,uDAAAA,GAAoB;IAApBA,wDAAAA,mCAAoB;;;;;IAkBvDA,4DAAAA,aAC0D;IAAAA,oDAAAA,yBAAkB;IAAAA,0DAAAA,EAAK;;;;;IACjFA,4DAAAA,aAAoG;IAChGA,oDAAAA,wBAAgB;IAAAA,0DAAAA,EAAK;;;;;IACzBA,4DAAAA,aACmD;IAAAA,oDAAAA,GAC7B;IAAAA,0DAAAA,EAAK;;;;IADwBA,uDAAAA,GAC7B;IAD6BA,gEAAAA,gFAC7B;;;;;IACtBA,4DAAAA,aACoD;IAAAA,oDAAAA,GAC9B;IAAAA,0DAAAA,EAAK;;;;IADyBA,uDAAAA,GAC9B;IAD8BA,gEAAAA,gFAC9B;;;;;IACtBA,4DAAAA,aAA0D;IAAAA,oDAAAA,GACpC;IAAAA,0DAAAA,EAAK;;;;IAD+BA,uDAAAA,GACpC;IADoCA,gEAAAA,gFACpC;;;;;;IAK1BA,4DAAAA,eAE+B;IAFzBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,iCAAwB;IAAA,EAAC;IAETA,oDAAAA,aAAO;IAAAA,0DAAAA,EAAO;;;;;;IAC7CA,4DAAAA,eAE8B;IAFxBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,iCAAwB;IAAA,EAAC;IAEVA,oDAAAA,aAAO;IAAAA,0DAAAA,EAAO;;;;;IAgBhCA,4DAAAA,iBACqD;IACjDA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAS;;;;IAFLA,mEAAAA,mDAAgD;IAChDA,uDAAAA,GACJ;IADIA,gEAAAA,+CACJ;;;;;IAGAA,4DAAAA,UAA4C;IAAAA,oDAAAA,6CAAsC;IAAAA,0DAAAA,EAAM;;;;;IAD5FA,4DAAAA,cAA4D;IACxDA,wDAAAA,8EAAwF;IAC5FA,0DAAAA,EAAM;;;;IADIA,uDAAAA,GAAoC;IAApCA,wDAAAA,gDAAoC;;;;;IAoB1CA,4DAAAA,UAAwC;IAAAA,oDAAAA,sCAA+B;IAAAA,0DAAAA,EAAM;;;;;IADjFA,4DAAAA,cAAwD;IACpDA,wDAAAA,8EAA6E;IACjFA,0DAAAA,EAAM;;;;IADIA,uDAAAA,GAAgC;IAAhCA,wDAAAA,4CAAgC;;;;;IAgCtCA,4DAAAA,iBACyD;IACrDA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAS;;;;IAFLA,mEAAAA,uDAAoD;IACpDA,uDAAAA,GACJ;IADIA,gEAAAA,0DACJ;;;;;IAGAA,4DAAAA,UAA6C;IAAAA,oDAAAA,8CAAuC;IAAAA,0DAAAA,EAAM;;;;;IAD9FA,4DAAAA,cAA6D;IACzDA,wDAAAA,oFAA0F;IAC9FA,0DAAAA,EAAM;;;;IADIA,uDAAAA,GAAqC;IAArCA,wDAAAA,iDAAqC;;;;;IAZnDA,4DAAAA,cAAwF;IACzDA,oDAAAA,gCAAyB;IAAAA,4DAAAA,eACxB;IAAAA,oDAAAA,cAAO;IAAAA,0DAAAA,EAAO;IAC1CA,4DAAAA,kBAC6F;IACxEA,oDAAAA,kCAA2B;IAAAA,0DAAAA,EAAS;IACrDA,wDAAAA,oFAGS;IACbA,0DAAAA,EAAS;IACTA,wDAAAA,8EAEM;IACVA,0DAAAA,EAAM;;;;IAX6EA,uDAAAA,GACa;IADbA,wDAAAA,YAAAA,6DAAAA,kLACa;IAEtDA,uDAAAA,GAAkB;IAAlBA,wDAAAA,oCAAkB;IAKlDA,uDAAAA,GAA4B;IAA5BA,wDAAAA,wCAA4B;;;;;IAgB1BA,4DAAAA,iBAAsE;IAClEA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAS;;;;IAFiCA,mEAAAA,8BAA2B;IACjEA,uDAAAA,GACJ;IADIA,gEAAAA,iCACJ;;;;;IAGAA,4DAAAA,UAAwC;IAAAA,oDAAAA,mCAA4B;IAAAA,0DAAAA,EAAM;;;;;IAD9EA,4DAAAA,cAAwD;IACpDA,wDAAAA,8EAA0E;IAC9EA,0DAAAA,EAAM;;;;IADIA,uDAAAA,GAAgC;IAAhCA,wDAAAA,4CAAgC;;;;;IAiBtCA,4DAAAA,UAA+C;IAAAA,oDAAAA,wCAAiC;IAAAA,0DAAAA,EAAM;;;;;IAD1FA,4DAAAA,cAA+D;IAC3DA,wDAAAA,qFAAsF;IAC1FA,0DAAAA,EAAM;;;;IADIA,uDAAAA,GAAuC;IAAvCA,wDAAAA,mDAAuC;;;;;;IAbrDA,4DAAAA,cACgH;IAC/EA,oDAAAA,8BAAuB;IAAAA,4DAAAA,eACxB;IAAAA,oDAAAA,cAAO;IAAAA,0DAAAA,EAAO;IAC1CA,4DAAAA,kBAGoH;IAHxFA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAUA,yDAAAA,0CAAiC;IAAA,EAAC;IAIpEA,4DAAAA,iBAAiB;IAAAA,oDAAAA,+BAAwB;IAAAA,0DAAAA,EAAS;IAClDA,4DAAAA,kBAAsB;IAAAA,oDAAAA,aAAM;IAAAA,0DAAAA,EAAS;IACrCA,4DAAAA,mBAAuB;IAAAA,oDAAAA,iBAAS;IAAAA,0DAAAA,EAAS;IAE7CA,wDAAAA,gFAEM;IACVA,0DAAAA,EAAM;;;;IATEA,uDAAAA,GAC0F;IAD1FA,wDAAAA,YAAAA,6DAAAA,4LAC0F;IAKxFA,uDAAAA,GAA8B;IAA9BA,wDAAAA,0CAA8B;;;;;IAWhCA,4DAAAA,iBAAkE;IAC9DA,oDAAAA,GAEJ;IAAAA,0DAAAA,EAAS;;;;IAH+BA,mEAAAA,4BAAyB;IAC7DA,uDAAAA,GAEJ;IAFIA,gEAAAA,mIAEJ;;;;;;IAkC+BA,4DAAAA,iBAEsE;IAArFA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;MAAA;MAAA;MAAA,OAAUA,yDAAAA,+FAAyE;IAAA,EAAC;IAFrEA,0DAAAA,EAEsE;;;;;;IAEzFA,4DAAAA,iBAEyF;IAArFA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;MAAA;MAAA;MAAA,OAAUA,yDAAAA,+FAAyE;IAAA,EAAC;IAFxFA,0DAAAA,EAEyF;;;;;IAfjGA,4DAAAA,SAA0C;IAChBA,oDAAAA,GAAO;IAAAA,0DAAAA,EAAK;IAClCA,4DAAAA,aAAuB;IAAAA,oDAAAA,GAA6B;IAAAA,0DAAAA,EAAK;IACzDA,4DAAAA,aAAuB;IAAAA,oDAAAA,GAAkB;IAAAA,0DAAAA,EAAK;IAC9CA,4DAAAA,aAAuB;IAAAA,oDAAAA,GAA2C;IAAAA,0DAAAA,EAAK;IACvEA,4DAAAA,aAAuB;IAAAA,oDAAAA,IAGvB;IAAAA,0DAAAA,EAAK;IACLA,4DAAAA,cAAsB;IAACA,wDAAAA,oFAEsE;IAEzFA,wDAAAA,oFAEyF;IAC7FA,0DAAAA,EAAK;;;;;IAfiBA,uDAAAA,GAAO;IAAPA,+DAAAA,WAAO;IACNA,uDAAAA,GAA6B;IAA7BA,+DAAAA,+BAA6B;IAC7BA,uDAAAA,GAAkB;IAAlBA,+DAAAA,oBAAkB;IAClBA,uDAAAA,GAA2C;IAA3CA,+DAAAA,iDAA2C;IAC3CA,uDAAAA,GAGvB;IAHuBA,gEAAAA,sHAGvB;IAEwCA,uDAAAA,GAA0B;IAA1BA,wDAAAA,kCAA0B;IAInCA,uDAAAA,GAA2B;IAA3BA,wDAAAA,mCAA2B;;;;;;IAlM9FA,4DAAAA,cAA2B;IAIXA,wDAAAA,qEACiF;IACjFA,wDAAAA,qEACyB;IACzBA,wDAAAA,qEAE2B;IAC3BA,wDAAAA,qEAE2B;IAC3BA,wDAAAA,qEAC2B;IAC/BA,0DAAAA,EAAM;IAGVA,4DAAAA,cAAoB;IAChBA,wDAAAA,2EAE6C;IAC7CA,wDAAAA,2EAE4C;IAChDA,0DAAAA,EAAM;IAIVA,4DAAAA,eAAwB;IAIkBA,oDAAAA,+BAAuB;IAAAA,4DAAAA,gBACrB;IAAAA,oDAAAA,eAAO;IAAAA,0DAAAA,EAAO;IAC1CA,4DAAAA,kBAGuD;IAAnDA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAUA,yDAAAA,gDAAuC;IAAA,EAAC;IAClDA,4DAAAA,kBAAiB;IAAAA,oDAAAA,kCAA0B;IAAAA,0DAAAA,EAAS;IACpDA,wDAAAA,+EAGS;IACbA,0DAAAA,EAAS;IACTA,wDAAAA,yEAEM;IACVA,0DAAAA,EAAM;IAENA,4DAAAA,eAA+B;IACLA,oDAAAA,iBAAS;IAAAA,0DAAAA,EAAQ;IACvCA,uDAAAA,iBAC+B;IACnCA,0DAAAA,EAAM;IAGVA,4DAAAA,cAAiB;IAEaA,oDAAAA,wBAAgB;IAAAA,4DAAAA,gBAA0B;IAAAA,oDAAAA,eAAO;IAAAA,0DAAAA,EAAO;IAC9EA,4DAAAA,iBAIqG;IAHjGA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAWA,yDAAAA,6BAAoB;IAAA,EAAC;MAAAA,2DAAAA;MAAA;MAAA,OACtBA,yDAAAA,0CAAiC;IAAA,EADX;IADpCA,0DAAAA,EAIqG;IACrGA,wDAAAA,yEAEM;IACVA,0DAAAA,EAAM;IAENA,4DAAAA,eAA+B;IACPA,oDAAAA,gBAAQ;IAAAA,0DAAAA,EAAQ;IACpCA,uDAAAA,iBAAmF;IACvFA,0DAAAA,EAAM;IAGVA,4DAAAA,cAAiB;IAEgBA,oDAAAA,qBAAa;IAAAA,0DAAAA,EAAQ;IAC9CA,4DAAAA,iBAEuC;IADpBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAYA,yDAAAA,wDAA+C;IAAA,EAAC;IAD/EA,0DAAAA,EAEuC;IAG3CA,4DAAAA,eAA+B;IACKA,oDAAAA,4BAAoB;IAAAA,0DAAAA,EAAQ;IAC5DA,4DAAAA,iBAGuC;IADnCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAYA,yDAAAA,wDAA+C;IAAA,EAAC;IAFhEA,0DAAAA,EAGuC;IAG3CA,wDAAAA,0EAcM;IACVA,0DAAAA,EAAM;IAENA,4DAAAA,oBAAmC;IACEA,oDAAAA,cAAM;IAAAA,0DAAAA,EAAS;IAChDA,4DAAAA,cAAiB;IAEaA,oDAAAA,qBAAa;IAAAA,4DAAAA,gBAA0B;IAAAA,oDAAAA,eAAO;IAAAA,0DAAAA,EAAO;IAC3EA,4DAAAA,kBAGwB;IAHIA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAUA,yDAAAA,4CAAmC;IAAA,EAAC;IAItEA,4DAAAA,kBAAiB;IAAAA,oDAAAA,2BAAmB;IAAAA,0DAAAA,EAAS;IAC7CA,wDAAAA,+EAES;IACbA,0DAAAA,EAAS;IACTA,wDAAAA,yEAEM;IACVA,0DAAAA,EAAM;IAENA,wDAAAA,0EAeM;IAENA,4DAAAA,eAA+B;IACRA,oDAAAA,wBAAgB;IAAAA,0DAAAA,EAAQ;IAC3CA,4DAAAA,kBACuC;IADXA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAUA,yDAAAA,0CAAgC;IAAA,EAAC;IAEnEA,4DAAAA,kBAAiB;IAAAA,oDAAAA,6BAAqB;IAAAA,0DAAAA,EAAS;IAC/CA,4DAAAA,kBAAwB;IAAAA,oDAAAA,gBAAQ;IAAAA,0DAAAA,EAAS;IACzCA,wDAAAA,+EAGS;IACTA,4DAAAA,kBAAuB;IAAAA,oDAAAA,eAAO;IAAAA,0DAAAA,EAAS;IAMnDA,4DAAAA,eAAuB;IAQmBA,oDAAAA,aAAK;IAAAA,0DAAAA,EAAK;IAChCA,4DAAAA,cAAuB;IAAAA,oDAAAA,eAAO;IAAAA,0DAAAA,EAAK;IACnCA,4DAAAA,cAAuB;IAAAA,oDAAAA,cAAM;IAAAA,0DAAAA,EAAK;IAClCA,4DAAAA,cAAuB;IAAAA,oDAAAA,eAAO;IAAAA,0DAAAA,EAAK;IACnCA,4DAAAA,cAAuB;IAAAA,oDAAAA,uBAAe;IAAAA,0DAAAA,EAAK;IAC3CA,4DAAAA,cAAsB;IAAAA,oDAAAA,cAAM;IAAAA,0DAAAA,EAAK;IAIzCA,4DAAAA,iBAAmC;IAC/BA,wDAAAA,wEAiBK;IACTA,0DAAAA,EAAQ;IAUhCA,4DAAAA,eAA0B;IAGdA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,8BAAoB;IAAA,EAAC;IAACA,oDAAAA,YAAI;IAAAA,0DAAAA,EAAS;;;;IA9MvCA,uDAAAA,GAAmD;IAAnDA,wDAAAA,0GAAmD;IACRA,uDAAAA,GAAkD;IAAlDA,wDAAAA,uGAAkD;IAGzEA,uDAAAA,GAAwB;IAAxBA,wDAAAA,mCAAwB;IAGtBA,uDAAAA,GAAuB;IAAvBA,wDAAAA,kCAAuB;IAElBA,uDAAAA,GAAwB;IAAxBA,wDAAAA,mCAAwB;IAQvDA,uDAAAA,GAAwB;IAAxBA,wDAAAA,mCAAwB;IAGxBA,uDAAAA,GAAuB;IAAvBA,wDAAAA,kCAAuB;IAMNA,uDAAAA,GAAuC;IAAvCA,wDAAAA,+CAAuC;IAKwBA,uDAAAA,GAEY;IAFZA,wDAAAA,YAAAA,6DAAAA,yKAEY;IAGpDA,uDAAAA,GAAiB;IAAjBA,wDAAAA,kCAAiB;IAKhDA,uDAAAA,GAA2B;IAA3BA,wDAAAA,sCAA2B;IAgBIA,uDAAAA,IAAmB;IAAnBA,wDAAAA,2BAAmB;IAIlDA,uDAAAA,GAAuB;IAAvBA,wDAAAA,kCAAuB;IAOoCA,uDAAAA,GAAiB;IAAjBA,wDAAAA,yBAAiB;IAoBtDA,uDAAAA,IAAsD;IAAtDA,wDAAAA,kEAAsD;IAuBjCA,uDAAAA,IAC4B;IAD5BA,wDAAAA,YAAAA,6DAAAA,qJAC4B;IAG1CA,uDAAAA,GAAa;IAAbA,wDAAAA,8BAAa;IAItCA,uDAAAA,GAAuB;IAAvBA,wDAAAA,kCAAuB;IAM5BA,uDAAAA,GAAwG;IAAxGA,wDAAAA,8HAAwG;IAsB3EA,uDAAAA,GAAY;IAAZA,wDAAAA,6BAAY;IA4BfA,uDAAAA,IAAW;IAAXA,wDAAAA,0BAAW;IA8BIA,uDAAAA,GAAwC;IAAxCA,wDAAAA,gDAAwC;;;;;;;;;ADpZxG,MAAOV,mBAAmB;EA4C9BW,YAAoBC,EAAsB,EAAUC,IAAgB,EAAUC,cAA8B,EAAUC,OAAsB,EAClIC,WAAwB,EAAUC,iBAAoC,EAAUC,YAAsB,EAAEC,MAAsB,EAC9HC,iBAAoC,EAAUC,yBAAoD,EAAUC,MAAc;IAFhH,OAAE,GAAFV,EAAE;IAA8B,SAAI,GAAJC,IAAI;IAAsB,mBAAc,GAAdC,cAAc;IAA0B,YAAO,GAAPC,OAAO;IACnH,gBAAW,GAAXC,WAAW;IAAuB,sBAAiB,GAAjBC,iBAAiB;IAA6B,iBAAY,GAAZC,YAAY;IAC5F,sBAAiB,GAAjBE,iBAAiB;IAA6B,8BAAyB,GAAzBC,yBAAyB;IAAqC,WAAM,GAANC,MAAM;IA3C5H,eAAU,GAAe,EAAE;IAC3B,eAAU,GAAe,EAAE;IAC3B,qBAAgB,GAAe,EAAE;IAYjC,gBAAW,GAAe,EAAE;IAC5B,gBAAW,GAAe,EAAE;IAC5B,WAAM,GAAe,EAAE;IACvB,cAAS,GAAe,EAAE;IAC1B,mBAAc,GAAe,EAAE;IAC/B,oBAAe,GAAe,EAAE;IAChC,0BAAqB,GAAG,EAAE;IAC1B,gBAAW,GAAe,EAAE;IAI5B,cAAS,GAAe,EAAE;IAC1B,SAAI,GAAG,CAAC;IACR,aAAQ,GAAG,CAAC;IAGZ,cAAS,GAAe,EAAE;IAO1B,oBAAe,GAAe,EAAE;IAEhC,WAAM,GAAY,KAAK;IAKrBH,MAAM,CAACI,QAAQ,GAAG,QAAQ;IAC1BJ,MAAM,CAACK,QAAQ,GAAG,KAAK;EACzB;EAEAC,SAAS;IACP,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACN,iBAAiB,CAACO,GAAG;EACpD;EAEAC,QAAQ;IAEN,IAAI,CAACC,UAAU,EAAE;IAEjB,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAAChB,cAAc,CAACiB,kBAAkB,EAAE,CAACC,IAAI,CAAEC,GAAQ,IAAI;MACzD,IAAI,CAACH,MAAM,GAAG,IAAI;MAClB,IAAIG,GAAG,CAACC,gBAAgB,EAAE;QACxB,IAAI,CAACC,UAAU,GAAGF,GAAG,CAACG,MAAM;QAC5B,IAAI,CAACN,MAAM,GAAG,IAAI;QAElB,IAAI,CAACI,gBAAgB,GAAGD,GAAG,CAACC,gBAAgB;OAE7C,MAAM;QACL,IAAI,CAACG,iBAAiB,GAAGJ,GAAG,CAACK,QAAQ;QACrC,IAAI,CAACC,UAAU,GAAGN,GAAG,CAACO,UAAU;QAChC,IAAI,CAACC,UAAU,GAAGR,GAAG,CAACQ,UAAU;QAChCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,UAAU,EAAE,iBAAiB,CAAC;QAE/C,IAAI,CAACG,WAAW,CAACC,IAAI,CAAC,IAAI,CAACR,iBAAiB,CAAC;QAC7CK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,iBAAiB,EAAE,mBAAmB,CAAC;QAExD,IAAIS,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC;QACrE,IAAIC,GAAG,GAAG;UACRL,aAAa,EAAE;YACbM,MAAM,EAAEN,aAAa,CAACM,MAAM;YAC5BC,QAAQ,EAAEP,aAAa,CAACO;WACzB;UACDf,QAAQ,EAAE,IAAI,CAACD;SAChB;QACD,IAAI,CAACH,gBAAgB,GAAGD,GAAG,CAACC,gBAAgB;QAC5C,IAAI,CAACrB,IAAI,CAACyC,IAAI,CAAC,GAAG,IAAI,CAACxC,cAAc,CAACyC,OAAO,8BAA8B,EAAEJ,GAAG,CAAC,CAACK,SAAS,CAAEvB,GAAQ,IAAI;UACvG,IAAIA,GAAG,CAACwB,UAAU,CAACC,MAAM,IAAI,IAAI,EAAE;YACjC,IAAI,CAACC,gBAAgB,GAAG1B,GAAG,CAAC2B,cAAc;YAC1C,IAAI,CAAC9B,MAAM,GAAG,IAAI;;QAEtB,CAAC,CAAC;QAEF,IAAI,CAAC+B,YAAY,CAAC,IAAI,CAACC,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAACF,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAAC3B,iBAAiB,CAAC;;IAErI,CAAC,CAAC;IAEF,IAAI,CAACvB,cAAc,CAACmD,WAAW,CAC5BC,IAAI,CAACC,iBAAiB,IAAIA,iBAAiB,CAACC,gBAAgB,IAAI,CAAC,CAAC,EAAEC,iBAAiB,CACrFH,IAAI,CAACI,IAAI,IAAIA,IAAI,CAACC,mBAAmB,IAAI,GAAG,IAAID,IAAI,CAACC,mBAAmB,IAAI,GAAG,IAAID,IAAI,CAACC,mBAAmB,IAAI,GAAG,IAAID,IAAI,CAACC,mBAAmB,IAAI,GAAG,CAAC,EAAEC,gBAAgB,CACxKN,IAAI,CAACO,UAAU,IAAIA,UAAU,CAACA,UAAU,IAAI,MAAM,CAAC,EAAEA,UAAU,GAAG,IAAI,CAACnD,MAAM,CAACoD,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,GAAG,IAAI,CAACpD,MAAM,CAACoD,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAE9I,IAAI,CAACC,UAAU,GAAG,IAAI,CAAC7D,cAAc,CAACmD,WAAW,CAC9CC,IAAI,CAACC,iBAAiB,IAAIA,iBAAiB,CAACC,gBAAgB,IAAI,CAAC,CAAC,EAAEC,iBAAiB,CACrFH,IAAI,CAACI,IAAI,IAAIA,IAAI,CAACC,mBAAmB,IAAI,GAAG,IAAID,IAAI,CAACC,mBAAmB,IAAI,GAAG,IAAID,IAAI,CAACC,mBAAmB,IAAI,GAAG,IAAID,IAAI,CAACC,mBAAmB,IAAI,GAAG,CAAC,EAAEC,gBAAgB,CACxKN,IAAI,CAACO,UAAU,IAAIA,UAAU,CAACA,UAAU,IAAI,QAAQ,CAAC,EAAEA,UAAU,GAAG,IAAI,GAAG,KAAK;IAEnF,IAAI,CAACG,UAAU,GAAG,IAAI,CAAC9D,cAAc,CAACmD,WAAW,CAC9CC,IAAI,CAACC,iBAAiB,IAAIA,iBAAiB,CAACC,gBAAgB,IAAI,CAAC,CAAC,EAAEC,iBAAiB,CACrFH,IAAI,CAACI,IAAI,IAAIA,IAAI,CAACC,mBAAmB,IAAI,GAAG,IAAID,IAAI,CAACC,mBAAmB,IAAI,GAAG,IAAID,IAAI,CAACC,mBAAmB,IAAI,GAAG,IAAID,IAAI,CAACC,mBAAmB,IAAI,GAAG,CAAC,EAAEC,gBAAgB,CACxKN,IAAI,CAACO,UAAU,IAAIA,UAAU,CAACA,UAAU,IAAI,QAAQ,CAAC,EAAEA,UAAU,GAAG,IAAI,GAAG,KAAK;IAEnF,IAAI,CAACI,UAAU,GAAG,IAAI,CAAC/D,cAAc,CAACmD,WAAW,CAC9CC,IAAI,CAACC,iBAAiB,IAAIA,iBAAiB,CAACC,gBAAgB,IAAI,CAAC,CAAC,EAAEC,iBAAiB,CACrFH,IAAI,CAACI,IAAI,IAAIA,IAAI,CAACC,mBAAmB,IAAI,GAAG,IAAID,IAAI,CAACC,mBAAmB,IAAI,GAAG,IAAID,IAAI,CAACC,mBAAmB,IAAI,GAAG,IAAID,IAAI,CAACC,mBAAmB,IAAI,GAAG,CAAC,EAAEC,gBAAgB,CACxKN,IAAI,CAACO,UAAU,IAAIA,UAAU,CAACA,UAAU,IAAI,QAAQ,CAAC,EAAEA,UAAU,GAAG,IAAI,GAAG,KAAK;IAEnF,IAAI,CAACK,WAAW,GAAG,IAAI,CAAChE,cAAc,CAACmD,WAAW,CAC/CC,IAAI,CAACC,iBAAiB,IAAIA,iBAAiB,CAACC,gBAAgB,IAAI,CAAC,CAAC,EAAEC,iBAAiB,CACrFH,IAAI,CAACI,IAAI,IAAIA,IAAI,CAACC,mBAAmB,IAAI,GAAG,IAAID,IAAI,CAACC,mBAAmB,IAAI,GAAG,IAAID,IAAI,CAACC,mBAAmB,IAAI,GAAG,IAAID,IAAI,CAACC,mBAAmB,IAAI,GAAG,CAAC,EAAEC,gBAAgB,CACxKN,IAAI,CAACO,UAAU,IAAIA,UAAU,CAACA,UAAU,IAAI,SAAS,CAAC,EAAEA,UAAU,GAAG,IAAI,GAAG,KAAK;EACtF;EAEA5C,UAAU;IACR,IAAI,CAACiC,uBAAuB,GAAG,IAAI,CAAClD,EAAE,CAACmE,KAAK,CAAC;MAC3C3C,MAAM,EAAE,CAAC,EAAE,EAAE5B,+DAAmB,CAAC;MACjCwD,MAAM,EAAE,CAAC,EAAE,EAAExD,+DAAmB,CAAC;MACjCyE,eAAe,EAAE,CAAC,EAAE,CAAC;MACrBC,aAAa,EAAE,CAAC,EAAE,CAAC;MACnBC,cAAc,EAAE,CAAC,EAAE;KACpB,CAAC;IACF,IAAI,CAACC,wBAAwB,EAAE;EACjC;EAEA,IAAIC,CAAC;IACH,OAAO,IAAI,CAACvB,uBAAuB,CAACwB,QAAQ;EAC9C;EAEAC,YAAY,CAACC,QAAQ;IACnB,IAAI,CAACC,QAAQ,GAAGD,QAAQ;IAAE9C,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC8C,QAAQ,CAAC;IAEpD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACvD,UAAU,CAAC+B,IAAI,CAAEyB,GAAG,IAAKA,GAAG,CAACC,cAAc,IAAI,IAAI,CAACH,QAAQ,CAAC,EAAEC,UAAU;IAChGhD,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC+C,UAAU,EAAE,iBAAiB,CAAC;IAE/C,IAAIG,GAAG,GAAG;MAAE/C,aAAa,EAAE,IAAI,CAAC9B,WAAW,CAAC8B,aAAa;MAAE0C,QAAQ,EAAE,IAAI,CAACC;IAAQ,CAAE;IAEpF,IAAI,CAACxE,iBAAiB,CAAC6E,uBAAuB,CAACD,GAAG,CAAC,CAACrC,SAAS,CAAEvB,GAAG,IAAI;MACpE,IAAI,CAACM,UAAU,GAAGN,GAAG,CAAC2B,cAAc;MACpC,IAAI,CAACrB,UAAU,CAACwD,OAAO,CAAEzB,IAAI,IAAI;QAC/B,IAAI,CAAC1B,WAAW,CAACC,IAAI,CAACyB,IAAI,CAAChC,QAAQ,CAAC;QACpCI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,WAAW,CAAC;MAC/B,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,CAACkB,uBAAuB,CAACwB,QAAQ,CAACtB,MAAM,CAACgC,QAAQ,CAAC,EAAE,CAAC;IACzD,IAAI,CAAClC,uBAAuB,CAACwB,QAAQ,CAACL,eAAe,CAACe,QAAQ,CAAC,EAAE,CAAC;IAClE,IAAI,CAAClC,uBAAuB,CAACwB,QAAQ,CAACJ,aAAa,CAACc,QAAQ,CAAC,EAAE,CAAC;IAChE,IAAI,CAAClC,uBAAuB,CAACwB,QAAQ,CAACH,cAAc,CAACa,QAAQ,CAAC,EAAE,CAAC;IACjE,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,IAAI,CAACnC,uBAAuB,CAACC,KAAK,CAAC3B,MAAM,IAAI,EAAE,EAAE;MACnD,IAAI,CAAC0B,uBAAuB,CAACwB,QAAQ,CAACtB,MAAM,CAACgC,QAAQ,CAAC,EAAE,CAAC;MACzD,IAAI,CAACC,WAAW,GAAG,EAAE;MACrB,IAAI,CAAC1D,UAAU,GAAG,EAAE;;EAExB;EAEAsB,YAAY,CAACvB,QAAQ;IACnB,IAAI,CAAC4D,iBAAiB,GAAG5D,QAAQ;IACjC,IAAIuD,GAAG,GAAG;MAAE/C,aAAa,EAAE,IAAI,CAAC9B,WAAW,CAAC8B,aAAa;MAAER,QAAQ,EAAEA;IAAQ,CAAE;IAE/E,IAAI,CAACrB,iBAAiB,CAACkF,6BAA6B,CAACN,GAAG,CAAC,CAACrC,SAAS,CAAEvB,GAAG,IAAI;MAC1E,IAAI,CAACgE,WAAW,GAAGhE,GAAG,CAAC2B,cAAc,CAACwC,6BAA6B;MACnE1D,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsD,WAAW,EAAE,mBAAmB,CAAC;MAClD,IAAI,IAAI,CAACnC,uBAAuB,CAACC,KAAK,CAACoB,cAAc,EAAE;QACrD,IAAI,CAACc,WAAW,GAAG,IAAI,CAACA,WAAW,CAACI,MAAM,CAAE/B,IAAI,IAAKA,IAAI,CAACgC,uBAAuB,IAAI,IAAI,CAACC,eAAe,CAAC;QAC1G7D,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsD,WAAW,EAAE,YAAY,CAAC;;MAG7C,IAAI,IAAI,CAACnC,uBAAuB,CAACC,KAAK,CAACkB,eAAe,IAAI,IAAI,CAACnB,uBAAuB,CAACC,KAAK,CAACmB,aAAa,EAAE;QAC1G,IAAI,CAACe,WAAW,GAAG,IAAI,CAACA,WAAW,CAACI,MAAM,CAAC/B,IAAI,IAAIA,IAAI,CAACkC,4BAA4B,IAAI,IAAI,CAAC1C,uBAAuB,CAACC,KAAK,CAACkB,eAAe,CAAC;QAC3IvC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsD,WAAW,EAAE,yCAAyC,CAAC;QACxE,IAAI,CAACA,WAAW,GAAG,IAAI,CAACA,WAAW,CAACI,MAAM,CAAC/B,IAAI,IAAIA,IAAI,CAACmC,0BAA0B,IAAI,IAAI,CAAC3C,uBAAuB,CAACC,KAAK,CAACmB,aAAa,CAAC;QACvIxC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsD,WAAW,EAAE,uCAAuC,CAAC;;IAE1E,CAAC,CAAC;IAEF,IAAI,CAACxD,UAAU,GAAG,IAAI,CAACF,UAAU,CAAC2B,IAAI,CAAEI,IAAI,IAAKA,IAAI,CAAChC,QAAQ,IAAIA,QAAQ,CAAC,EAAEG,UAAU;IACvFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,UAAU,EAAE,kBAAkB,CAAC;EAClD;EAEAiE,wBAAwB,CAACC,eAAe;IACtC,IAAI,CAACJ,eAAe,GAAGI,eAAe;IACtC,IAAI,CAAC9C,YAAY,CAAC,IAAI,CAACC,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAACF,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAAC3B,iBAAiB,CAAC;EACnI;EAEAuE,4BAA4B;IAC1BlE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACmB,uBAAuB,CAACC,KAAK,CAACkB,eAAe,EAAE,iBAAiB,CAAC;IAClFvC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACmB,uBAAuB,CAACC,KAAK,CAACmB,aAAa,EAAE,eAAe,CAAC;IAC9E,IAAI,CAACrB,YAAY,CAAC,IAAI,CAACC,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAACF,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAAC3B,iBAAiB,CAAC;EACnI;EAEAwE,uBAAuB,CAACC,qBAAqB,EAAEC,KAAK;IAClD,IAAI,CAACC,WAAW,GAAGD,KAAK,CAACE,MAAM;IAC/BvE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACqE,WAAW,EAAE,QAAQ,EAAED,KAAK,CAAC;IAE9C,IAAI,CAACG,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,cAAc,GAAG,IAAI,CAACjG,YAAY,CAACkG,IAAI,CAACN,qBAAqB,EAAE;MAClEO,WAAW,EAAE;KACd,CAAC;IAEF,IAAIC,QAAQ,GAAG;MAAExE,aAAa,EAAE,IAAI,CAAC9B,WAAW,CAAC8B,aAAa;MAAEyE,wBAAwB,EAAER,KAAK,CAACQ;IAAwB,CAAE;IAC1H7E,OAAO,CAACC,GAAG,CAAC2E,QAAQ,EAAE,UAAU,CAAC;IAEjC,IAAI,CAACrG,iBAAiB,CAACuG,aAAa,CAACF,QAAQ,CAAC,CAAC9D,SAAS,CAAEvB,GAAG,IAAI;MAC/D,IAAI,CAACwF,eAAe,GAAGxF,GAAG,CAAC2B,cAAc;MACzClB,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC8E,eAAe,EAAE,iBAAiB,CAAC;IACtD,CAAC,CAAC;EACJ;EAEAC,iCAAiC;IAC/B,IAAI,CAACP,cAAc,EAAEQ,KAAK,EAAE;EAC9B;EAEAvC,wBAAwB;IACtB,IAAIS,GAAG,GAAG;MAAE/C,aAAa,EAAE,IAAI,CAAC9B,WAAW,CAAC8B;IAAa,CAAE;IAE3D,IAAI,CAAC7B,iBAAiB,CAAC2G,sBAAsB,CAAC/B,GAAG,CAAC,CAACrC,SAAS,CAAEvB,GAAG,IAAI;MACnE,IAAI,CAAC4F,cAAc,GAAG5F,GAAG,CAAC2B,cAAc,EAAEiE,cAAc;MACxD,IAAI,CAACC,eAAe,GAAG7F,GAAG,CAAC2B,cAAc,EAAEkE,eAAe;MAC1DpF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACkF,cAAc,EAAE,sBAAsB,CAAC;MACxDnF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACmF,eAAe,EAAE,uBAAuB,CAAC;IAC5D,CAAC,CAAC;EACJ;EAEAC,sBAAsB,CAACC,UAAU;IAC/BtF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsF,kBAAkB,EAAE,oBAAoB,CAAC;IAC1DvF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,iBAAiB,EAAE,mBAAmB,CAAC;IACxDK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACuD,iBAAiB,EAAE,mBAAmB,CAAC;IACxDxD,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC8C,QAAQ,EAAE,UAAU,CAAC;IACtC/C,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC+C,UAAU,EAAE,iBAAiB,CAAC;IAC/C;IACA,IAAI,CAACwB,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,cAAc,GAAG,IAAI,CAACjG,YAAY,CAACkG,IAAI,CAACY,UAAU,EAAE;MACvDX,WAAW,EAAE;KACd,CAAC;IACF;IACA,IAAI,CAACa,mBAAmB,EAAE;IAC1B,IAAI,CAACC,yBAAyB,CAAC7C,QAAQ,CAAC,UAAU,CAAC,CAAC8C,OAAO,EAAE;IAC7D,IAAI,CAAC,IAAI,CAACD,yBAAyB,CAACpE,KAAK,CAACsE,YAAY,EAAE;MACtD,IAAI,CAACF,yBAAyB,CAAC7C,QAAQ,CAAC,UAAU,CAAC,CAAC8C,OAAO,EAAE;MAC7D,IAAI,CAACD,yBAAyB,CAAC7C,QAAQ,CAAC,QAAQ,CAAC,CAAC8C,OAAO,EAAE;MAC3D,IAAI,CAACD,yBAAyB,CAAC7C,QAAQ,CAAC,UAAU,CAAC,CAAC8C,OAAO,EAAE;MAC7D,IAAI,CAACD,yBAAyB,CAAC7C,QAAQ,CAAC,iBAAiB,CAAC,CAAC8C,OAAO,EAAE;MACpE,IAAI,CAACD,yBAAyB,CAAC7C,QAAQ,CAAC,OAAO,CAAC,CAAC8C,OAAO,EAAE;;EAG9D;EAEAE,oBAAoB,CAACvB,KAAK,EAAEiB,UAAU;IACpC,IAAI,CAACC,kBAAkB,GAAGlB,KAAK;IAC/BrE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsF,kBAAkB,EAAE,oBAAoB,CAAC;IAC1D,IAAIM,KAAK,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IACjDhG,OAAO,CAACC,GAAG,CAAC4F,KAAK,CAAC;IAElB,IAAIxB,KAAK,CAACP,4BAA4B,GAAG+B,KAAK,EAAE;MAC9C,IAAI,CAACR,sBAAsB,CAACC,UAAU,CAAC;KACxC,MAAM;MACL,IAAI,CAACW,sBAAsB,EAAE;MAC7B,IAAI,CAACC,SAAS,CAAC,iCAAiC,CAAC;MACjD;;EAGJ;EAEAV,mBAAmB;IACjB,IAAIW,IAAI,GAAG,IAAI,CAACZ,kBAAkB;IAClCvF,OAAO,CAACC,GAAG,CAACkG,IAAI,EAAE,MAAM,CAAC;IAEzB,IAAI,CAACV,yBAAyB,GAAG,IAAI,CAACvH,EAAE,CAACmE,KAAK,CAAC;MAC7CsD,YAAY,EAAE,CAACQ,IAAI,EAAEvC,uBAAuB,GAAGuC,IAAI,EAAEvC,uBAAuB,GAAG,EAAE,EAAE9F,+DAAmB,CAAC;MACvGsI,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,QAAQ,EAAE,CAAC,EAAE,EAAEvI,+DAAmB,CAAC;MACnCwI,MAAM,EAAE,CAAC,EAAE,CAAC;MACZC,WAAW,EAAE,CAACJ,IAAI,EAAEK,YAAY,GAAGL,IAAI,EAAEK,YAAY,GAAG,EAAE,CAAC;MAC3DC,kBAAkB,EAAE,CAACN,IAAI,EAAEO,mBAAmB,GAAGP,IAAI,EAAEO,mBAAmB,GAAG,EAAE,CAAC;MAChFC,aAAa,EAAE,CAAC,EAAE,EAAE7I,+DAAmB,CAAC;MACxC8I,QAAQ,EAAE,CAAC,IAAI,CAACpD,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,GAAG,IAAI,CAAC7D,iBAAiB,EAAE7B,+DAAmB,CAAC;MACzG+I,eAAe,EAAE,CAAC,OAAO,EAAE/I,+DAAmB,CAAC;MAC/CgJ,KAAK,EAAE,CAAC,EAAE;KACX,CAAC;IACF,IAAI,CAACrB,yBAAyB,CAACsB,gBAAgB,EAAE;IAEjD,IAAIZ,IAAI,EAAE;MACR,IAAI,CAACa,kBAAkB,CAACb,IAAI,EAAEvC,uBAAuB,CAAC;MACtD,IAAI,CAAC6B,yBAAyB,CAAC7C,QAAQ,CAAC,QAAQ,CAAC,CAAC8C,OAAO,EAAE;MAC3D,IAAI,CAACD,yBAAyB,CAAC7C,QAAQ,CAACyD,QAAQ,CAAC/C,QAAQ,CAAC6C,IAAI,EAAErC,4BAA4B,CAAC;MAC7F,IAAI,CAACmD,YAAY,CAACd,IAAI,EAAErC,4BAA4B,CAAC;MACrD,IAAI,CAAC2B,yBAAyB,CAAC7C,QAAQ,CAAC+D,aAAa,CAACrD,QAAQ,CAAC6C,IAAI,EAAEe,iCAAiC,CAAC;;IAEzG,IAAI,CAACC,mBAAmB,EAAE;EAC5B;EAEAA,mBAAmB;IAEjB,IAAIC,MAAM,GAAG;MACXhH,aAAa,EAAE,IAAI,CAAC9B,WAAW,CAAC8B,aAAa;MAC7CR,QAAQ,EAAE,IAAI,CAAC6F,yBAAyB,CAACpE,KAAK,CAACuF;KAChD;IACD5G,OAAO,CAACC,GAAG,CAACmH,MAAM,EAAE,QAAQ,CAAC;IAE7B,IAAI,CAAC7I,iBAAiB,CAAC8I,iBAAiB,CAACD,MAAM,CAAC,CAACtG,SAAS,CAAEvB,GAAQ,IAAI;MACtE,IAAI,CAAC+H,SAAS,GAAG/H,GAAG,CAAC2B,cAAc;MACnClB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACqH,SAAS,EAAE,WAAW,CAAC;IAC1C,CAAC,CAAC;EACJ;EAEA,IAAIC,CAAC;IACH,OAAO,IAAI,CAAC9B,yBAAyB,CAAC7C,QAAQ;EAChD;EAEA4E,UAAU;IACR,IAAI3B,KAAK,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IACjD,IAAI,CAACyB,WAAW,GAAG1J,mCAAM,CAAC8H,KAAK,CAAC,CAAC6B,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAACC,MAAM,CAAC,YAAY,CAAC;EACtE;EAEAV,YAAY,CAACW,CAAC;IACZ5H,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC4H,aAAa,EAAE,oBAAoB,CAAC;IACrD,IAAIC,MAAM,GAAG,IAAIhC,IAAI,CAAC8B,CAAC,CAAC;IACxB,IAAIE,MAAM,CAACC,MAAM,EAAE,IAAI,CAAC,EAAE;MACxB,IAAI,CAAC7B,SAAS,CAAC,oBAAoB,CAAC;MACpC,IAAI,CAACT,yBAAyB,CAAC7C,QAAQ,CAACyD,QAAQ,CAAC/C,QAAQ,CAAC,EAAE,CAAC;MAC7D,IAAI,CAACmC,yBAAyB,CAAC7C,QAAQ,CAAC0D,MAAM,CAAChD,QAAQ,CAAC,EAAE,CAAC;MAC3D;;IAGF,IAAI,IAAI,CAACmC,yBAAyB,CAACpE,KAAK,CAACsE,YAAY,IAAI,CAAC,EAAE;MAC1D,IAAI,CAACqC,SAAS,GAAG,IAAI,CAACvC,yBAAyB,CAACpE,KAAK,CAACgF,QAAQ;MAC9D,IAAI,CAACZ,yBAAyB,CAAC7C,QAAQ,CAAC0D,MAAM,CAAChD,QAAQ,CAAC,IAAI,CAAC0E,SAAS,CAAC;MACvE,IAAI,CAACvC,yBAAyB,CAACpE,KAAK,CAACiF,MAAM,GAAG,IAAI,CAAC0B,SAAS;MAC5DhI,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC+H,SAAS,EAAE,aAAa,CAAC;KAC3C,MAAM;MACLJ,CAAC,GAAG,IAAI9B,IAAI,CAAC8B,CAAC,EAAEK,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;MACnC,IAAIC,OAAY;QAAEC,aAAa,GAAI,IAAI,CAACN,aAAa,GAAG,CAAE;QAAEO,KAAK,GAAG,CAAC;MACrE,OAAOA,KAAK,GAAGD,aAAa,EAAE;QAC5BD,OAAO,GAAG,IAAIpC,IAAI,CAAC8B,CAAC,CAACS,OAAO,CAACT,CAAC,CAACU,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAC9C,IAAIJ,OAAO,CAACH,MAAM,EAAE,IAAI,CAAC,EAAE;UACzBK,KAAK,EAAE;;;MAGX,IAAI,CAACJ,SAAS,GAAGjK,mCAAM,CAACmK,OAAO,CAAC,CAACP,MAAM,CAAC,YAAY,CAAC;MACrD,IAAI,CAAClC,yBAAyB,CAAC7C,QAAQ,CAAC0D,MAAM,CAAChD,QAAQ,CAAC,IAAI,CAAC0E,SAAS,CAAC;MACvE,IAAI,CAACvC,yBAAyB,CAACpE,KAAK,CAACiF,MAAM,GAAG,IAAI,CAAC0B,SAAS;MAC5DhI,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC+H,SAAS,EAAE,eAAe,CAAC;;EAEhD;EAEAhB,kBAAkB,CAACY,CAAC;IAElB,IAAI,CAACJ,UAAU,EAAE;IACjB,IAAI,CAAC/B,yBAAyB,CAAC7C,QAAQ,CAACiE,eAAe,CAACvD,QAAQ,CAAC,OAAO,CAAC;IACzE,IAAI,CAACmC,yBAAyB,CAAC7C,QAAQ,CAAC+D,aAAa,CAACrD,QAAQ,CAAC,EAAE,CAAC;IAElE,IAAIsE,CAAC,IAAI,CAAC,EAAE;MACV,IAAI,CAACnC,yBAAyB,CAAC7C,QAAQ,CAACwD,QAAQ,CAAC9C,QAAQ,CAAC,CAAC,CAAC;MAC5D,IAAI,CAACmC,yBAAyB,CAACpE,KAAK,CAAC+E,QAAQ,GAAG,CAAC;MACjD,IAAI,CAACyB,aAAa,GAAG,IAAI,CAACpC,yBAAyB,CAACpE,KAAK,CAAC+E,QAAQ;MAClE,IAAI,CAACmC,qBAAqB,CAAC,OAAO,EAAE,IAAI,CAACC,OAAO,CAAC;MACjD,IAAI,CAAC/C,yBAAyB,CAAC7C,QAAQ,CAAC,UAAU,CAAC,CAAC6F,MAAM,EAAE;MAC5D,IAAI,CAAChD,yBAAyB,CAAC7C,QAAQ,CAAC,iBAAiB,CAAC,CAAC6F,MAAM,EAAE;MACnE,IAAI,CAAChD,yBAAyB,CAAC7C,QAAQ,CAAC,OAAO,CAAC,CAAC6F,MAAM,EAAE;KAC1D,MAAM,IAAIb,CAAC,IAAI,CAAC,EAAE;MACjB,IAAI,CAACnC,yBAAyB,CAAC7C,QAAQ,CAACwD,QAAQ,CAAC9C,QAAQ,CAAC,CAAC,CAAC;MAC5D,IAAI,CAACmC,yBAAyB,CAACpE,KAAK,CAAC+E,QAAQ,GAAG,CAAC;MACjD,IAAI,CAACyB,aAAa,GAAG,IAAI,CAACpC,yBAAyB,CAACpE,KAAK,CAAC+E,QAAQ;MAClE,IAAI,CAACmC,qBAAqB,CAAC,OAAO,EAAE,IAAI,CAACC,OAAO,CAAC;MACjD,IAAI,CAAC/C,yBAAyB,CAAC7C,QAAQ,CAAC,UAAU,CAAC,CAAC6F,MAAM,EAAE;MAC5D,IAAI,CAAChD,yBAAyB,CAAC7C,QAAQ,CAAC,iBAAiB,CAAC,CAAC6F,MAAM,EAAE;MACnE,IAAI,CAAChD,yBAAyB,CAAC7C,QAAQ,CAAC,OAAO,CAAC,CAAC6F,MAAM,EAAE;KAC1D,MAAM,IAAIb,CAAC,IAAI,CAAC,EAAE;MACjB,IAAI,CAACnC,yBAAyB,CAAC7C,QAAQ,CAACwD,QAAQ,CAAC9C,QAAQ,CAAC,CAAC,CAAC;MAC5D,IAAI,CAACmC,yBAAyB,CAACpE,KAAK,CAAC+E,QAAQ,GAAG,CAAC;MACjD,IAAI,CAACyB,aAAa,GAAG,IAAI,CAACpC,yBAAyB,CAACpE,KAAK,CAAC+E,QAAQ;MAClE,IAAI,CAACmC,qBAAqB,CAAC,OAAO,EAAE,IAAI,CAACC,OAAO,CAAC;MACjD,IAAI,CAAC/C,yBAAyB,CAAC7C,QAAQ,CAAC,UAAU,CAAC,CAAC6F,MAAM,EAAE;MAC5D,IAAI,CAAChD,yBAAyB,CAAC7C,QAAQ,CAAC,iBAAiB,CAAC,CAAC8C,OAAO,EAAE;MACpE,IAAI,CAACD,yBAAyB,CAAC7C,QAAQ,CAAC,OAAO,CAAC,CAAC6F,MAAM,EAAE;KAC1D,MAAM,IAAIb,CAAC,IAAI,CAAC,EAAE;MACjB,IAAI,CAACnC,yBAAyB,CAAC7C,QAAQ,CAACwD,QAAQ,CAAC9C,QAAQ,CAAC,CAAC,CAAC;MAC5D,IAAI,CAACmC,yBAAyB,CAACpE,KAAK,CAAC+E,QAAQ,GAAG,CAAC;MACjD,IAAI,CAACyB,aAAa,GAAG,IAAI,CAACpC,yBAAyB,CAACpE,KAAK,CAAC+E,QAAQ;MAClE,IAAI,CAACmC,qBAAqB,CAAC,OAAO,EAAE,IAAI,CAACC,OAAO,CAAC;MACjD,IAAI,CAAC/C,yBAAyB,CAAC7C,QAAQ,CAAC,UAAU,CAAC,CAAC6F,MAAM,EAAE;MAC5D,IAAI,CAAChD,yBAAyB,CAAC7C,QAAQ,CAAC,iBAAiB,CAAC,CAAC8C,OAAO,EAAE;MACpE,IAAI,CAACD,yBAAyB,CAAC7C,QAAQ,CAAC,OAAO,CAAC,CAAC6F,MAAM,EAAE;KAC1D,MAAM;MACL,IAAI,CAAClE,MAAM,GAAG,EAAE;MAChB,IAAI,CAACkB,yBAAyB,CAAC7C,QAAQ,CAAC,UAAU,CAAC,CAAC8C,OAAO,EAAE;MAC7D,IAAI,CAACD,yBAAyB,CAAC7C,QAAQ,CAAC,iBAAiB,CAAC,CAAC8C,OAAO,EAAE;MACpE,IAAI,CAACD,yBAAyB,CAAC7C,QAAQ,CAAC,OAAO,CAAC,CAAC8C,OAAO,EAAE;;IAG5D1F,OAAO,CAACC,GAAG,CAAC,IAAI,CAACwF,yBAAyB,CAACpE,KAAK,CAAC+E,QAAQ,EAAE,mBAAmB,CAAC;IAC/EpG,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC4H,aAAa,EAAE,kBAAkB,CAAC;IACnD,IAAI,CAACpC,yBAAyB,CAAC7C,QAAQ,CAACyD,QAAQ,CAAC/C,QAAQ,CAAC,EAAE,CAAC;IAC7D,IAAI,CAACmC,yBAAyB,CAAC7C,QAAQ,CAAC0D,MAAM,CAAChD,QAAQ,CAAC,EAAE,CAAC;IAC3D,IAAI,IAAI,CAACmC,yBAAyB,CAACpE,KAAK,CAACsE,YAAY,EAAE;MACrD,IAAI,CAACF,yBAAyB,CAAC7C,QAAQ,CAAC,UAAU,CAAC,CAAC6F,MAAM,EAAE;KAC7D,MAAM;MACL,IAAI,CAAChD,yBAAyB,CAAC7C,QAAQ,CAAC,UAAU,CAAC,CAAC8C,OAAO,EAAE;MAC7D,IAAI,CAACD,yBAAyB,CAAC7C,QAAQ,CAACwD,QAAQ,CAAC9C,QAAQ,CAAC,EAAE,CAAC;MAC7D,IAAI,CAACmC,yBAAyB,CAAC7C,QAAQ,CAACyD,QAAQ,CAAC/C,QAAQ,CAAC,EAAE,CAAC;MAC7D,IAAI,CAACmC,yBAAyB,CAAC7C,QAAQ,CAAC0D,MAAM,CAAChD,QAAQ,CAAC,EAAE,CAAC;;EAG/D;EAEAiF,qBAAqB,CAAC1B,eAAe,EAAE2B,OAAO;IAC5CxI,OAAO,CAACC,GAAG,CAAC4G,eAAe,CAAC;IAC5B7G,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,WAAW,EAAE,kCAAkC,CAAC;IAEjE,IAAIwI,SAAS,GAAG;MACdtI,aAAa,EAAE,IAAI,CAAC9B,WAAW,CAAC8B,aAAa;MAC7CR,QAAQ,EAAE,IAAI,CAACM,WAAW;MAC1ByI,oBAAoB,EAAE,IAAI,CAAClD,yBAAyB,CAACpE,KAAK,CAACsE,YAAY;MACvEd,wBAAwB,EAAE,IAAI,CAACU,kBAAkB,EAAEV,wBAAwB,GAAG,IAAI,CAACU,kBAAkB,EAAEV,wBAAwB,GAAG;KACnI;IAED,IAAI,CAACtG,iBAAiB,CAACqK,SAAS,CAACF,SAAS,CAAC,CAAC5H,SAAS,CAAEvB,GAAQ,IAAI;MACjE,IAAI,CAACsJ,SAAS,GAAGtJ,GAAG,CAAC2B,cAAc;MACnC,IAAI,CAAC2H,SAAS,GAAG,IAAI,CAACA,SAAS,EAAEC,GAAG,CAAC,CAAC;QACpCC,SAAS,GAAG,KAAK;QACjB,GAAGC;MAAI,CACR,MAAM;QACLD,SAAS;QACT,GAAGC;OACJ,CAAC,CAAC;MACH,IAAI,CAACzE,MAAM,GAAG,IAAI,CAACsE,SAAS;MAC5B7I,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsE,MAAM,EAAE,gBAAgB,CAAC;MAE1C,IAAI,IAAI,CAACgB,kBAAkB,EAAE;QAC3B,IAAI,CAAChB,MAAM,EAAElB,OAAO,CAAEzB,IAAI,IAAI;UAC5B,IAAI,IAAI,CAAC2D,kBAAkB,EAAEhB,MAAM,EAAE/C,IAAI,CAACyH,EAAE,IAAIA,EAAE,CAACC,oBAAoB,IAAItH,IAAI,CAACsH,oBAAoB,CAAC,EAAE;YACrGtH,IAAI,CAACmH,SAAS,GAAG,IAAI;;QAEzB,CAAC,CAAC;;MAGJ/I,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsE,MAAM,EAAE,aAAa,CAAC;MACvCvE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,iBAAiB,EAAE,mBAAmB,CAAC;MACxDK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACuD,iBAAiB,EAAE,mBAAmB,CAAC;MAGxD,IAAI,CAACe,MAAM,GAAG,IAAI,CAACA,MAAM,EAAEZ,MAAM,CAAE/B,IAAI,IAAKA,IAAI,CAACuH,SAAS,IAAI,IAAI,CAAC3F,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,GAAG,IAAI,CAAC7D,iBAAiB,CAAC;MACvIK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsE,MAAM,EAAE,qBAAqB,CAAC;MAE/C,IAAI,IAAI,CAACkB,yBAAyB,CAACpE,KAAK,CAACsE,YAAY,IAAI,CAAC,IAAI,IAAI,CAACF,yBAAyB,CAACpE,KAAK,CAACsE,YAAY,IAAI,CAAC,EAAE;QACpH,IAAIkB,eAAe,IAAI,OAAO,EAAE;UAC9B,IAAI,CAACtC,MAAM,GAAG,IAAI,CAACA,MAAM,EAAEZ,MAAM,CAAE/B,IAAI,IAAKA,IAAI,CAACZ,MAAM,IAAI,OAAO,CAAC;UACnEhB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsE,MAAM,EAAE,cAAc,CAAC;SACzC,MAAM,IAAIsC,eAAe,IAAI,QAAQ,EAAE;UACtC,IAAI,CAACtC,MAAM,GAAG,IAAI,CAACA,MAAM,EAAEZ,MAAM,CAAE/B,IAAI,IAAKA,IAAI,CAACZ,MAAM,IAAI,OAAO,CAAC;UACnEhB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsE,MAAM,EAAE,cAAc,CAAC;SACzC,MACI;UACH,IAAI,CAACA,MAAM,GAAG,EAAE;;;IAItB,CAAC,CAAC;EAEJ;EAEA6E,YAAY,CAACvC,eAAe;IAC1B,IAAI,CAACpB,yBAAyB,CAAC7C,QAAQ,CAACkE,KAAK,CAACxD,QAAQ,CAAC,EAAE,CAAC;IAC1D,IAAI,CAACiB,MAAM,GAAG,IAAI,CAACsE,SAAS;IAC5B7I,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsE,MAAM,EAAE,aAAa,CAAC;IACvCvE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACuD,iBAAiB,EAAE,yBAAyB,CAAC;IAC9DxD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,iBAAiB,EAAE,wBAAwB,CAAC;IAG7D,IAAI,CAAC4E,MAAM,GAAG,IAAI,CAACA,MAAM,CAACZ,MAAM,CAAE/B,IAAI,IAAKA,IAAI,CAACuH,SAAS,IAAI,IAAI,CAAC3F,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,GAAG,IAAI,CAAC7D,iBAAiB,CAAC;IACtIK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsE,MAAM,EAAE,qBAAqB,CAAC;IAE/C,IAAI,IAAI,CAACkB,yBAAyB,CAACpE,KAAK,CAACsE,YAAY,IAAI,CAAC,IAAI,IAAI,CAACF,yBAAyB,CAACpE,KAAK,CAACsE,YAAY,IAAI,CAAC,EAAE;MACpH,IAAIkB,eAAe,IAAI,OAAO,EAAE;QAC9B,IAAI,CAACtC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACZ,MAAM,CAAE/B,IAAI,IAAKA,IAAI,CAACZ,MAAM,IAAI,OAAO,CAAC;QAClEhB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsE,MAAM,EAAE,cAAc,CAAC;OACzC,MAAM,IAAIsC,eAAe,IAAI,QAAQ,EAAE;QACtC,IAAI,CAACtC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACZ,MAAM,CAAE/B,IAAI,IAAKA,IAAI,CAACZ,MAAM,IAAI,OAAO,CAAC;QAClEhB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsE,MAAM,EAAE,cAAc,CAAC;OACzC,MACI;QACH,IAAI,CAACA,MAAM,GAAG,EAAE;;;EAItB;EAEA8E,cAAc,CAACzB,CAAC;IACd,IAAI,CAAC,IAAI,CAACjI,iBAAiB,EAAE;MAC3B,IAAI,CAAC6D,iBAAiB,GAAGoE,CAAC;KAC3B,MAAM;MACL,IAAI,CAACjI,iBAAiB,GAAGiI,CAAC;;IAE5B,IAAI,CAACwB,YAAY,CAAC,OAAO,CAAC;IAC1B,IAAI,CAAC3D,yBAAyB,CAAC7C,QAAQ,CAACiE,eAAe,CAACvD,QAAQ,CAAC,OAAO,CAAC;IACzE,IAAI,CAACmC,yBAAyB,CAAC7C,QAAQ,CAACkE,KAAK,CAACxD,QAAQ,CAAC,EAAE,CAAC;IAC1D,IAAI,IAAI,CAACgG,OAAO,EAAE;MAChB,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACC,eAAe,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACH,OAAO,CAAC;;IAG5E,IAAI,CAACnC,mBAAmB,EAAE;EAC5B;EAEAoC,mBAAmB,CAACG,MAAM,EAAEC,KAAK,EAAE/B,CAAC;IAClC,IAAI,CAAC4B,eAAe,GAAGE,MAAM;IAC7B1J,OAAO,CAACC,GAAG,CAAC,IAAI,CAACuJ,eAAe,CAAC;IAEjC,IAAI,CAACC,OAAO,GAAGE,KAAK;IACpB,IAAI,CAACL,OAAO,GAAG1B,CAAC;IAEhB,IAAI,IAAI,CAAC0B,OAAO,IAAI,IAAI,EAAE;MACxB,IAAI,CAACT,SAAS,CAACrH,IAAI,CAACoI,IAAI,IAAIA,IAAI,CAACV,oBAAoB,IAAI,IAAI,CAACM,eAAe,EAAEN,oBAAoB,CAAC,CAACH,SAAS,GAAG,IAAI;MACrH/I,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC4I,SAAS,EAAE,WAAW,CAAC;KACzC,MAAM;MACL,IAAI,CAACA,SAAS,CAACrH,IAAI,CAACoI,IAAI,IAAIA,IAAI,CAACV,oBAAoB,IAAI,IAAI,CAACM,eAAe,EAAEN,oBAAoB,CAAC,CAACH,SAAS,GAAG,KAAK;MACtH/I,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC4I,SAAS,EAAE,WAAW,CAAC;;EAG5C;EAEAgB,wBAAwB;IACtB,IAAIC,IAAI,GAAG,IAAI;IACf,IAAI,CAAC,IAAI,CAACrE,yBAAyB,CAACpE,KAAK,CAACsE,YAAY,IAAI,CAAC,IAAI,CAACF,yBAAyB,CAACpE,KAAK,CAACgF,QAAQ,EAAE;MACxGyD,IAAI,GAAG,KAAK;;IAEd,IAAI,IAAI,CAACrE,yBAAyB,CAACpE,KAAK,CAACsE,YAAY,IAAI,CAAC,EAAE;MAC1D,IAAI,CAAC,IAAI,CAACF,yBAAyB,CAACpE,KAAK,CAACsF,aAAa,EAAE;QACvDmD,IAAI,GAAG,KAAK;;;IAIhB,IAAIC,KAAK,GAAG,EAAE;IACdA,KAAK,GAAG,IAAI,CAAClB,SAAS,EAAElF,MAAM,CAAC/B,IAAI,IAAIA,IAAI,CAACmH,SAAS,IAAI,IAAI,CAAC;IAC9D,IAAIgB,KAAK,EAAEC,MAAM,IAAI,CAAC,EAAE;MACtBF,IAAI,GAAG,KAAK;;IAEd,OAAOA,IAAI;EACb;EAEAG,kBAAkB;IAEhB,IAAI,CAACC,qBAAqB,GAAG,EAAE;IAC/B,IAAI,CAACC,SAAS,GAAG,IAAI,CAACtB,SAAS,EAAElF,MAAM,CAAC/B,IAAI,IAAIA,IAAI,CAACmH,SAAS,IAAI,IAAI,CAAC;IACvE,IAAI,CAACoB,SAAS,CAAC9G,OAAO,CAAEzB,IAAI,IAAG;MAC7B,IAAI,CAACuI,SAAS,GAAGvI,IAAI,CAACsH,oBAAoB;MAC1ClJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACkK,SAAS,EAAE,WAAW,CAAC;MACxC,IAAI,CAACD,qBAAqB,CAAC/J,IAAI,CAAC,IAAI,CAACgK,SAAS,CAAC;MAC/CnK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACiK,qBAAqB,CAAC;IACzC,CAAC,CAAE;IAEH,IAAIE,SAAS,GAAG;MACdhK,aAAa,EAAE,IAAI,CAAC9B,WAAW,CAAC8B,aAAa;MAC7CyE,wBAAwB,EAAE,IAAI,CAACU,kBAAkB,EAAEV,wBAAwB,GAAG,IAAI,CAACU,kBAAkB,EAAEV,wBAAwB,GAAG,CAAC;MACnIwF,WAAW,EAAE,IAAI,CAAC9E,kBAAkB,GAAG,GAAG,GAAG,IAAI;MACjD+E,sBAAsB,EAAE,IAAI,CAAC7E,yBAAyB,EAAEpE,KAAK,CAACsE,YAAY;MAC1EuB,iCAAiC,EAAE,IAAI,CAACzB,yBAAyB,EAAEpE,KAAK,CAACsF,aAAa,GACpF,IAAI,CAAClB,yBAAyB,EAAEpE,KAAK,CAACsF,aAAa,GAAG,CAAC;MACzD7C,4BAA4B,EAAE,IAAI,CAAC2B,yBAAyB,CAACpE,KAAK,CAACgF,QAAQ;MAC3EtC,0BAA0B,EAAE,IAAI,CAACiE,SAAS;MAC1CxB,YAAY,EAAE,IAAI,CAAC9H,iBAAiB,CAAC6L,QAAQ,CAAC,IAAI,CAAC9E,yBAAyB,CAACpE,KAAK,CAACkF,WAAW,CAACiE,IAAI,EAAE,CAAC;MACtG9D,mBAAmB,EAAE,IAAI,CAAChI,iBAAiB,CAAC6L,QAAQ,CAAC,IAAI,CAAC9E,yBAAyB,CAACpE,KAAK,CAACoF,kBAAkB,CAAC+D,IAAI,EAAE,CAAC;MACpH5K,QAAQ,EAAE,IAAI,CAACwB,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAACF,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAAC3B,iBAAiB;MACxH4E,MAAM,EAAE,IAAI,CAAC2F;KACd;IAEDlK,OAAO,CAACC,GAAG,CAACmK,SAAS,EAAE,WAAW,CAAC;IAEnC,IAAI,CAAC7L,iBAAiB,CAACkM,4BAA4B,CAACL,SAAS,CAAC,CAACtJ,SAAS,CAAEvB,GAAQ,IAAI;MACpFS,OAAO,CAACC,GAAG,CAACV,GAAG,CAAC;MAChB,IAAIA,GAAG,CAACyB,MAAM,IAAI,IAAI,EAAE;QACtB,IAAI,CAAC0J,WAAW,CAACnL,GAAG,CAACoL,OAAO,CAAC;QAC7B,IAAI,CAAC1E,sBAAsB,EAAE;QAC7B,IAAI,CAAC9E,YAAY,CAAC,IAAI,CAACC,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAACF,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAAC3B,iBAAiB,CAAC;OAClI,MAAM;QACL,IAAI,CAACuG,SAAS,CAAC3G,GAAG,CAACoL,OAAO,CAAC;;IAG/B,CAAC,CAAC;EAEJ;EAEA1E,sBAAsB;IACpBjG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACsF,kBAAkB,EAAEV,wBAAwB,EAAE,0BAA0B,CAAC;IAC1F,IAAI+F,EAAE,GAAG,IAAI,CAACrF,kBAAkB,EAAEV,wBAAwB;IAE1D,IAAI+F,EAAE,EAAE;MACN,IAAI,CAACrF,kBAAkB,GAAG,EAAE;MAC5BqF,EAAE,GAAG,CAAC;MACN,IAAI,CAACnG,cAAc,EAAEQ,KAAK,EAAE;KAC7B,MACI;MACH,IAAI,CAACR,cAAc,EAAEQ,KAAK,EAAE;MAC5B,IAAI,CAACV,MAAM,GAAG,EAAE;MAChB,IAAI,CAAC2F,qBAAqB,GAAG,EAAE;;EAEnC;EAEAW,sBAAsB,CAACxG,KAAK;IAC1B,IAAIwB,KAAK,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IACjDhG,OAAO,CAACC,GAAG,CAAC4F,KAAK,CAAC;IAElB,IAAKxB,KAAK,CAACP,4BAA4B,GAAG+B,KAAK,IAAKxB,KAAK,CAACrD,MAAM,IAAI,YAAY,EAAE;MAChF,IAAI,CAACrC,yBAAyB,CAACmM,OAAO,CAAC,EAAE,EAAE,sDAAsD,CAAC,CAC/FxL,IAAI,CAAC,MAAM,IAAI,CAACyL,MAAM,CAAC1G,KAAK,CAAC,CAC7B,CACA2G,KAAK,CAAC,MAAM,EAAE,CAAC;KACnB,MAAM;MACL,IAAI,CAAC9E,SAAS,CAAC,mCAAmC,CAAC;MACnD;;EAEJ;EAEA6E,MAAM,CAAC1G,KAAK;IACV,IAAI4G,WAAW,GAAG;MAChB7K,aAAa,EAAE,IAAI,CAAC9B,WAAW,CAAC8B,aAAa;MAC7CyE,wBAAwB,EAAER,KAAK,EAAEQ,wBAAwB;MACzDwF,WAAW,EAAE,GAAG;MAChBC,sBAAsB,EAAEjG,KAAK,EAAET,uBAAuB;MACtDsD,iCAAiC,EAAE7C,KAAK,EAAE6C,iCAAiC;MAC3EpD,4BAA4B,EAAEO,KAAK,EAAEP,4BAA4B;MACjEC,0BAA0B,EAAEM,KAAK,EAAEN,0BAA0B;MAC7DyC,YAAY,EAAEnC,KAAK,EAAEmC,YAAY;MACjCE,mBAAmB,EAAErC,KAAK,EAAEqC,mBAAmB;MAC/C9G,QAAQ,EAAE,IAAI,CAACwB,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAACF,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAAC3B,iBAAiB;MACxH4E,MAAM,EAAEF,KAAK,EAAEE;KAChB;IAEDvE,OAAO,CAACC,GAAG,CAACgL,WAAW,CAAC;IAExB,IAAI,CAAC1M,iBAAiB,CAACkM,4BAA4B,CAACQ,WAAW,CAAC,CAACnK,SAAS,CAAEvB,GAAQ,IAAI;MACtFS,OAAO,CAACC,GAAG,CAACV,GAAG,CAAC;MAChB,IAAIA,GAAG,CAACyB,MAAM,IAAI,IAAI,EAAE;QACtB,IAAI,CAAC0J,WAAW,CAACnL,GAAG,CAACoL,OAAO,CAAC;QAC7B,IAAI,CAACxJ,YAAY,CAAC,IAAI,CAACC,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAACF,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAAC3B,iBAAiB,CAAC;OAClI,MAAM;QACL,IAAI,CAACuG,SAAS,CAAC3G,GAAG,CAACoL,OAAO,CAAC;;IAG/B,CAAC,CAAC;EAEJ;EAEAO,uBAAuB,CAAC7G,KAAK;IAC3B,IAAIwB,KAAK,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IACjDhG,OAAO,CAACC,GAAG,CAAC4F,KAAK,CAAC;IAElB,IAAKxB,KAAK,CAACP,4BAA4B,IAAI+B,KAAK,IAAKxB,KAAK,CAACrD,MAAM,IAAI,YAAY,EAAE;MACjF,IAAI,CAACrC,yBAAyB,CAACmM,OAAO,CAAC,EAAE,EAAE,uDAAuD,CAAC,CAChGxL,IAAI,CAAC,MAAM,IAAI,CAAC6L,SAAS,CAAC9G,KAAK,CAAC,CAChC,CACA2G,KAAK,CAAC,MAAM,EAAE,CAAC;KACnB,MAAM;MACL,IAAI,CAAC9E,SAAS,CAAC,oCAAoC,CAAC;MACpD;;EAGJ;EAEAiF,SAAS,CAAC9G,KAAK;IACb,IAAI+G,aAAa,GAAG;MAClBhL,aAAa,EAAE,IAAI,CAAC9B,WAAW,CAAC8B,aAAa;MAC7CyE,wBAAwB,EAAER,KAAK,CAACQ;KACjC;IAED7E,OAAO,CAACC,GAAG,CAACmL,aAAa,CAAC;IAC1B,IAAI,CAAC7M,iBAAiB,CAAC8M,iBAAiB,CAACD,aAAa,CAAC,CAACtK,SAAS,CAAEvB,GAAQ,IAAI;MAC7ES,OAAO,CAACC,GAAG,CAACV,GAAG,CAAC;MAChB,IAAIA,GAAG,CAACyB,MAAM,IAAI,IAAI,EAAE;QACtB,IAAI,CAAC0J,WAAW,CAACnL,GAAG,CAACoL,OAAO,CAAC;QAC7B,IAAI,CAACxJ,YAAY,CAAC,IAAI,CAACC,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAACF,uBAAuB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAAC3B,iBAAiB,CAAC;OAClI,MAAM;QACL,IAAI,CAACuG,SAAS,CAAC3G,GAAG,CAACoL,OAAO,CAAC;;IAG/B,CAAC,CAAC;EACJ;EAEAW,WAAW,CAACC,OAAO;IACjB,IAAI,CAAC/C,OAAO,GAAG+C,OAAO;IACtB,IAAI,CAACC,6BAA6B,CAAC,IAAI,CAAChD,OAAO,CAAC;EAClD;EAEAgD,6BAA6B,CAAChD,OAAO;IACnC,IAAI,CAACjE,MAAM,GAAG,IAAI,CAACsE,SAAS;IAC5B,IAAI,IAAI,CAACpD,yBAAyB,CAACpE,KAAK,CAACwF,eAAe,IAAI,OAAO,EAAE;MACnE,IAAI,CAACtC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACZ,MAAM,CAAC8H,CAAC,IAAIA,CAAC,CAACzK,MAAM,IAAI,OAAO,CAAC;KAC3D,MAAM;MACL,IAAI,CAACuD,MAAM,GAAG,IAAI,CAACA,MAAM,CAACZ,MAAM,CAAC8H,CAAC,IAAIA,CAAC,CAACzK,MAAM,IAAI,OAAO,CAAC;;IAG5D,IAAIwH,OAAO,IAAI,SAAS,EAAE;MACxB,IAAI,CAACjE,MAAM;KACZ,MAAM,IAAIiE,OAAO,IAAI,QAAQ,EAAE;MAC9B,IAAI,CAACjE,MAAM,GAAG,IAAI,CAACA,MAAM,CAACZ,MAAM,CAAC8H,CAAC,IAAIA,CAAC,CAACC,OAAO,IAAI,IAAI,CAAC;KACzD,MAAM;MACL,IAAI,CAACnH,MAAM,GAAG,IAAI,CAACA,MAAM,CAACZ,MAAM,CAAC8H,CAAC,IAAIA,CAAC,CAACC,OAAO,IAAIlD,OAAO,CAAC;;EAE/D;EAEAkC,WAAW,CAACC,OAAO;IACjB,IAAI,CAACtM,OAAO,CAACsN,OAAO,CAAChB,OAAO,EAAE,mBAAmB,EAAE;MACjDiB,OAAO,EAAE;KACV,CAAC;EACJ;EAEA1F,SAAS,CAACyE,OAAO;IACf,IAAI,CAACtM,OAAO,CAACwN,KAAK,CAAClB,OAAO,EAAE,mBAAmB,EAAE;MAC/CiB,OAAO,EAAE;KACV,CAAC;EACJ;EAEAE,kBAAkB;IAAK,OAAO,KAAK;EAAC;;AAltBzBxO,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAyO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MClBhCnO,uDAAAA,oBAA2C;MAC3CA,4DAAAA,aAAuB;MAMoBA,oDAAAA,yBAAkB;MAAAA,0DAAAA,EAAK;MAC9CA,wDAAAA,uDAKM;MACVA,0DAAAA,EAAM;MAENA,4DAAAA,cAAgE;MAC5DA,wDAAAA,2DA8BM;MAENA,4DAAAA,cAAiB;MAEoBA,oDAAAA,oBAAY;MAAAA,0DAAAA,EAAQ;MACjDA,4DAAAA,iBAC8C;MAA1CA,wDAAAA;QAAA,OAAUoO,kCAA8B;MAAA,EAAC;MAD7CpO,0DAAAA,EAC8C;MAGlDA,4DAAAA,eAA+B;MACAA,oDAAAA,kBAAU;MAAAA,0DAAAA,EAAQ;MAC7CA,4DAAAA,iBAC8C;MAA1CA,wDAAAA;QAAA,OAAUoO,kCAA8B;MAAA,EAAC;MAD7CpO,0DAAAA,EAC8C;MAGlDA,4DAAAA,eAA+B;MACCA,oDAAAA,iCAAyB;MAAAA,0DAAAA,EAAQ;MAC7DA,4DAAAA,kBAC6D;MAAzDA,wDAAAA;QAAA,OAAUoO,iDAA6C;MAAA,EAAC;MACxDpO,4DAAAA,kBAAiB;MAAAA,oDAAAA,8BAAsB;MAAAA,0DAAAA,EAAS;MAChDA,wDAAAA,gEAGS;MACbA,0DAAAA,EAAS;MAKrBA,4DAAAA,eAA0C;MASIA,oDAAAA,aAAK;MAAAA,0DAAAA,EAAK;MAChCA,4DAAAA,cAAuB;MAAAA,oDAAAA,eAAO;MAAAA,uDAAAA,UAAI;MAACA,oDAAAA,iBAAQ;MAAAA,0DAAAA,EAAK;MAChDA,4DAAAA,cAAuB;MAAAA,oDAAAA,kBAAU;MAAAA,0DAAAA,EAAK;MACtCA,4DAAAA,cAAuB;MAAAA,oDAAAA,gBAAQ;MAAAA,0DAAAA,EAAK;MACpCA,4DAAAA,cAAuB;MAAAA,oDAAAA,uBAAe;MAAAA,0DAAAA,EAAK;MAC3CA,4DAAAA,cAAuB;MAAAA,oDAAAA,oBAAY;MAAAA,uDAAAA,UAAI;MAACA,oDAAAA,iBAAQ;MAAAA,0DAAAA,EAAK;MACrDA,4DAAAA,cAAuB;MAAAA,oDAAAA,cAAM;MAAAA,0DAAAA,EAAK;MAClCA,4DAAAA,cAAuB;MAAAA,oDAAAA,oBAAY;MAAAA,uDAAAA,UAAI;MAACA,oDAAAA,gBAAO;MAAAA,0DAAAA,EAAK;MACpDA,wDAAAA,wDACK;MACTA,0DAAAA,EAAK;MAGTA,4DAAAA,aAAO;MACHA,wDAAAA,yDAuBK;;MACTA,0DAAAA,EAAQ;MAEZA,4DAAAA,+BACmE;MAA/DA,wDAAAA;QAAA;MAAA,EAAyB;QAAA;MAAA;MAC7BA,0DAAAA,EAAsB;MAUlDA,wDAAAA,kFAAAA,oEAAAA,CAuEc;MAEdA,wDAAAA,oFAAAA,oEAAAA,CA2Nc;;;MA7aFA,wDAAAA,sBAAiB;MASJA,uDAAAA,GAA8E;MAA9EA,wDAAAA,+FAA8E;MAO7DA,uDAAAA,GAAqC;MAArCA,wDAAAA,0CAAqC;MACzCA,uDAAAA,GAAsB;MAAtBA,wDAAAA,8BAAsB;MAkDOA,uDAAAA,IAAiB;MAAjBA,wDAAAA,+BAAiB;MA0BpBA,uDAAAA,IAA6C;MAA7CA,wDAAAA,6DAA6C;MAOnDA,uDAAAA,GAAgE;MAAhEA,wDAAAA,YAAAA,yDAAAA,yBAAAA,6DAAAA,kBAAgE;;;;;;;;;;;;;;;;;;;;;;;;;;ACnG3E;AACwB;AACT;AACI;AACb;AACS;;AAaxD,MAAO0O,gBAAgB;AAAhBA,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA;AAAgB;AAAhBA,gBAAgB;YARzBL,yDAAY,EACZ3O,gFAAuB,EACvB6O,+DAAmB,EACnBD,uDAAW,EACXE,+DAAmB,EACnBC,sEAAY;AAAA;;sHAGHC,gBAAgB;IAAAC,eAVZrP,uEAAmB;IAAAM,UAEhCyO,yDAAY,EACZ3O,gFAAuB,EACvB6O,+DAAmB,EACnBD,uDAAW,EACXE,+DAAmB,EACnBC,sEAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;ACd2C;;;AAKrD,MAAOI,iBAAiB;EAG5B5O,YAAoBE,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAGyO,4EAAkB;EAEY;EAExCxJ,uBAAuB,CAAC2J,GAAG;IACzB,OAAO,IAAI,CAAC5O,IAAI,CAACyC,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,mCAAmC,EAAEkM,GAAG,CAAC;EAChF;EAEAtJ,6BAA6B,CAACsJ,GAAG;IAC/B,OAAO,IAAI,CAAC5O,IAAI,CAACyC,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,mCAAmC,EAAEkM,GAAG,CAAC;EAChF;EAEA7H,sBAAsB,CAAC6H,GAAG;IACxB,OAAO,IAAI,CAAC5O,IAAI,CAACyC,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,sCAAsC,EAAEkM,GAAG,CAAC;EACnF;EAEAnE,SAAS,CAACmE,GAAG;IACX,OAAO,IAAI,CAAC5O,IAAI,CAACyC,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,sBAAsB,EAAEkM,GAAG,CAAC;EACnE;EAEAtC,4BAA4B,CAACsC,GAAG;IAC9B,OAAO,IAAI,CAAC5O,IAAI,CAACyC,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,4CAA4C,EAAEkM,GAAG,CAAC;EACzF;EAEA1B,iBAAiB,CAAC0B,GAAG;IACnB,OAAO,IAAI,CAAC5O,IAAI,CAACyC,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,mCAAmC,EAAEkM,GAAG,CAAC;EAChF;EAEA1F,iBAAiB,CAAC0F,GAAG;IACnB,OAAO,IAAI,CAAC5O,IAAI,CAACyC,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,8BAA8B,EAAEkM,GAAG,CAAC;EAC3E;EAEAjI,aAAa,CAACiI,GAAG;IACf,OAAO,IAAI,CAAC5O,IAAI,CAACyC,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,gBAAgB,EAAEkM,GAAG,CAAC;EAC7D;;AAnCWF,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAG,SAAjBH,iBAAiB;EAAAI,YAFhB;AAAM","sources":["./src/app/modules/ss-training/ss-training-routing.module.ts","./src/app/modules/ss-training/ss-training.component.ts","./src/app/modules/ss-training/ss-training.component.html","./src/app/modules/ss-training/ss-training.module.ts","./src/app/modules/ss-training/ss-training.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SsTrainingComponent } from './ss-training.component';\n\nconst routes: Routes = [{ path: '', component: SsTrainingComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SsTrainingRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpService } from '../core/http/http.service';\nimport { SidebarService } from '../shared/sidebar/sidebar.service';\nimport { SsTrainingService } from './ss-training.service';\nimport * as moment from 'moment';\nimport { ToastrService } from 'ngx-toastr';\nimport { ValidationService } from '../shared/services/validation.service';\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ss-training',\n  templateUrl: './ss-training.component.html',\n  styleUrls: ['./ss-training.component.css']\n})\nexport class SsTrainingComponent implements OnInit {\n  viewSSTrainingEventForm: UntypedFormGroup;\n  createSSTrainingEventForm: UntypedFormGroup;\n  regionList: Array<any> = [];\n  branchList: Array<any> = [];\n  villagesOfBranch: Array<any> = [];\n  regionBranchHide: boolean;\n  modalContent: any;\n  modalReference: any;\n  setFromDate: any;\n  setToDate: any;\n  durationValue: any;\n  regionID: any;\n  regionName: any;\n  branchName: any;\n  upperRoleBranchId: any;\n  lowerRoleBranchId: any;\n  ssEventList: Array<any> = [];\n  eventSSList: Array<any> = [];\n  ssList: Array<any> = [];\n  AllSSList: Array<any> = [];\n  ssTrainingType: Array<any> = [];\n  ssTrainingTopic: Array<any> = [];\n  ssTrainingDataPushPop = [];\n  allBranchID: Array<any> = [];\n  indexWiseSSLIST: any;\n  ssIndex: any;\n  checked: any;\n  checkedSS: Array<any> = [];\n  page = 1;\n  pageSize = 6;\n  p: any;\n  SSTrainingEditData: any;\n  staffList: Array<any> = [];\n  staffID: any;\n  createMode: boolean;\n  updateMode: boolean;\n  deleteMode: boolean;\n  approveMode: boolean;\n  searchFullscreen: boolean;\n  attendanceImage: Array<any> = [];\n  trainingEventID: any;\n  loader: boolean = false;\n\n  constructor(private fb: UntypedFormBuilder, private http: HttpClient, private sidebarService: SidebarService, private toaster: ToastrService,\n    private httpService: HttpService, private ssTrainingService: SsTrainingService, private modalService: NgbModal, config: NgbModalConfig,\n    private validationService: ValidationService, private confirmationDialogService: ConfirmationDialogService, private router: Router) {\n    config.backdrop = 'static';\n    config.keyboard = false;\n  }\n\n  ngDoCheck(): void {\n    this.searchFullscreen = this.validationService.val;\n  }\n\n  ngOnInit(): void {\n\n    this.createForm();\n\n    this.loader = false;\n    this.sidebarService.checkRoledetailDTO().then((res: any) => {\n      this.loader = true;\n      if (res.regionBranchHide) {\n        this.regionList = res.region;\n        this.loader = true;\n\n        this.regionBranchHide = res.regionBranchHide;\n\n      } else {\n        this.lowerRoleBranchId = res.branchId;\n        this.branchList = res.branchLIST;\n        this.branchName = res.branchName;\n        console.log(this.branchName, 'this.branchName');\n\n        this.allBranchID.push(this.lowerRoleBranchId);\n        console.log(this.lowerRoleBranchId, 'lowerRoleBranchId');\n\n        let dataAccessDTO = JSON.parse(localStorage.getItem('dataAccessDTO'));\n        let Dto = {\n          dataAccessDTO: {\n            userId: dataAccessDTO.userId,\n            userName: dataAccessDTO.userName,\n          },\n          branchId: this.lowerRoleBranchId\n        }\n        this.regionBranchHide = res.regionBranchHide;\n        this.http.post(`${this.sidebarService.baseURL}village/getVillagesOfABranch`, Dto).subscribe((res: any) => {\n          if (res.sessionDTO.status == true) {\n            this.villagesOfBranch = res.responseObject;\n            this.loader = true;\n          }\n        });\n\n        this.changeBranch(this.viewSSTrainingEventForm.value.branch ? this.viewSSTrainingEventForm.value.branch : this.lowerRoleBranchId);\n      }\n    });\n\n    this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionMasterId == 7)?.subMenuDetailList\n      .find(item => item.subFunctionMasterId == 212 || item.subFunctionMasterId == 213 || item.subFunctionMasterId == 214 || item.subFunctionMasterId == 215)?.accessDetailList\n      .find(accessType => accessType.accessType == 'view')?.accessType ? this.router.navigate(['/ss-training']) : this.router.navigate(['/error']);\n\n    this.createMode = this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionMasterId == 7)?.subMenuDetailList\n      .find(item => item.subFunctionMasterId == 212 || item.subFunctionMasterId == 213 || item.subFunctionMasterId == 214 || item.subFunctionMasterId == 215)?.accessDetailList\n      .find(accessType => accessType.accessType == 'create')?.accessType ? true : false;\n\n    this.updateMode = this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionMasterId == 7)?.subMenuDetailList\n      .find(item => item.subFunctionMasterId == 212 || item.subFunctionMasterId == 213 || item.subFunctionMasterId == 214 || item.subFunctionMasterId == 215)?.accessDetailList\n      .find(accessType => accessType.accessType == 'update')?.accessType ? true : false;\n\n    this.deleteMode = this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionMasterId == 7)?.subMenuDetailList\n      .find(item => item.subFunctionMasterId == 212 || item.subFunctionMasterId == 213 || item.subFunctionMasterId == 214 || item.subFunctionMasterId == 215)?.accessDetailList\n      .find(accessType => accessType.accessType == 'delete')?.accessType ? true : false;\n\n    this.approveMode = this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionMasterId == 7)?.subMenuDetailList\n      .find(item => item.subFunctionMasterId == 212 || item.subFunctionMasterId == 213 || item.subFunctionMasterId == 214 || item.subFunctionMasterId == 215)?.accessDetailList\n      .find(accessType => accessType.accessType == 'approve')?.accessType ? true : false;\n  }\n\n  createForm() {\n    this.viewSSTrainingEventForm = this.fb.group({\n      region: ['', Validators.required],\n      branch: ['', Validators.required],\n      filterStartDate: [''],\n      filterEndDate: [''],\n      filterTraining: ['']\n    });\n    this.typeAndTopicTrainingList();\n  }\n\n  get l() {\n    return this.viewSSTrainingEventForm.controls;\n  }\n\n  changeRegion(regionId) {\n    this.regionID = regionId; console.log(this.regionID);\n\n    this.regionName = this.regionList.find((reg) => reg.regionMasterId == this.regionID)?.regionName;\n    console.log(this.regionName, 'this.regionName');\n\n    let req = { dataAccessDTO: this.httpService.dataAccessDTO, regionId: this.regionID };\n\n    this.ssTrainingService.listOfBranchesOfARegion(req).subscribe((res) => {\n      this.branchList = res.responseObject;\n      this.branchList.forEach((item) => {\n        this.allBranchID.push(item.branchId)\n        console.log(this.allBranchID);\n      });\n    });\n\n    this.viewSSTrainingEventForm.controls.branch.setValue('');\n    this.viewSSTrainingEventForm.controls.filterStartDate.setValue('');\n    this.viewSSTrainingEventForm.controls.filterEndDate.setValue('');\n    this.viewSSTrainingEventForm.controls.filterTraining.setValue('');\n    this.ssEventList = [];\n    if (this.viewSSTrainingEventForm.value.region == '') {\n      this.viewSSTrainingEventForm.controls.branch.setValue('');\n      this.ssEventList = [];\n      this.branchList = [];\n    }\n  }\n\n  changeBranch(branchId) {\n    this.upperRoleBranchId = branchId;\n    let req = { dataAccessDTO: this.httpService.dataAccessDTO, branchId: branchId };\n\n    this.ssTrainingService.branchWiseSSTrainingEventList(req).subscribe((res) => {\n      this.ssEventList = res.responseObject.branchWiseSsTrainingEventList;\n      console.log(this.ssEventList, 'withoutfilterdata');\n      if (this.viewSSTrainingEventForm.value.filterTraining) {\n        this.ssEventList = this.ssEventList.filter((item) => item.training_type_master_id == this.trainingEventID)\n        console.log(this.ssEventList, 'filterdata');\n      }\n\n      if (this.viewSSTrainingEventForm.value.filterStartDate && this.viewSSTrainingEventForm.value.filterEndDate) {\n        this.ssEventList = this.ssEventList.filter(item => item.ss_training_event_start_date >= this.viewSSTrainingEventForm.value.filterStartDate);\n        console.log(this.ssEventList, 'ssEventListss_training_event_start_date');\n        this.ssEventList = this.ssEventList.filter(item => item.ss_training_event_end_date <= this.viewSSTrainingEventForm.value.filterEndDate);\n        console.log(this.ssEventList, 'ssEventListss_training_event_end_date');\n      }\n    });\n\n    this.branchName = this.branchList.find((item) => item.branchId == branchId)?.branchName\n    console.log(this.branchName, ' this.branchName');\n  }\n\n  filterListByTrainingType(trainingEventId) {\n    this.trainingEventID = trainingEventId;\n    this.changeBranch(this.viewSSTrainingEventForm.value.branch ? this.viewSSTrainingEventForm.value.branch : this.lowerRoleBranchId);\n  }\n\n  filterDateWiseSSTrainingList() {\n    console.log(this.viewSSTrainingEventForm.value.filterStartDate, 'filterStartDate');\n    console.log(this.viewSSTrainingEventForm.value.filterEndDate, 'filterEndDate');\n    this.changeBranch(this.viewSSTrainingEventForm.value.branch ? this.viewSSTrainingEventForm.value.branch : this.lowerRoleBranchId);\n  }\n\n  viewParticipantsDetails(detailsOfParticipants, event) {\n    this.eventSSList = event.ssList;\n    console.log(this.eventSSList, 'ssList', event);\n\n    this.modalContent = '';\n    this.modalReference = this.modalService.open(detailsOfParticipants, {\n      windowClass: 'detailsOfParticipants',\n    });\n\n    let imageReq = { dataAccessDTO: this.httpService.dataAccessDTO, training_event_master_id: event.training_event_master_id };\n    console.log(imageReq, 'imageReq');\n\n    this.ssTrainingService.imageOfAEvent(imageReq).subscribe((res) => {\n      this.attendanceImage = res.responseObject;\n      console.log(this.attendanceImage, 'attendanceImage');\n    });\n  }\n\n  detailsOfParticipantsModalDismiss() {\n    this.modalReference?.close();\n  }\n\n  typeAndTopicTrainingList() {\n    let req = { dataAccessDTO: this.httpService.dataAccessDTO };\n\n    this.ssTrainingService.ssTrainingTypeAndTopic(req).subscribe((res) => {\n      this.ssTrainingType = res.responseObject?.ssTrainingType;\n      this.ssTrainingTopic = res.responseObject?.ssTrainingTopic;\n      console.log(this.ssTrainingType, ' this.ssTrainingType');\n      console.log(this.ssTrainingTopic, ' this.ssTrainingTopic');\n    });\n  }\n\n  createSSTrainingEvents(SSTraining) {\n    console.log(this.SSTrainingEditData, 'SSTrainingEditData');\n    console.log(this.lowerRoleBranchId, 'lowerRoleBranchId');\n    console.log(this.upperRoleBranchId, 'upperRoleBranchId');\n    console.log(this.regionID, 'regionID');\n    console.log(this.regionName, 'this.regionName');\n    // setTimeout(() => {\n    this.modalContent = '';\n    this.modalReference = this.modalService.open(SSTraining, {\n      windowClass: 'SSTraining',\n    });\n    // }, 1000);\n    this.ssTrainingFormModal();\n    this.createSSTrainingEventForm.controls['duration'].disable();\n    if (!this.createSSTrainingEventForm.value.trainingType) {\n      this.createSSTrainingEventForm.controls['fromDate'].disable();\n      this.createSSTrainingEventForm.controls['toDate'].disable();\n      this.createSSTrainingEventForm.controls['ssbranch'].disable();\n      this.createSSTrainingEventForm.controls['participantType'].disable();\n      this.createSSTrainingEventForm.controls['staff'].disable();\n    }\n\n  }\n\n  editSSTrainingEvents(event, SSTraining) {\n    this.SSTrainingEditData = event;\n    console.log(this.SSTrainingEditData, 'SSTrainingEditData');\n    let today = new Date().toISOString().slice(0, 10);\n    console.log(today);\n\n    if (event.ss_training_event_start_date > today) {\n      this.createSSTrainingEvents(SSTraining);\n    } else {\n      this.ssTrainingModalDismiss();\n      this.showError('Event is not available for edit');\n      return;\n    }\n\n  }\n\n  ssTrainingFormModal() {\n    var data = this.SSTrainingEditData;\n    console.log(data, 'data');\n\n    this.createSSTrainingEventForm = this.fb.group({\n      trainingType: [data?.training_type_master_id ? data?.training_type_master_id : '', Validators.required],\n      duration: [''],\n      fromDate: ['', Validators.required],\n      toDate: [''],\n      trainername: [data?.trainer_name ? data?.trainer_name : ''],\n      trainerdesignation: [data?.trainer_designation ? data?.trainer_designation : ''],\n      trainingtopic: ['', Validators.required],\n      ssbranch: [this.upperRoleBranchId ? this.upperRoleBranchId : this.lowerRoleBranchId, Validators.required],\n      participantType: ['fresh', Validators.required],\n      staff: ['']\n    });\n    this.createSSTrainingEventForm.markAllAsTouched();\n\n    if (data) {\n      this.changeTrainingType(data?.training_type_master_id);\n      this.createSSTrainingEventForm.controls['toDate'].disable();\n      this.createSSTrainingEventForm.controls.fromDate.setValue(data?.ss_training_event_start_date);\n      this.expectToDate(data?.ss_training_event_start_date);\n      this.createSSTrainingEventForm.controls.trainingtopic.setValue(data?.ss_training_event_topic_master_id);\n    }\n    this.branchWiseStaffList();\n  }\n\n  branchWiseStaffList() {\n\n    let hcoreq = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      branchId: this.createSSTrainingEventForm.value.ssbranch\n    }\n    console.log(hcoreq, 'hcoreq');\n\n    this.ssTrainingService.staffListOfBranch(hcoreq).subscribe((res: any) => {\n      this.staffList = res.responseObject;\n      console.log(this.staffList, 'staffList');\n    });\n  }\n\n  get t() {\n    return this.createSSTrainingEventForm.controls;\n  }\n\n  getMinDate() {\n    let today = new Date().toISOString().slice(0, 10);\n    this.setFromDate = moment(today).add(1, \"days\").format(\"YYYY-MM-DD\");\n  }\n\n  expectToDate(e) {\n    console.log(this.durationValue, 'this.durationValue');\n    var mydate = new Date(e);\n    if (mydate.getDay() == 0) {\n      this.showError('Sunday not allowed');\n      this.createSSTrainingEventForm.controls.fromDate.setValue('');\n      this.createSSTrainingEventForm.controls.toDate.setValue('');\n      return;\n    }\n\n    if (this.createSSTrainingEventForm.value.trainingType == 2) {\n      this.setToDate = this.createSSTrainingEventForm.value.fromDate;\n      this.createSSTrainingEventForm.controls.toDate.setValue(this.setToDate);\n      this.createSSTrainingEventForm.value.toDate = this.setToDate;\n      console.log(this.setToDate, 'ifcondition');\n    } else {\n      e = new Date(e?.replace(/-/g, \"/\"));\n      var endDate: any, noOfDaysToAdd = (this.durationValue - 1), count = 0;\n      while (count < noOfDaysToAdd) {\n        endDate = new Date(e.setDate(e.getDate() + 1));\n        if (endDate.getDay() != 0) {\n          count++;\n        }\n      }\n      this.setToDate = moment(endDate).format(\"YYYY-MM-DD\");\n      this.createSSTrainingEventForm.controls.toDate.setValue(this.setToDate);\n      this.createSSTrainingEventForm.value.toDate = this.setToDate;\n      console.log(this.setToDate, 'elsecondition');\n    }\n  }\n\n  changeTrainingType(e) {\n\n    this.getMinDate();\n    this.createSSTrainingEventForm.controls.participantType.setValue('fresh');\n    this.createSSTrainingEventForm.controls.trainingtopic.setValue('');\n\n    if (e == 1) {\n      this.createSSTrainingEventForm.controls.duration.setValue(6);\n      this.createSSTrainingEventForm.value.duration = 6;\n      this.durationValue = this.createSSTrainingEventForm.value.duration;\n      this.changeparticipantType('fresh', this.staffID);\n      this.createSSTrainingEventForm.controls['ssbranch'].enable();\n      this.createSSTrainingEventForm.controls['participantType'].enable();\n      this.createSSTrainingEventForm.controls['staff'].enable();\n    } else if (e == 2) {\n      this.createSSTrainingEventForm.controls.duration.setValue(1);\n      this.createSSTrainingEventForm.value.duration = 1;\n      this.durationValue = this.createSSTrainingEventForm.value.duration;\n      this.changeparticipantType('fresh', this.staffID);\n      this.createSSTrainingEventForm.controls['ssbranch'].enable();\n      this.createSSTrainingEventForm.controls['participantType'].enable();\n      this.createSSTrainingEventForm.controls['staff'].enable();\n    } else if (e == 3) {\n      this.createSSTrainingEventForm.controls.duration.setValue(2);\n      this.createSSTrainingEventForm.value.duration = 2;\n      this.durationValue = this.createSSTrainingEventForm.value.duration;\n      this.changeparticipantType('fresh', this.staffID);\n      this.createSSTrainingEventForm.controls['ssbranch'].enable();\n      this.createSSTrainingEventForm.controls['participantType'].disable();\n      this.createSSTrainingEventForm.controls['staff'].enable();\n    } else if (e == 4) {\n      this.createSSTrainingEventForm.controls.duration.setValue(2);\n      this.createSSTrainingEventForm.value.duration = 2;\n      this.durationValue = this.createSSTrainingEventForm.value.duration;\n      this.changeparticipantType('fresh', this.staffID)\n      this.createSSTrainingEventForm.controls['ssbranch'].enable();\n      this.createSSTrainingEventForm.controls['participantType'].disable();\n      this.createSSTrainingEventForm.controls['staff'].enable();\n    } else {\n      this.ssList = [];\n      this.createSSTrainingEventForm.controls['ssbranch'].disable();\n      this.createSSTrainingEventForm.controls['participantType'].disable();\n      this.createSSTrainingEventForm.controls['staff'].disable();\n    }\n\n    console.log(this.createSSTrainingEventForm.value.duration, 'formdurationvalue');\n    console.log(this.durationValue, 'vardurationvalue');\n    this.createSSTrainingEventForm.controls.fromDate.setValue('');\n    this.createSSTrainingEventForm.controls.toDate.setValue('');\n    if (this.createSSTrainingEventForm.value.trainingType) {\n      this.createSSTrainingEventForm.controls['fromDate'].enable();\n    } else {\n      this.createSSTrainingEventForm.controls['fromDate'].disable();\n      this.createSSTrainingEventForm.controls.duration.setValue('');\n      this.createSSTrainingEventForm.controls.fromDate.setValue('');\n      this.createSSTrainingEventForm.controls.toDate.setValue('');\n    }\n\n  }\n\n  changeparticipantType(participantType, staffID) {\n    console.log(participantType);\n    console.log(this.allBranchID, 'this.allBranchIDthis.allBranchID');\n\n    let ssListObj = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      branchId: this.allBranchID,\n      trainingTypeMasterId: this.createSSTrainingEventForm.value.trainingType,\n      training_event_master_id: this.SSTrainingEditData?.training_event_master_id ? this.SSTrainingEditData?.training_event_master_id : 0,\n    }\n\n    this.ssTrainingService.getSSList(ssListObj).subscribe((res: any) => {\n      this.AllSSList = res.responseObject;\n      this.AllSSList = this.AllSSList?.map(({\n        isChecked = false,\n        ...rest\n      }) => ({\n        isChecked,\n        ...rest\n      }));\n      this.ssList = this.AllSSList;\n      console.log(this.ssList, 'this.AllSSList');\n\n      if (this.SSTrainingEditData) {\n        this.ssList?.forEach((item) => {\n          if (this.SSTrainingEditData?.ssList?.find(it => it.swasthya_sahayika_id == item.swasthya_sahayika_id)) {\n            item.isChecked = true\n          }\n        });\n      }\n\n      console.log(this.ssList, 'this.ssList');\n      console.log(this.lowerRoleBranchId, \"lowerRoleBranchId\");\n      console.log(this.upperRoleBranchId, \"upperRoleBranchId\");\n\n\n      this.ssList = this.ssList?.filter((item) => item.branch_id == this.upperRoleBranchId ? this.upperRoleBranchId : this.lowerRoleBranchId);\n      console.log(this.ssList, 'this.specificSSList');\n\n      if (this.createSSTrainingEventForm.value.trainingType == 1 || this.createSSTrainingEventForm.value.trainingType == 2) {\n        if (participantType == 'fresh') {\n          this.ssList = this.ssList?.filter((item) => item.status == 'fresh');\n          console.log(this.ssList, ' freshSSList');\n        } else if (participantType == 'absent') {\n          this.ssList = this.ssList?.filter((item) => item.status != 'fresh');\n          console.log(this.ssList, 'absentSSList');\n        }\n        else {\n          this.ssList = [];\n        }\n      }\n\n    });\n\n  }\n\n  filterSSList(participantType) {\n    this.createSSTrainingEventForm.controls.staff.setValue('');\n    this.ssList = this.AllSSList;\n    console.log(this.ssList, 'this.ssList');\n    console.log(this.upperRoleBranchId, 'this.upperRoleBranchId ');\n    console.log(this.lowerRoleBranchId, 'this.lowerRoleBranchId');\n\n\n    this.ssList = this.ssList.filter((item) => item.branch_id == this.upperRoleBranchId ? this.upperRoleBranchId : this.lowerRoleBranchId);\n    console.log(this.ssList, 'this.specificSSList');\n\n    if (this.createSSTrainingEventForm.value.trainingType == 1 || this.createSSTrainingEventForm.value.trainingType == 2) {\n      if (participantType == 'fresh') {\n        this.ssList = this.ssList.filter((item) => item.status == 'fresh');\n        console.log(this.ssList, ' freshSSList');\n      } else if (participantType == 'absent') {\n        this.ssList = this.ssList.filter((item) => item.status != 'fresh');\n        console.log(this.ssList, 'absentSSList');\n      }\n      else {\n        this.ssList = [];\n      }\n\n    }\n  }\n\n  changessbranch(e) {\n    if (!this.lowerRoleBranchId) {\n      this.upperRoleBranchId = e;\n    } else {\n      this.lowerRoleBranchId = e;\n    }\n    this.filterSSList('fresh');\n    this.createSSTrainingEventForm.controls.participantType.setValue('fresh');\n    this.createSSTrainingEventForm.controls.staff.setValue('');\n    if (this.checked) {\n      this.selectSSForTraining(this.indexWiseSSLIST, this.ssIndex, this.checked);\n    }\n\n    this.branchWiseStaffList();\n  }\n\n  selectSSForTraining(SSLIST, index, e) {\n    this.indexWiseSSLIST = SSLIST;\n    console.log(this.indexWiseSSLIST);\n\n    this.ssIndex = index;\n    this.checked = e;\n\n    if (this.checked == true) {\n      this.AllSSList.find(list => list.swasthya_sahayika_id == this.indexWiseSSLIST?.swasthya_sahayika_id).isChecked = true;\n      console.log(this.AllSSList, 'ALLSSLIST');\n    } else {\n      this.AllSSList.find(list => list.swasthya_sahayika_id == this.indexWiseSSLIST?.swasthya_sahayika_id).isChecked = false;\n      console.log(this.AllSSList, 'ALLSSLIST');\n    }\n\n  }\n\n  disabledSaveTrainingForm() {\n    let flag = true;\n    if (!this.createSSTrainingEventForm.value.trainingType || !this.createSSTrainingEventForm.value.fromDate) {\n      flag = false;\n    }\n    if (this.createSSTrainingEventForm.value.trainingType == 3) {\n      if (!this.createSSTrainingEventForm.value.trainingtopic) {\n        flag = false;\n      }\n    }\n\n    var check = [];\n    check = this.AllSSList?.filter(item => item.isChecked == true);\n    if (check?.length == 0) {\n      flag = false;\n    }\n    return flag;\n  }\n\n  saveSSTrainingForm() {\n\n    this.ssTrainingDataPushPop = [];\n    this.checkedSS = this.AllSSList?.filter(item => item.isChecked == true);\n    this.checkedSS.forEach((item => {\n      this.checkedSS = item.swasthya_sahayika_id;\n      console.log(this.checkedSS, 'checkedSS');\n      this.ssTrainingDataPushPop.push(this.checkedSS);\n      console.log(this.ssTrainingDataPushPop);\n    }));\n\n    var ssSaveObj = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      training_event_master_id: this.SSTrainingEditData?.training_event_master_id ? this.SSTrainingEditData?.training_event_master_id : 0,\n      active_flag: this.SSTrainingEditData ? 'A' : 'UA',\n      ss_training_event_type: this.createSSTrainingEventForm?.value.trainingType,\n      ss_training_event_topic_master_id: this.createSSTrainingEventForm?.value.trainingtopic ?\n        this.createSSTrainingEventForm?.value.trainingtopic : 0,\n      ss_training_event_start_date: this.createSSTrainingEventForm.value.fromDate,\n      ss_training_event_end_date: this.setToDate,\n      trainer_name: this.validationService.camelize(this.createSSTrainingEventForm.value.trainername.trim()),\n      trainer_designation: this.validationService.camelize(this.createSSTrainingEventForm.value.trainerdesignation.trim()),\n      branchId: this.viewSSTrainingEventForm.value.branch ? this.viewSSTrainingEventForm.value.branch : this.lowerRoleBranchId,\n      ssList: this.ssTrainingDataPushPop\n    }\n\n    console.log(ssSaveObj, 'ssSaveObj');\n\n    this.ssTrainingService.createUpdateDeleteSSTraining(ssSaveObj).subscribe((res: any) => {\n      console.log(res);\n      if (res.status == true) {\n        this.showSuccess(res.message);\n        this.ssTrainingModalDismiss();\n        this.changeBranch(this.viewSSTrainingEventForm.value.branch ? this.viewSSTrainingEventForm.value.branch : this.lowerRoleBranchId);\n      } else {\n        this.showError(res.message);\n      }\n\n    })\n\n  }\n\n  ssTrainingModalDismiss() {\n    console.log(this.SSTrainingEditData?.training_event_master_id, 'training_event_master_id');\n    var ID = this.SSTrainingEditData?.training_event_master_id;\n\n    if (ID) {\n      this.SSTrainingEditData = [];\n      ID = 0;\n      this.modalReference?.close();\n    }\n    else {\n      this.modalReference?.close();\n      this.ssList = [];\n      this.ssTrainingDataPushPop = [];\n    }\n  }\n\n  deleteSSTrainingEvents(event) {\n    let today = new Date().toISOString().slice(0, 10);\n    console.log(today);\n\n    if ((event.ss_training_event_start_date > today) && event.status == 'Unapproved') {\n      this.confirmationDialogService.confirm('', 'Are you sure you want to delete ss training record ?')\n        .then(() => this.delete(event)\n        )\n        .catch(() => '');\n    } else {\n      this.showError('Event is not available for delete');\n      return;\n    }\n  }\n\n  delete(event) {\n    var ssDeleteObj = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      training_event_master_id: event?.training_event_master_id,\n      active_flag: 'D',\n      ss_training_event_type: event?.training_type_master_id,\n      ss_training_event_topic_master_id: event?.ss_training_event_topic_master_id,\n      ss_training_event_start_date: event?.ss_training_event_start_date,\n      ss_training_event_end_date: event?.ss_training_event_end_date,\n      trainer_name: event?.trainer_name,\n      trainer_designation: event?.trainer_designation,\n      branchId: this.viewSSTrainingEventForm.value.branch ? this.viewSSTrainingEventForm.value.branch : this.lowerRoleBranchId,\n      ssList: event?.ssList\n    }\n\n    console.log(ssDeleteObj);\n\n    this.ssTrainingService.createUpdateDeleteSSTraining(ssDeleteObj).subscribe((res: any) => {\n      console.log(res);\n      if (res.status == true) {\n        this.showSuccess(res.message);\n        this.changeBranch(this.viewSSTrainingEventForm.value.branch ? this.viewSSTrainingEventForm.value.branch : this.lowerRoleBranchId);\n      } else {\n        this.showError(res.message);\n      }\n\n    })\n\n  }\n\n  approveSSTrainingEvents(event) {\n    let today = new Date().toISOString().slice(0, 10);\n    console.log(today);\n\n    if ((event.ss_training_event_start_date >= today) && event.status == 'Unapproved') {\n      this.confirmationDialogService.confirm('', 'Are you sure you want to approve ss training record ?')\n        .then(() => this.approveSS(event)\n        )\n        .catch(() => '');\n    } else {\n      this.showError('Event is not available for approve');\n      return;\n    }\n\n  }\n\n  approveSS(event) {\n    var ssTrainingObj = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      training_event_master_id: event.training_event_master_id\n    }\n\n    console.log(ssTrainingObj);\n    this.ssTrainingService.approveSSTraining(ssTrainingObj).subscribe((res: any) => {\n      console.log(res);\n      if (res.status == true) {\n        this.showSuccess(res.message);\n        this.changeBranch(this.viewSSTrainingEventForm.value.branch ? this.viewSSTrainingEventForm.value.branch : this.lowerRoleBranchId);\n      } else {\n        this.showError(res.message);\n      }\n\n    });\n  }\n\n  changestaff(staffid) {\n    this.staffID = staffid;\n    this.changeparticipantTypeBySSName(this.staffID)\n  }\n\n  changeparticipantTypeBySSName(staffID) {\n    this.ssList = this.AllSSList;\n    if (this.createSSTrainingEventForm.value.participantType == 'fresh') {\n      this.ssList = this.ssList.filter(v => v.status == 'fresh')\n    } else {\n      this.ssList = this.ssList.filter(v => v.status != 'fresh')\n    }\n\n    if (staffID == 'viewall') {\n      this.ssList;\n    } else if (staffID == 'nouser') {\n      this.ssList = this.ssList.filter(v => v.user_id == null);\n    } else {\n      this.ssList = this.ssList.filter(v => v.user_id == staffID);\n    }\n  }\n\n  showSuccess(message) {\n    this.toaster.success(message, 'SS Training Event', {\n      timeOut: 3000,\n    });\n  }\n\n  showError(message) {\n    this.toaster.error(message, 'SS Training Event', {\n      timeOut: 3000,\n    });\n  }\n\n  restrictTypeOfDate() { return false }\n}\n","<app-loader [hidden]=\"loader\"></app-loader>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"white_box QA_section mb_30\">\n\n                <div id=\"header-fixed\" style=\"display: flex;\">\n                    <h2 class=\"page-title\">SS Training Events</h2>\n                    <div class=\"form-group col-md\" style=\"display: flex; justify-content:flex-end\"\n                        *ngIf=\"(viewSSTrainingEventForm.value.branch || lowerRoleBranchId)&& createMode\">\n                        <i class=\"fas fa-plus-circle\" style=\"cursor: pointer\"\n                            (click)=\"createSSTrainingEvents(SSTraining)\">&nbsp;Schedule SS\n                            Training Event</i>\n                    </div>\n                </div>\n\n                <form class=\"form-signin\" [formGroup]=\"viewSSTrainingEventForm\">\n                    <div class=\"row\" *ngIf=\"regionBranchHide\">\n                        <div class=\"form-group col-md\">\n                            <label for=\"region\">Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeRegion($event.target.value)\"\n                                formControlName=\"region\" id=\"region\" [ngClass]=\"{'is-invalid': l.region.invalid && l.region.touched,\n                              'is-valid': l.region.valid && (l.region.dirty || l.region.touched) }\">\n                                <option value=\"\">-- Select Region --</option>\n                                <option *ngFor=\"let region of regionList\" value=\"{{region.regionMasterId}}\">\n                                    {{region.regionName}}\n                                </option>\n                            </select>\n                            <div *ngIf=\"l.region.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"l.region.errors.required\">Region selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"branch\">Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBranch($event.target.value)\"\n                                formControlName=\"branch\" id=\"branch\" [ngClass]=\"{ 'is-invalid': l.branch.invalid && l.branch.touched,\n                              'is-valid': l.branch.valid && (l.branch.dirty || l.branch.touched) }\">\n                                <option value=\"\">-- Select Branch --</option>\n                                <option *ngFor=\"let branch of branchList\" value=\"{{branch.branchId}}\">\n                                    {{ branch.branchName }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"l.branch.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"l.branch.errors.required\">Branch selection is required</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\">\n                            <label for=\"filterStartDate\">Start Date :</label>\n                            <input type=\"date\" class=\"form-control\" formControlName=\"filterStartDate\"\n                                (change)=\"filterDateWiseSSTrainingList()\">\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"filterEndDate\">End Date :</label>\n                            <input type=\"date\" class=\"form-control\" formControlName=\"filterEndDate\"\n                                (change)=\"filterDateWiseSSTrainingList()\">\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"filterTraining\">Filter By Training Type :</label>\n                            <select class=\"form-select\" formControlName=\"filterTraining\" id=\"filterTraining\"\n                                (change)=\"filterListByTrainingType($event.target.value)\">\n                                <option value=\"\">-- Type Of Training --</option>\n                                <option *ngFor=\"let filterTraining of ssTrainingType\"\n                                    value=\"{{filterTraining.training_type_master_id}}\">\n                                    {{filterTraining.training_type_name}}\n                                </option>\n                            </select>\n                        </div>\n                    </div>\n                </form>\n\n                <div class=\"white_box_tittle list_header\">\n\n                    <div class=\"QA_table \">\n                        <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                            <table\n                                class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                                role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed\">\n                                <thead id=\"header-fixed\">\n                                    <tr>\n                                        <th style=\"width:8%;\">SL No</th>\n                                        <th style=\"width:25%;\">Type of<br> Training</th>\n                                        <th style=\"width:20%;\">Start Date</th>\n                                        <th style=\"width:20%;\">End Date</th>\n                                        <th style=\"width:20%;\">SS Participated</th>\n                                        <th style=\"width:20%;\">SS Completed<br> Training</th>\n                                        <th style=\"width:25%;\">Status</th>\n                                        <th style=\"width:20%;\">Participants<br> Details</th>\n                                        <th style=\"width:20%;\" *ngIf=\"updateMode || deleteMode || approveMode\">Action\n                                        </th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    <tr\n                                        *ngFor=\"let event of ssEventList | paginate: { itemsPerPage: 5, currentPage: p }; index as i\">\n                                        <td style=\"width:8%;\">{{i+1}}</td>\n                                        <td style=\"width:25%;\">{{event.training_type_name}}</td>\n                                        <td style=\"width:20%;\">\n                                            {{event.ss_training_event_start_date.split(\"-\").reverse().join(\"-\")}}</td>\n                                        <td style=\"width:20%;\">\n                                            {{event.ss_training_event_end_date.split(\"-\").reverse().join(\"-\")}}</td>\n                                        <td style=\"width:20%;\">{{event.ssCount}}</td>\n                                        <td style=\"width:20%;\">{{event.ssCompletedTraining}}</td>\n                                        <td style=\"width:25%;\">{{event.status}} </td>\n                                        <td style=\"width:20%;\"\n                                            (click)=\"viewParticipantsDetails(detailsOfParticipants, event)\"\n                                            style=\"cursor: pointer; color: blue;\">View</td>\n                                        <td style=\"width: 20%;\" *ngIf=\"updateMode || deleteMode || approveMode\">\n                                            <i class=\"fas fa-edit\" title=\"Edit SS Training Event\"\n                                                (click)=\"editSSTrainingEvents(event, SSTraining)\" *ngIf=\"updateMode\">\n                                            </i>\n                                            <i class=\"fas fa-trash\" title=\"Delete SS Training Event\"\n                                                (click)=\"deleteSSTrainingEvents(event)\" *ngIf=\"deleteMode\"></i>\n                                            <i class=\"fas fa-check-circle\" title=\"Approve SS Training Event\"\n                                                (click)=\"approveSSTrainingEvents(event)\" *ngIf=\"approveMode\"></i>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <pagination-controls class=\"d-flex justify-content-end p-1 current ngx-pagination1\"\n                                (pageChange)=\"p = $event\" (pageBoundsCorrection)=\"p = $event \">\n                            </pagination-controls>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #detailsOfParticipants>\n\n    <div class=\"modal-content\">\n        <div class=\"modal-header\">\n            <div class=\"row\">\n                <div class=\"col-md\">\n                    <h3 class=\"modal-title\" id=\"modal-basic-title\">Participants Details</h3>\n                </div>\n                <div class=\"col-md\">\n                    <span class=\"close\" (click)=\"detailsOfParticipantsModalDismiss()\"\n                        style=\"cursor: pointer;font-size: 35px;\">&times;</span>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"modal-body\">\n            <div class=\"white_box_tittle list_header\">\n\n                <div class=\"QA_table \">\n                    <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                        <table\n                            class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                            role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed\">\n\n                            <thead id=\"header-fixed\">\n                                <tr>\n                                    <th style=\"width:5%;\">SL No</th>\n                                    <th style=\"width:30%;\">SS Name</th>\n                                    <th style=\"width:20%;\">Branch</th>\n                                    <th style=\"width:25%;\">Village</th>\n                                    <th style=\"width:25%;\">Staff In Charge</th>\n                                    <th style=\"width:10%;\">Attendance</th>\n                                    <th style=\"width:20%;\">Status</th>\n                                </tr>\n                            </thead>\n\n                            <tbody style=\"text-align: center;\">\n                                <tr *ngFor=\"let eventSS of eventSSList; index as i\">\n                                    <td style=\"width:5%;\">{{i+1}}</td>\n                                    <td style=\"width:30%;\">{{eventSS.swasthya_sahayika_name}}</td>\n                                    <td style=\"width:20%;\">{{eventSS.branch_name}}</td>\n                                    <td style=\"width:25%;\">{{eventSS.village_name}}</td>\n                                    <td style=\"width:25%;\">{{eventSS.user_firstname ? eventSS.user_firstname : '-'}}\n                                        {{eventSS.user_middlename}}\n                                        {{eventSS.user_lastname}}\n                                    </td>\n                                    <td style=\"width:10%;\">{{eventSS.countAttendance ? eventSS.countAttendance : '-'}}\n                                    </td>\n                                    <td style=\"width:20%;\">{{eventSS.status ? eventSS.status : '-'}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n        <h3 class=\"modal-title\" style=\"margin-left:20px;\" *ngIf=\"attendanceImage.length != 0\">Event Captured Images :\n        </h3>\n        <div class=\"row\">\n            <div class=\"col-md\" *ngFor=\"let attendance of attendanceImage; index as i\">\n                <a href=\"{{attendance.ss_training_attendance_page_image_url}}\" target=\"_blank\">\n                    <img src=\"{{attendance.ss_training_attendance_page_image_url}}\">\n                    <h4 style=\"margin-left:100px ;\">Page : {{attendance.ss_training_event_attendance_page_no}}</h4>\n                </a>\n            </div>\n        </div>\n\n    </div>\n\n</ng-template>\n\n<ng-template #SSTraining>\n\n    <div class=\"modal-content\">\n        <div class=\"modal-header\">\n            <div class=\"row\">\n                <div class=\"col-md\">\n                    <h3 class=\"modal-title\" id=\"modal-basic-title\"\n                        *ngIf=\"!SSTrainingEditData?.training_event_master_id\">Create SS Training</h3>\n                    <h3 class=\"modal-title\" id=\"modal-basic-title\" *ngIf=\"SSTrainingEditData?.training_event_master_id\">\n                        Edit SS Training</h3>\n                    <h3 style=\"margin-left: 410px;\n                        margin-top: -49px;\" *ngIf=\"!lowerRoleBranchId\">Region Name:&nbsp;&nbsp;{{regionName ?\n                        regionName :'NA'}}</h3>\n                    <h3 style=\"margin-left: 410px;\n                          margin-top: -49px;\" *ngIf=\"lowerRoleBranchId\">Branch Name:&nbsp;&nbsp;{{branchName ?\n                        branchName :'NA'}}</h3>\n                    <h3 style=\"margin-left:411px;\" *ngIf=\"!lowerRoleBranchId\">Branch Name:&nbsp;&nbsp;{{branchName ?\n                        branchName :'NA'}}</h3>\n                </div>\n            </div>\n\n            <div class=\"col-md\">\n                <span (click)=\"ssTrainingModalDismiss()\"\n                    style=\"float: right;cursor: pointer; font-size: 35px; margin-bottom: 60px;\"\n                    *ngIf=\"!lowerRoleBranchId\">&times;</span>\n                <span (click)=\"ssTrainingModalDismiss()\"\n                    style=\"float: right;cursor: pointer; font-size: 35px; margin-bottom: 22px;\"\n                    *ngIf=\"lowerRoleBranchId\">&times;</span>\n            </div>\n\n        </div>\n\n        <div class=\"modal-body\">\n            <form class=\"form-signin\" [formGroup]=\"createSSTrainingEventForm\">\n                <div class=\"row\">\n                    <div class=\"form-group col-md\">\n                        <label for=\"trainingType\">Type of Training:&nbsp;<span\n                                class=\"text-danger\">*&nbsp;</span></label>\n                        <select class=\"form-select\" formControlName=\"trainingType\" id=\"trainingType\" [ngClass]=\"{'is-invalid':\n                         t.trainingType.invalid && t.trainingType.touched,\n                          'is-valid': t.trainingType.valid && (t.trainingType.dirty || t.trainingType.touched) }\"\n                            (change)=\"changeTrainingType($event.target.value)\">\n                            <option value=\"\">-- Select Training Type --</option>\n                            <option *ngFor=\"let trainingType of ssTrainingType\"\n                                value=\"{{trainingType.training_type_master_id}}\">\n                                {{trainingType.training_type_name}}\n                            </option>\n                        </select>\n                        <div *ngIf=\"t.trainingType.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"t.trainingType.errors.required\">Type Of Training selection is required</div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group col-md\">\n                        <label for=\"duration\">Duration:</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Training Duration\"\n                            formControlName=\"duration\">\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"form-group col-md\">\n                        <label for=\"fromDate\">From Date:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"fromDate\"\n                            (keydown)=\"restrictTypeOfDate()\" [min]=\"setFromDate\"\n                            (change)=\"expectToDate($event.target.value)\"\n                            [ngClass]=\"{'is-invalid': t.fromDate.invalid &&\n                             t.fromDate.touched, 'is-valid': t.fromDate.valid && (t.fromDate.dirty || t.fromDate.touched) }\">\n                        <div *ngIf=\"t.fromDate.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"t.fromDate.errors.required\">From Date selection is required</div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group col-md\">\n                        <label for=\"toDate\">To Date:</label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"toDate\" [min]=\"setToDate\">\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"form-group col-md\">\n                        <label for=\"trainername\">Trainer Name:</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Trainer Name\" formControlName=\"trainername\"\n                            maxlength=\"45\" (keypress)=\"validationService.onlyAlphabetsAndSpace($event)\"\n                            style=\"text-transform: capitalize\">\n                    </div>\n\n                    <div class=\"form-group col-md\">\n                        <label for=\"trainerdesignation\">Trainer Designation:</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Trainer Designation\"\n                            formControlName=\"trainerdesignation\" maxlength=\"45\"\n                            (keypress)=\"validationService.onlyAlphabetsAndSpace($event)\"\n                            style=\"text-transform: capitalize\">\n                    </div>\n\n                    <div class=\"form-group col-md\" *ngIf=\"createSSTrainingEventForm.value.trainingType== 3\">\n                        <label for=\"trainingtopic\">Topic of Training :&nbsp;<span\n                                class=\"text-danger\">*&nbsp;</span></label>\n                        <select class=\"form-select\" formControlName=\"trainingtopic\" id=\"trainingtopic\" [ngClass]=\"{'is-invalid': t.trainingtopic.invalid && t.trainingtopic.touched,\n                          'is-valid': t.trainingtopic.valid && (t.trainingtopic.dirty || t.trainingtopic.touched) }\">\n                            <option value=\"\">-- Select Training Topic --</option>\n                            <option *ngFor=\"let trainingtopic of ssTrainingTopic\"\n                                value=\"{{trainingtopic.ss_training_event_topic_id}}\">\n                                {{trainingtopic.ss_training_event_topic_name}}\n                            </option>\n                        </select>\n                        <div *ngIf=\"t.trainingtopic.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"t.trainingtopic.errors.required\">Topic of Training selection is required</div>\n                        </div>\n                    </div>\n                </div>\n\n                <fieldset class=\"scheduler-border\">\n                    <legend class=\"scheduler-border\">ADD SS</legend>\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\">\n                            <label for=\"ssbranch\">Branch:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changessbranch($event.target.value)\"\n                                formControlName=\"ssbranch\" id=\"ssbranch\" [ngClass]=\"{ 'is-invalid': t.ssbranch.invalid && t.ssbranch.touched,\n                          'is-valid': t.ssbranch.valid && (t.ssbranch.dirty || t.ssbranch.touched) }\"\n                                style=\"width: 99%;\">\n                                <option value=\"\">-- Select Branch --</option>\n                                <option *ngFor=\"let branch of branchList\" value=\"{{branch.branchId}}\">\n                                    {{ branch.branchName }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"t.ssbranch.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"t.ssbranch.errors.required\">Branch selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\"\n                            *ngIf=\"createSSTrainingEventForm.value.trainingType== 1||createSSTrainingEventForm.value.trainingType== 2 \">\n                            <label for=\"participantType\">Participant Type:&nbsp;<span\n                                    class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"filterSSList($event.target.value)\"\n                                formControlName=\"participantType\" id=\"participantType\"\n                                [ngClass]=\"{ 'is-invalid': t.participantType.invalid && t.participantType.touched,\n                          'is-valid': t.participantType.valid && (t.participantType.dirty || t.participantType.touched) }\" style=\"width: 100%;\">\n                                <option value=\"\">-- Select Participant --</option>\n                                <option value=\"fresh\">New SS</option>\n                                <option value=\"absent\">Absent SS</option>\n                            </select>\n                            <div *ngIf=\"t.participantType.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"t.participantType.errors.required\">Participant selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"staff\">Staff In Charge:</label>\n                            <select class=\"form-select\" (change)=\"changestaff($event.target.value)\"\n                                formControlName=\"staff\" id=\"staff\">\n                                <option value=\"\">-- Filter By Staff --</option>\n                                <option value=\"viewall\">View All</option>\n                                <option *ngFor=\"let staff of staffList\" value='{{staff.user_id}}'>\n                                    {{ staff.user_firstname}} {{staff.user_middlename}} {{staff.user_lastname}} -\n                                    {{staff.role_shortname}}\n                                </option>\n                                <option value=\"nouser\">No User</option>\n                            </select>\n                        </div>\n\n                    </div>\n\n                    <div class=\"QA_table \">\n                        <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                            <table\n                                class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                                role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed\">\n\n                                <thead id=\"header-fixed\">\n                                    <tr>\n                                        <th style=\"width:5%;\">SL No</th>\n                                        <th style=\"width:25%;\">SS Name</th>\n                                        <th style=\"width:20%;\">Branch</th>\n                                        <th style=\"width:25%;\">Village</th>\n                                        <th style=\"width:20%;\">Staff In Charge</th>\n                                        <th style=\"width:8%;\">Select</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody style=\"text-align: center;\">\n                                    <tr *ngFor=\"let ss of ssList; index as i\">\n                                        <td style=\"width:5%;\">{{i+1}}</td>\n                                        <td style=\"width:25%;\">{{ss.swasthya_sahayika_name}}</td>\n                                        <td style=\"width:20%;\">{{ss.branch_name}}</td>\n                                        <td style=\"width:25%;\">{{ss.village_name ? ss.village_name : '-'}}</td>\n                                        <td style=\"width:20%;\">{{ss.user_firstname ? ss.user_firstname :'-'}}\n                                            {{ss.user_middlename}}\n                                            {{ss.user_lastname}}\n                                        </td>\n                                        <td style=\"width:8%;\"> <input class=\"form-check-input\" type=\"checkbox\" checked\n                                                value=\"\" id=\"flexCheckDefault\" *ngIf=\"ss.isChecked == true\"\n                                                (change)=\"selectSSForTraining(ss, i, $event.target.checked,ss.swasthya_sahayika_id)\">\n\n                                            <input class=\"form-check-input\" type=\"checkbox\" value=\"\"\n                                                id=\"flexCheckDefault\" *ngIf=\"ss.isChecked == false\"\n                                                (change)=\"selectSSForTraining(ss, i, $event.target.checked,ss.swasthya_sahayika_id)\">\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                </fieldset>\n\n            </form>\n        </div>\n\n        <div class=\"modal-footer\">\n            <div class=\"row\">\n                <button type=\"button\" class=\" btn btn-primary btn-sm\" [disabled]=\"!disabledSaveTrainingForm()\"\n                    (click)=\"saveSSTrainingForm()\">Save</button>\n            </div>\n        </div>\n\n    </div>\n\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SsTrainingRoutingModule } from './ss-training-routing.module';\nimport { SsTrainingComponent } from './ss-training.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { LoaderModule } from '../shared/loader/loader.module';\n\n@NgModule({\n  declarations: [SsTrainingComponent],\n  imports: [\n    CommonModule,\n    SsTrainingRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxPaginationModule,\n    LoaderModule\n  ]\n})\nexport class SsTrainingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SsTrainingService {\n  baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  listOfBranchesOfARegion(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfBranchesOfARegion`, obj)\n  }\n\n  branchWiseSSTrainingEventList(obj): any {\n    return this.http.post(`${this.baseURL}sstraining/getSSTrainingEventList`, obj)\n  }\n\n  ssTrainingTypeAndTopic(obj): any {\n    return this.http.post(`${this.baseURL}sstraining/getSSTrainingTypeAndTopic`, obj)\n  }\n\n  getSSList(obj): any {\n    return this.http.post(`${this.baseURL}sstraining/getSSList`, obj)\n  }\n\n  createUpdateDeleteSSTraining(obj): any {\n    return this.http.post(`${this.baseURL}sstraining/saveUpdateDeleteSsTrainingEvent`, obj)\n  }\n\n  approveSSTraining(obj): any {\n    return this.http.post(`${this.baseURL}sstraining/approveSSTrainingEvent`, obj)\n  }\n\n  staffListOfBranch(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfActiveHcoITL`, obj)\n  }\n\n  imageOfAEvent(obj): any {\n    return this.http.post(`${this.baseURL}/image/getFile`, obj)\n  }\n\n}\n"],"names":["RouterModule","SsTrainingComponent","routes","path","component","SsTrainingRoutingModule","forChild","imports","exports","Validators","moment","i0","constructor","fb","http","sidebarService","toaster","httpService","ssTrainingService","modalService","config","validationService","confirmationDialogService","router","backdrop","keyboard","ngDoCheck","searchFullscreen","val","ngOnInit","createForm","loader","checkRoledetailDTO","then","res","regionBranchHide","regionList","region","lowerRoleBranchId","branchId","branchList","branchLIST","branchName","console","log","allBranchID","push","dataAccessDTO","JSON","parse","localStorage","getItem","Dto","userId","userName","post","baseURL","subscribe","sessionDTO","status","villagesOfBranch","responseObject","changeBranch","viewSSTrainingEventForm","value","branch","subMenuList","find","functionShortName","functionMasterId","subMenuDetailList","item","subFunctionMasterId","accessDetailList","accessType","navigate","createMode","updateMode","deleteMode","approveMode","group","required","filterStartDate","filterEndDate","filterTraining","typeAndTopicTrainingList","l","controls","changeRegion","regionId","regionID","regionName","reg","regionMasterId","req","listOfBranchesOfARegion","forEach","setValue","ssEventList","upperRoleBranchId","branchWiseSSTrainingEventList","branchWiseSsTrainingEventList","filter","training_type_master_id","trainingEventID","ss_training_event_start_date","ss_training_event_end_date","filterListByTrainingType","trainingEventId","filterDateWiseSSTrainingList","viewParticipantsDetails","detailsOfParticipants","event","eventSSList","ssList","modalContent","modalReference","open","windowClass","imageReq","training_event_master_id","imageOfAEvent","attendanceImage","detailsOfParticipantsModalDismiss","close","ssTrainingTypeAndTopic","ssTrainingType","ssTrainingTopic","createSSTrainingEvents","SSTraining","SSTrainingEditData","ssTrainingFormModal","createSSTrainingEventForm","disable","trainingType","editSSTrainingEvents","today","Date","toISOString","slice","ssTrainingModalDismiss","showError","data","duration","fromDate","toDate","trainername","trainer_name","trainerdesignation","trainer_designation","trainingtopic","ssbranch","participantType","staff","markAllAsTouched","changeTrainingType","expectToDate","ss_training_event_topic_master_id","branchWiseStaffList","hcoreq","staffListOfBranch","staffList","t","getMinDate","setFromDate","add","format","e","durationValue","mydate","getDay","setToDate","replace","endDate","noOfDaysToAdd","count","setDate","getDate","changeparticipantType","staffID","enable","ssListObj","trainingTypeMasterId","getSSList","AllSSList","map","isChecked","rest","it","swasthya_sahayika_id","branch_id","filterSSList","changessbranch","checked","selectSSForTraining","indexWiseSSLIST","ssIndex","SSLIST","index","list","disabledSaveTrainingForm","flag","check","length","saveSSTrainingForm","ssTrainingDataPushPop","checkedSS","ssSaveObj","active_flag","ss_training_event_type","camelize","trim","createUpdateDeleteSSTraining","showSuccess","message","ID","deleteSSTrainingEvents","confirm","delete","catch","ssDeleteObj","approveSSTrainingEvents","approveSS","ssTrainingObj","approveSSTraining","changestaff","staffid","changeparticipantTypeBySSName","v","user_id","success","timeOut","error","restrictTypeOfDate","selectors","decls","vars","consts","template","ctx","CommonModule","FormsModule","ReactiveFormsModule","NgxPaginationModule","LoaderModule","SsTrainingModule","declarations","environment","SsTrainingService","apiUrl","obj","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}