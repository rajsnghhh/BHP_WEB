{"version":3,"file":"src_app_modules_ss-unmap-remap_ss-unmap-remap_module_ts.js","mappings":"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","sources":["./src/app/modules/ss-unmap-remap/ss-unmap-remap-routing.module.ts","./src/app/modules/ss-unmap-remap/ss-unmap-remap.component.ts","./src/app/modules/ss-unmap-remap/ss-unmap-remap.component.html","./src/app/modules/ss-unmap-remap/ss-unmap-remap.module.ts","./src/app/modules/ss-unmap-remap/ss-unmap-remap.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SsUnmapRemapComponent } from './ss-unmap-remap.component';\n\nconst routes: Routes = [{ path: '', component: SsUnmapRemapComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SsUnmapRemapRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from '../core/http/http.service';\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\nimport { SidebarService } from '../shared/sidebar/sidebar.service';\nimport { SsUnmapRemapService } from './ss-unmap-remap.service';\n\n@Component({\n  selector: 'app-ss-unmap-remap',\n  templateUrl: './ss-unmap-remap.component.html',\n  styleUrls: ['./ss-unmap-remap.component.css']\n})\nexport class SsUnmapRemapComponent implements OnInit {\n  ssUnmapRemapForm: UntypedFormGroup;\n  modalForm: UntypedFormGroup;\n  regionList: Array<any> = [];\n  branchList: Array<any> = [];\n  userList: Array<any> = [];\n  userMappedHHList: Array<any> = [];\n  ssLists: Array<any> = [];\n  hcouserId: any;\n  branchId: any;\n  page = 1;\n  pageSize = 5;\n  p: any;\n  checkboxData: any;\n  modalContent: any;\n  modalReference: any;\n  mapUnmapDto = {\n    dataAccessDTO: {},\n    ssHhMapRemapDtoList: [],\n  };\n  ssId: any;\n  loader: boolean = true;\n  ssNameFilter: any;\n\n  constructor(private fb: UntypedFormBuilder, private ssUnmapRemapService: SsUnmapRemapService,\n    private httpService: HttpService, private toaster: ToastrService, private confirmationDialogService: ConfirmationDialogService,\n    private modalService: NgbModal, private sidebarService: SidebarService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.createForm();\n\n    let obj = { dataAccessDTO: this.httpService.dataAccessDTO }\n    this.ssUnmapRemapService.listOfRegionsOfUser(obj).subscribe((res) => {\n      this.regionList = res.responseObject;\n      console.log(this.regionList);\n    });\n\n    this.sidebarService.subMenuList\n      .find(functionMasterId => functionMasterId.functionMasterId == 3)?.subMenuDetailList\n      .find(subFunctionMasterId => subFunctionMasterId.subFunctionMasterId == 203)?.accessDetailList\n      .find(accessType => accessType.accessType == 'create')?.accessType ? this.router.navigate(['/ss-unmap-remap']) : this.router.navigate(['/error']);\n\n  }\n\n  createForm() {\n    this.ssUnmapRemapForm = this.fb.group({\n      region: ['', Validators.required],\n      branch: ['', Validators.required],\n      hcouser: ['', Validators.required],\n      ssByList: ['', Validators.required]\n    });\n  }\n\n  get f() {\n    return this.ssUnmapRemapForm.controls;\n  }\n\n  changeRegion(regionId) {\n    console.log(regionId);\n\n    let req = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      regionId: regionId,\n    };\n    this.ssUnmapRemapService.listOfBranchesOfARegion(req).subscribe((res) => {\n      this.branchList = res.responseObject;\n      console.log(this.branchList, 'this.branchList');\n\n    }, (error) => {\n      this.branchList = null;\n    }\n    );\n\n    this.ssUnmapRemapForm.controls.branch.setValue('');\n    this.ssUnmapRemapForm.controls.hcouser.setValue('')\n    this.userMappedHHList = [];\n    if (this.ssUnmapRemapForm.value.region == '') {\n      this.ssUnmapRemapForm.controls.branch.setValue('');\n      this.ssUnmapRemapForm.controls.hcouser.setValue('')\n      this.userMappedHHList = [];\n    }\n  }\n\n  changeBranch(branchId) {\n\n    console.log(branchId);\n    this.branchId = branchId;\n\n    let obj = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      branchId: branchId\n    }\n    this.ssUnmapRemapService.hcoListOfBranch(obj).subscribe((res) => {\n      this.userList = res.responseObject;\n      console.log(this.userList, 'this.userList');\n\n    });\n\n    this.ssUnmapRemapForm.controls.hcouser.setValue('')\n    this.userMappedHHList = [];\n    if (this.ssUnmapRemapForm.value.branch == '') {\n      this.ssUnmapRemapForm.controls.hcouser.setValue('');\n      this.userMappedHHList = [];\n    }\n\n  }\n\n  changeHco(hcouserId) {\n\n    this.getActiveSS(hcouserId);\n    this.hcouserId = hcouserId;\n\n    let obj = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      userId: this.hcouserId\n    }\n    this.loader = false;\n    this.ssUnmapRemapService.viewUsersMappedHhAndSsDetails(obj).subscribe((res) => {\n      this.userMappedHHList = res.responseObject;\n      console.log(this.userMappedHHList, 'this.userMappedHHList');\n      this.loader = true;\n    });\n\n    this.userMappedHHList = [];\n    this.mapUnmapDto.ssHhMapRemapDtoList = [];\n    this.ssUnmapRemapForm.controls.ssByList.setValue('');\n    if (this.ssUnmapRemapForm.value.branch == '') {\n      this.userMappedHHList = [];\n      this.mapUnmapDto.ssHhMapRemapDtoList = [];\n    }\n\n  }\n\n  unmapRemapSS(e, hhId) {\n    this.checkboxData = e.target.checked;\n\n    if (this.checkboxData) {\n      this.mapUnmapDto.dataAccessDTO = this.httpService.dataAccessDTO,\n\n        this.mapUnmapDto.ssHhMapRemapDtoList.push({ houseHoldDetailId: hhId, remapSwasthyaSahayikaId: null });\n      console.log(this.checkboxData);\n\n    }\n    else {\n      var i = this.mapUnmapDto.ssHhMapRemapDtoList.findIndex(list => list.houseHoldDetailId == hhId);\n      this.mapUnmapDto.ssHhMapRemapDtoList.splice(i, 1);\n    }\n\n    console.log(this.mapUnmapDto, 'mapUnmapDto.ssHhMapRemapDtoList');\n\n  }\n\n  saveunmapSS() {\n    this.confirmationDialogService.confirm('', 'Are you sure you want to Unmap selected Household from SS')\n      .then(() => this.unmapSS()\n      )\n      .catch(() => '');\n  }\n\n  unmapSS() {\n    console.log(this.mapUnmapDto);\n\n    this.ssUnmapRemapService.unmapAndOrRemapSsFromOneOrMoreHouseholdsOfUser(this.mapUnmapDto).subscribe((res) => {\n      console.log(res);\n      if (res.status == true) {\n        this.showSuccess(res.message);\n        this.changeHco(this.hcouserId);\n      }\n\n    })\n  }\n\n  saveRemapSS(ssList) {\n\n    this.createModalForm();\n    this.modalContent = '';\n    this.modalReference = this.modalService.open(ssList, {\n      windowClass: 'ssList',\n    });\n\n  }\n\n  changess(ssId) {\n    this.ssId = ssId;\n    console.log(this.ssId);\n\n  }\n\n  saveRemapSSFromModal() {\n\n    var ssId = this.mapUnmapDto.ssHhMapRemapDtoList;\n\n    ssId.filter(xyz => { xyz.remapSwasthyaSahayikaId = this.ssId })\n\n    console.log(ssId);\n\n    this.mapUnmapDto.dataAccessDTO = this.httpService.dataAccessDTO,\n      this.mapUnmapDto.ssHhMapRemapDtoList = ssId;\n\n    console.log(this.mapUnmapDto);\n\n    this.ssUnmapRemapService.unmapAndOrRemapSsFromOneOrMoreHouseholdsOfUser(this.mapUnmapDto).subscribe((res) => {\n      console.log(res);\n      if (res.status == true) {\n        this.showSuccess(res.message);\n        this.modalDismiss();\n        this.changeHco(this.hcouserId);\n      }\n\n    })\n\n  }\n\n  createModalForm() {\n    this.modalForm = this.fb.group({\n      ss: ['', Validators.required]\n    });\n  }\n\n  get s() {\n    return this.modalForm.controls;\n  }\n\n  modalDismiss() {\n    this.modalReference.close();\n  }\n\n  getActiveSS(hcouserId) {\n\n    let obj = { dataAccessDTO: this.httpService.dataAccessDTO, userId: hcouserId };\n\n    this.ssUnmapRemapService.getActiveSsListOfAnUser(obj).subscribe((res) => {\n      this.ssLists = res.responseObject;\n      console.log(this.ssLists, 'ssLists');\n\n    })\n\n  }\n\n  ssWiseViewList(swasthyaSahayikaName) {\n    console.log(swasthyaSahayikaName);\n\n    let obj = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      userId: this.hcouserId\n    }\n    this.loader = false;\n    this.ssUnmapRemapService.viewUsersMappedHhAndSsDetails(obj).subscribe((res) => {\n      this.userMappedHHList = res.responseObject;\n      console.log(this.userMappedHHList, 'this.userMappedHHList');\n      this.callSSfilter(swasthyaSahayikaName);\n      this.loader = true;\n    });\n\n  }\n\n\n  callSSfilter(swasthyaSahayikaName) {\n    if (swasthyaSahayikaName == 'SS') {\n      this.ssNameFilter = this.userMappedHHList?.filter((item) => item.swasthyaSahayikaName === null);\n      console.log(this.ssNameFilter, 'this.nossNameFilter');\n    } else {\n      this.ssNameFilter = this.userMappedHHList?.filter((item) => item.swasthyaSahayikaName == swasthyaSahayikaName);\n      console.log(this.ssNameFilter, 'this.ssNameFilter');\n    }\n\n    if (swasthyaSahayikaName) {\n      if (this.ssNameFilter?.length == 0) {\n        this.showErrorss('No matched data with' + ' ' + swasthyaSahayikaName);\n        this.userMappedHHList = this.ssNameFilter;\n      }\n      else {\n        this.userMappedHHList = this.ssNameFilter;\n      }\n    }\n\n  }\n\n  showErrorss(message) {\n    this.toaster.error(message, '', {\n      timeOut: 3000,\n    });\n  }\n\n  showSuccess(message) {\n    this.toaster.success(message, 'Unmap/ Remap SS - Household', {\n      timeOut: 5000,\n    });\n  }\n\n  showError(message) {\n    this.toaster.error(message, 'Unmap/ Remap SS - Household', {\n      timeOut: 5000,\n    });\n  }\n\n}","<app-loader [hidden]=\"loader\"></app-loader>\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"white_box QA_section mb_30\">\n\n                <div id=\"header-fixed\" style=\"display: flex;\">\n                    <h2 class=\"page-title\">Unmap/ Remap SS - Household</h2>\n                </div>\n\n                <form class=\"form-signin\" [formGroup]=\"ssUnmapRemapForm\">\n\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\">\n                            <label for=\"region\">Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeRegion($event.target.value)\"\n                                formControlName=\"region\" id=\"region\" [ngClass]=\"{ 'is-invalid': f.region.invalid && f.region.touched, \n                                'is-valid': f.region.valid && (f.region.dirty || f.region.touched)}\">\n                                <option value=\"\">-- Select Region --</option>\n                                <option *ngFor=\"let region of regionList\" value=\"{{region.regionMasterId}}\">\n                                    {{region.regionName}}\n                                </option>\n                            </select>\n                            <div *ngIf=\"f.region.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.region.errors.required\">Region selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"branch\">Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBranch($event.target.value)\"\n                                formControlName=\"branch\" id=\"branch\" [ngClass]=\"{'is-invalid': f.branch.invalid && f.branch.touched,\n                              'is-valid': f.branch.valid && (f.branch.dirty || f.branch.touched)}\">\n                                <option value=\"\">-- Select Branch --</option>\n                                <option *ngFor=\"let branch of branchList\" value=\"{{branch.branchId}}\">\n                                    {{ branch.branchName }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"f.branch.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.branch.errors.required\">Branch selection is required</div>\n                            </div>\n                        </div>\n\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"hcouser\">HCO/ HCOI /TL :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeHco($event.target.value)\"\n                                formControlName=\"hcouser\" id=\"hcouser\" [ngClass]=\"{\n                              'is-invalid': f.hcouser.invalid && f.hcouser.touched,\n                              'is-valid':\n                                f.hcouser.valid && (f.hcouser.dirty || f.hcouser.touched)\n                            }\">\n                                <option value=\"\">-- Select Role --</option>\n                                <option *ngFor=\"let hcouser of userList\" value='{{hcouser.user_id}}'>\n                                    {{ hcouser.user_firstname}} {{hcouser.user_middlename}} {{hcouser.user_lastname}} -\n                                    {{hcouser.role_shortname}}\n                                </option>\n                            </select>\n                            <div *ngIf=\"f.hcouser.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.hcouser.errors.required\">Role selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\" *ngIf=\"ssUnmapRemapForm.value.hcouser\">\n                            <label>Filter By SS Name:</label>\n                            <select class=\"form-select\" formControlName=\"ssByList\" id=\"ssByList\"\n                                (change)=\"ssWiseViewList($event.target.value)\">\n                                <option value=\"\">-- View All List --</option>\n                                <option *ngFor=\"let ss of ssLists\">\n                                    {{ ss.swasthyaSahayikaName }}\n                                </option>\n                                <option value=\"SS\">List With No SS</option>\n                            </select>\n                        </div>\n\n                        <div class=\"white_box_tittle list_header\">\n\n                            <div class=\"QA_table \">\n                                <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                                    <table\n                                        class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                                        role=\"grid\" aria-describedby=\"DataTables_Table_0_info\"\n                                        style=\"table-layout: fixed\">\n\n                                        <thead id=\"header-fixed\">\n                                            <tr>\n                                                <th style=\"width: 9%;\">SL No</th>\n                                                <th style=\"width: 9%;\">Household No</th>\n                                                <th>Branch</th>\n                                                <th>Village of Household</th>\n                                                <th>SS Name</th>\n                                                <th>Unmap/ Remap</th>\n                                            </tr>\n                                        </thead>\n\n                                        <tbody>\n                                            <tr *ngFor=\"let item of userMappedHHList; index as i\">\n                                                <td style=\"width: 9%;\">{{(p-1)*5+i+1 ? (p-1)*5+i+1 : i+1}}</td>\n                                                <td style=\"width: 9%;\">{{ item.houseHoldNumber}}</td>\n                                                <td>{{item.branchName}}</td>\n                                                <td>{{item.villageName}}</td>\n                                                <td>{{item.swasthyaSahayikaName ? item.swasthyaSahayikaName : '-'}}</td>\n                                                <td><input class=\"form-check-input\" type=\"checkbox\" value=\"\"\n                                                        id=\"flexCheckDefault\"\n                                                        (change)=\"unmapRemapSS($event, item.houseHoldDetailId)\">\n                                                </td>\n                                            </tr>\n                                        </tbody>\n\n                                    </table>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"form-group col-md-6\">\n                            <button type=\"button\" class=\" btn btn-primary bttn\"\n                                [disabled]=\"mapUnmapDto.ssHhMapRemapDtoList.length == 0\"\n                                (click)=\"saveunmapSS()\">Unmap</button>&nbsp;&nbsp;\n\n                            <button type=\"button\" class=\" btn btn-primary bttn\"\n                                [disabled]=\"mapUnmapDto.ssHhMapRemapDtoList.length == 0\"\n                                (click)=\"saveRemapSS(ssList)\">Remap</button>\n                        </div>\n\n                    </div>\n\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #ssList>\n    <div class=\"modal-header\">\n\n        <div class=\"col-md-2\">\n            <span class=\"close\" (click)=\"modalDismiss()\" style=\"cursor: pointer;font-size: 35px;\">&times;</span>\n        </div>\n\n    </div>\n\n    <div class=\"modal-body\">\n        <form class=\"form-signin\" [formGroup]=\"modalForm\">\n\n            <div class=\"form-group col-md\">\n                <label for=\"ss\">Swasthya Sahayika :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                <select class=\"form-select\" (change)=\"changess($event.target.value)\" formControlName=\"ss\" id=\"ss\"\n                    [ngClass]=\"{'is-invalid': s.ss.invalid && s.ss.touched,\n                              'is-valid': s.ss.valid && (s.ss.dirty || s.ss.touched) }\">\n                    <option value=\"\">-- Select SS--</option>\n                    <option *ngFor=\"let ss of ssLists; index as i \" value=\"{{ss.swasthyaSahayikaId}}\">\n                        {{ ss.swasthyaSahayikaName }}\n                    </option>\n                </select>\n                <div *ngIf=\"s.ss.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"s.ss.errors.required\">\n                        SS selection is required\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n\n    <div class=\"modal-footer\">\n        <div class=\"row\">\n            <div class=\"form-group col-md-6\">\n                <button type=\"button\" class=\" btn btn-primary bttn\" [disabled]=\"!modalForm.value.ss\"\n                    (click)=\"saveRemapSSFromModal()\">Remap\n                </button>\n            </div>\n\n        </div>\n    </div>\n\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SsUnmapRemapRoutingModule } from './ss-unmap-remap-routing.module';\nimport { SsUnmapRemapComponent } from './ss-unmap-remap.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { LoaderModule } from '../shared/loader/loader.module';\n\n\n@NgModule({\n  declarations: [SsUnmapRemapComponent],\n  imports: [\n    CommonModule,\n    SsUnmapRemapRoutingModule,\n    ReactiveFormsModule,\n    NgxPaginationModule, LoaderModule\n  ]\n})\nexport class SsUnmapRemapModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SsUnmapRemapService {\n  baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  listOfRegionsOfUser(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfRegionsOfUser`, obj)\n  }\n\n  listOfBranchesOfARegion(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfBranchesOfARegion`, obj)\n  }\n\n  hcoListOfBranch(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfActiveHcoITL`, obj)\n  }\n\n  viewUsersMappedHhAndSsDetails(obj): any {\n    return this.http.post(`${this.baseURL}remap/viewUsersMappedHhAndSsDetails`, obj)\n  }\n\n  unmapAndOrRemapSsFromOneOrMoreHouseholdsOfUser(obj): any {\n    return this.http.post(`${this.baseURL}remap/unmapAndOrRemapSsFromOneOrMoreHouseholdsOfUser`, obj)\n  }\n\n  getActiveSsListOfAnUser(obj): any {\n    return this.http.post(`${this.baseURL}swasthyasahayika/getActiveSsListOfAnUser`, obj)\n  }\n\n}\n"],"names":["RouterModule","SsUnmapRemapComponent","routes","path","component","SsUnmapRemapRoutingModule","forChild","imports","exports","Validators","i0","constructor","fb","ssUnmapRemapService","httpService","toaster","confirmationDialogService","modalService","sidebarService","router","dataAccessDTO","ssHhMapRemapDtoList","ngOnInit","createForm","obj","listOfRegionsOfUser","subscribe","res","regionList","responseObject","console","log","subMenuList","find","functionMasterId","subMenuDetailList","subFunctionMasterId","accessDetailList","accessType","navigate","ssUnmapRemapForm","group","region","required","branch","hcouser","ssByList","f","controls","changeRegion","regionId","req","listOfBranchesOfARegion","branchList","error","setValue","userMappedHHList","value","changeBranch","branchId","hcoListOfBranch","userList","changeHco","hcouserId","getActiveSS","userId","loader","viewUsersMappedHhAndSsDetails","mapUnmapDto","unmapRemapSS","e","hhId","checkboxData","target","checked","push","houseHoldDetailId","remapSwasthyaSahayikaId","i","findIndex","list","splice","saveunmapSS","confirm","then","unmapSS","catch","unmapAndOrRemapSsFromOneOrMoreHouseholdsOfUser","status","showSuccess","message","saveRemapSS","ssList","createModalForm","modalContent","modalReference","open","windowClass","changess","ssId","saveRemapSSFromModal","filter","xyz","modalDismiss","modalForm","ss","s","close","getActiveSsListOfAnUser","ssLists","ssWiseViewList","swasthyaSahayikaName","callSSfilter","ssNameFilter","item","length","showErrorss","timeOut","success","showError","selectors","decls","vars","consts","template","ctx","CommonModule","ReactiveFormsModule","NgxPaginationModule","LoaderModule","SsUnmapRemapModule","declarations","environment","SsUnmapRemapService","http","apiUrl","post","baseURL","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}