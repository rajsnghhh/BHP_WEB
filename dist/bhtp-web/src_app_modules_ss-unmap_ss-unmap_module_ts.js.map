{"version":3,"file":"src_app_modules_ss-unmap_ss-unmap_module_ts.js","mappings":"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","sources":["./src/app/modules/shared/ss-unmap-search.pipe.ts","./src/app/modules/ss-unmap/ss-unmap-routing.module.ts","./src/app/modules/ss-unmap/ss-unmap.component.ts","./src/app/modules/ss-unmap/ss-unmap.component.html","./src/app/modules/ss-unmap/ss-unmap.module.ts","./src/app/modules/ss-unmap/ss-unmap.service.ts"],"sourcesContent":["\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\n@Pipe({\r\n  name: 'ssUnmapFilterPipe'\r\n})\r\n\r\nexport class ssUnmapFilterPipe implements PipeTransform {\r\n  transform(items: any, filter: any, defaultFilter: boolean): any {\r\n    if (!filter) {\r\n      return items;\r\n    }\r\n\r\n    if (!Array.isArray(items)) {\r\n      return items;\r\n    }\r\n\r\n    if (filter && Array.isArray(items)) {\r\n      let filterKeys = Object.keys(filter);\r\n\r\n      if (defaultFilter) {\r\n        return items.filter(item =>\r\n          filterKeys.reduce((x, keyName) =>\r\n            (x && new RegExp(filter[keyName], 'gi').test(item[keyName])) || filter[keyName] == \"\", true));\r\n      }\r\n      else {\r\n        return items.filter(item => {\r\n          return filterKeys.some((keyName) => {\r\n            return new RegExp(filter[keyName], 'gi').test(item[keyName]) || filter[keyName] == \"\";\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SsUnmapComponent } from './ss-unmap.component';\n\nconst routes: Routes = [{ path: '', component: SsUnmapComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SsUnmapRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from '../core/http/http.service';\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\nimport { ValidationService } from '../shared/services/validation.service';\nimport { SidebarService } from '../shared/sidebar/sidebar.service';\nimport { SsUnmapService } from './ss-unmap.service';\n\n@Component({\n  selector: 'app-ss-unmap',\n  templateUrl: './ss-unmap.component.html',\n  styleUrls: ['./ss-unmap.component.css']\n})\nexport class SsUnmapComponent implements OnInit {\n  ssUnmapForm: UntypedFormGroup;\n  regionList: Array<any> = [];\n  branchList: Array<any> = [];\n  hcouserList: Array<any> = [];\n  ssList: Array<any> = [];\n  page = 1;\n  pageSize = 5;\n  p: any;\n  branchId: any;\n  searchText: any;\n  searchFullscreen: boolean;\n  userList: Array<any> = [];\n  hcoUserNameFilter: any;\n\n  constructor(private fb: UntypedFormBuilder, private httpService: HttpService, private ssUnmapService: SsUnmapService,\n    private confirmationDialogService: ConfirmationDialogService, private toaster: ToastrService,\n    public validationService: ValidationService, private sidebarService: SidebarService, private router: Router) { }\n\n  ngDoCheck(): void {\n    this.searchFullscreen = this.validationService.val;\n  }\n\n  ngOnInit(): void {\n\n    this.createForm();\n\n    let obj = { dataAccessDTO: this.httpService.dataAccessDTO }\n    this.ssUnmapService.listOfRegionsOfUser(obj).subscribe((res) => {\n      this.regionList = res.responseObject;\n      console.log(this.regionList);\n    });\n\n    this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\n      .find(item => item.subFunctionMasterId == 194)?.accessDetailList\n      .find(accessType => accessType.accessType == 'create')?.accessType ? this.router.navigate(['/ss-unmap']) : this.router.navigate(['/error']);\n  }\n\n  changeRegion(regionId) {\n    console.log(regionId);\n\n    let req = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      regionId: regionId,\n    };\n    this.ssUnmapService.listOfBranchesOfARegion(req).subscribe((res) => {\n      this.branchList = res.responseObject;\n      console.log(this.branchList, 'this.branchList');\n\n    }, (error) => {\n      this.branchList = null;\n    }\n    );\n    this.ssUnmapForm.controls.branch.setValue('')\n    this.ssList = [];\n    if (this.ssUnmapForm.value.region == '') {\n      this.ssUnmapForm.controls.branch.setValue('');\n      this.ssList = [];\n    }\n  }\n\n  changeBranch(branchId) {\n\n    console.log(branchId);\n    this.branchId = branchId;\n\n    let obj = { dataAccessDTO: this.httpService.dataAccessDTO, branchId: branchId };\n    this.ssUnmapService.listOfswasthyasahayika(obj).subscribe((res) => {\n      this.ssList = res.responseObject?.ssDtoList;\n      console.log(this.ssList);\n    });\n\n    this.ssList = [];\n    if (this.ssUnmapForm.value.branch == '') {\n      this.ssList = [];\n    }\n\n    let obj2 = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      branchId: branchId\n    }\n    this.ssUnmapService.hcoListOfBranch(obj2).subscribe((res) => {\n      this.userList = res.responseObject;\n      console.log(this.userList, 'this.userList');\n\n    });\n\n  }\n\n  createForm() {\n    this.ssUnmapForm = this.fb.group({\n      region: ['', Validators.required],\n      branch: ['', Validators.required],\n      hcouser: ['', Validators.required]\n\n    });\n  }\n\n  get f() {\n    return this.ssUnmapForm.controls;\n  }\n\n  unmapSS(e, ssId, i) {\n    console.log(ssId, e.target.value, e.target.checked);\n\n    this.confirmationDialogService.confirm('', 'Are you sure you want to unmap SS from all mapped Household and User')\n      .then(() => this.unmap(ssId, i)\n      )\n      .catch(() => e.target.checked = false);\n\n  }\n\n\n  unmap(ssId, i) {\n    let obj = { dataAccessDTO: this.httpService.dataAccessDTO, ssId: ssId };\n    console.log(obj);\n\n    this.ssUnmapService.unmapSsFromAllMappedHhAndUser(obj).subscribe((res) => {\n      console.log(res);\n      if (res.status == true) {\n        this.showSuccess(res.message);\n        let obj = { dataAccessDTO: this.httpService.dataAccessDTO, branchId: this.branchId };\n        this.ssUnmapService.listOfswasthyasahayika(obj).subscribe((res) => {\n          this.ssList = res.responseObject?.ssDtoList;\n          console.log(this.ssList);\n        });\n\n      };\n    });\n\n  }\n\n  hcoUserWiseViewList(hcoUser) {\n    console.log(hcoUser);\n\n    let obj = { dataAccessDTO: this.httpService.dataAccessDTO, branchId: this.branchId };\n    this.ssUnmapService.listOfswasthyasahayika(obj).subscribe((res) => {\n      this.ssList = res.responseObject?.ssDtoList;\n      console.log(this.ssList);\n      this.callSSfilter(hcoUser);\n    });\n\n  }\n\n  callSSfilter(hcoUser) {\n    console.log(hcoUser);\n\n    if (hcoUser == 'NA') {\n      this.ssList = this.ssList?.filter(item => item.userDto === null);\n      console.log(this.ssList);\n    } else if (hcoUser == '') {\n      this.ssList = this.ssList;\n    } else {\n      this.ssList = this.ssList?.filter(item => item.userDto?.userId == hcoUser);\n      console.log(this.ssList);\n    }\n\n  }\n\n  showSuccess(message) {\n    this.toaster.success(message, 'Unmap SS', {\n      timeOut: 10000,\n    });\n  }\n\n  showError(message) {\n    this.toaster.error(message, 'Unmap SS', {\n      timeOut: 5000,\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"white_box QA_section mb_30\">\n\n                <div id=\"header-fixed\" style=\"display: flex;\">\n                    <h2 class=\"page-title\">SS-Unmap</h2>\n\n                    <div class=\"box_right d-flex lms_block col-md-6\" *ngIf=\"ssUnmapForm.value.branch\">\n                        <div class=\"serach_field_2\">\n                            <div [ngClass]=\" searchFullscreen? 'search_inner_fullscreen ' : ' search_inner' \">\n                                <form active=\"#\">\n                                    <div class=\"search_field\">\n                                        <input type=\"text\" name=\"search\" placeholder=\"Search by ss name...\"\n                                            [(ngModel)]=\"searchText\">\n                                    </div>\n                                    <button type=\"submit\"> <i class=\"fa fa-search\"></i> </button>\n                                </form>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n\n\n                <form class=\"form-signin\" [formGroup]=\"ssUnmapForm\">\n\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\">\n                            <label for=\"region\">Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeRegion($event.target.value)\"\n                                formControlName=\"region\" id=\"region\" [ngClass]=\"{ 'is-invalid': f.region.invalid && f.region.touched, \n                                'is-valid': f.region.valid && (f.region.dirty || f.region.touched)}\">\n                                <option value=\"\">-- Select Region --</option>\n                                <option *ngFor=\"let region of regionList\" value=\"{{region.regionMasterId}}\">\n                                    {{region.regionName}}\n                                </option>\n                            </select>\n                            <div *ngIf=\"f.region.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.region.errors.required\">Region selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"branch\">Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBranch($event.target.value)\"\n                                formControlName=\"branch\" id=\"branch\" [ngClass]=\"{'is-invalid': f.branch.invalid && f.branch.touched,\n                              'is-valid': f.branch.valid && (f.branch.dirty || f.branch.touched)}\">\n                                <option value=\"\">-- Select Branch --</option>\n                                <option *ngFor=\"let branch of branchList\" value=\"{{branch.branchId}}\">\n                                    {{ branch.branchName }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"f.branch.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.branch.errors.required\">Branch selection is required</div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\" *ngIf=\"ssUnmapForm.value.branch\">\n                            <label>Filter By Staff In Charge:</label>\n                            <select class=\"form-select\" formControlName=\"hcouser\" id=\"hcouser\"\n                                (change)=\"hcoUserWiseViewList($event.target.value)\">\n                                <option value=\"\">-- View All List --</option>\n                                <option *ngFor=\"let hcouser of userList\" value=\"{{hcouser.user_id}}\">\n                                    {{ hcouser.user_firstname}} {{hcouser.user_middlename}} {{hcouser.user_lastname}} -\n                                    {{hcouser.role_shortname}}\n                                </option>\n                                <option value=\"NA\">No User</option>\n                            </select>\n                        </div>\n\n                    </div>\n\n\n\n\n                    <div class=\"white_box_tittle list_header\">\n\n                        <div class=\"QA_table \">\n                            <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                                <table\n                                    class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                                    role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\n\n                                    <thead id=\"header-fixed\">\n                                        <tr>\n                                            <th>SL No</th>\n                                            <th>Village Name</th>\n                                            <th style=\"width: 20%;\">SS Name</th>\n                                            <th>Staff In Charge</th>\n                                            <th>User Active</th>\n                                            <th>Unmap SS</th>\n                                        </tr>\n                                    </thead>\n\n                                    <tbody>\n\n                                        <tr\n                                            *ngFor=\"let item of ssList |  ssUnmapFilterPipe: {ssName : searchText } |paginate: { itemsPerPage: 5, currentPage: p }; index as i\">\n                                            <td>{{(p-1)*5+i+1 ? (p-1)*5+i+1 : i+1}}</td>\n                                            <td>{{item.villageDto.villageName}}</td>\n                                            <td style=\"width: 20%;\">{{item.ssName}}</td>\n                                            <td>{{ item.userDto ? item.userDto.userFirstName :'-'}} {{item.userDto ?\n                                                item.userDto.userMiddleName:'-'}}\n                                                {{item.userDto ? item.userDto.userLastName:'-'}}</td>\n                                            <td style=\"padding: 0px;\">{{item.userDto ? item.userDto.isMappedUserActive :\n                                                '-'}}</td>\n                                            <td><input class=\"form-check-input\" type=\"checkbox\" value=\"\"\n                                                    id=\"flexCheckDefault\" (change)=\"unmapSS($event, item.ssId, i)\"></td>\n                                        </tr>\n                                    </tbody>\n\n                                </table>\n                                <pagination-controls class=\"d-flex justify-content-end p-1 current ngx-pagination1\"\n                                    (pageChange)=\"p = $event\" (pageBoundsCorrection)=\"p = $event \">\n                                </pagination-controls>\n\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SsUnmapRoutingModule } from './ss-unmap-routing.module';\nimport { SsUnmapComponent } from './ss-unmap.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ssUnmapFilterPipe } from '../shared/ss-unmap-search.pipe';\n\n\n@NgModule({\n  declarations: [SsUnmapComponent, ssUnmapFilterPipe],\n  imports: [\n    CommonModule,\n    SsUnmapRoutingModule,\n    ReactiveFormsModule,\n    NgxPaginationModule, FormsModule\n  ]\n})\nexport class SsUnmapModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SsUnmapService {\n\n  baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  listOfRegionsOfUser(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfRegionsOfUser`, obj)\n  }\n\n  listOfBranchesOfARegion(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfBranchesOfARegion`, obj)\n  }\n\n  listOfswasthyasahayika(obj): any {\n    return this.http.post(`${this.baseURL}swasthyasahayika/getSSOfABranchSimpler`, obj)\n  }\n\n  unmapSsFromAllMappedHhAndUser(obj): any {\n    return this.http.post(`${this.baseURL}remap/unmapSsFromAllMappedHhAndUser`, obj)\n  }\n\n  hcoListOfBranch(obj): any {\n    return this.http.post(`${this.baseURL}branch/getListOfActiveHcoITL`, obj)\n  }\n\n}\n"],"names":["ssUnmapFilterPipe","transform","items","filter","defaultFilter","Array","isArray","filterKeys","Object","keys","item","reduce","x","keyName","RegExp","test","some","pure","RouterModule","SsUnmapComponent","routes","path","component","SsUnmapRoutingModule","forChild","imports","exports","Validators","i0","constructor","fb","httpService","ssUnmapService","confirmationDialogService","toaster","validationService","sidebarService","router","ngDoCheck","searchFullscreen","val","ngOnInit","createForm","obj","dataAccessDTO","listOfRegionsOfUser","subscribe","res","regionList","responseObject","console","log","subMenuList","find","functionShortName","subMenuDetailList","subFunctionMasterId","accessDetailList","accessType","navigate","changeRegion","regionId","req","listOfBranchesOfARegion","branchList","error","ssUnmapForm","controls","branch","setValue","ssList","value","region","changeBranch","branchId","listOfswasthyasahayika","ssDtoList","obj2","hcoListOfBranch","userList","group","required","hcouser","f","unmapSS","e","ssId","i","target","checked","confirm","then","unmap","catch","unmapSsFromAllMappedHhAndUser","status","showSuccess","message","hcoUserWiseViewList","hcoUser","callSSfilter","userDto","userId","success","timeOut","showError","selectors","decls","vars","consts","template","ctx","CommonModule","FormsModule","ReactiveFormsModule","NgxPaginationModule","SsUnmapModule","declarations","environment","SsUnmapService","http","apiUrl","post","baseURL","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}