{"version":3,"file":"src_app_modules_user-hh-ss-remap_user-hh-ss-remap_module_ts.js","mappings":"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","sources":["./src/app/modules/user-hh-ss-remap/user-hh-ss-remap-home/user-hh-ss-remap-home.component.ts","./src/app/modules/user-hh-ss-remap/user-hh-ss-remap-home/user-hh-ss-remap-home.component.html","./src/app/modules/user-hh-ss-remap/user-hh-ss-remap-routing.module.ts","./src/app/modules/user-hh-ss-remap/user-hh-ss-remap.module.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaselineSurveyService } from '../../baseline-survey/baseline-survey.service';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { ConfirmationDialogService } from '../../shared/confirmation-dialog/confirmation-dialog.service';\r\nimport { SidebarService } from '../../shared/sidebar/sidebar.service';\r\n\r\n@Component({\r\n  selector: 'app-user-hh-ss-remap-home',\r\n  templateUrl: './user-hh-ss-remap-home.component.html',\r\n  styleUrls: ['./user-hh-ss-remap-home.component.css']\r\n})\r\nexport class UserHhSsRemapHomeComponent implements OnInit {\r\n  locationForm: UntypedFormGroup;\r\n  regionList: Array<any> = [];\r\n  branchList: Array<any> = [];\r\n  fromUserList: Array<any> = [];\r\n  toUserList: Array<any> = [];\r\n  noUserPresent: boolean = false;\r\n  branchId: any;\r\n  loader: boolean = true;\r\n\r\n  constructor(private httpService: HttpService, private http: HttpClient, private fb: UntypedFormBuilder,\r\n    private sidebarService: SidebarService, private confirmationDialogService: ConfirmationDialogService,\r\n    private baselineService: BaselineSurveyService, private toaster: ToastrService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.loader = false;\r\n    this.sidebarService.checkRoledetailDTO().then((res: any) => {\r\n      this.loader = true;\r\n      if (res.regionBranchHide) {\r\n        this.regionList = res.region;\r\n      }\r\n    });\r\n\r\n    this.sidebarService.subMenuList\r\n      .find(functionShortName => functionShortName.functionShortName == 'System Administration')?.subMenuDetailList\r\n      .find(item => item.subFunctionMasterId == 185 || item.subFunctionMasterId == 189)?.accessDetailList\r\n      .find(accessType => accessType.accessType == 'update')?.accessType ? this.router.navigate(['/user-hh-ss-remap']) : this.router.navigate(['/error']);\r\n  }\r\n\r\n  createForm() {\r\n    this.locationForm = this.fb.group({\r\n      region: ['', Validators.required],\r\n      branch: ['', Validators.required],\r\n      fromUser: ['', Validators.required],\r\n      toUser: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.locationForm.controls;\r\n  }\r\n\r\n  changeRegion(value) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      regionId: value,\r\n    };\r\n    this.baselineService.listOfBranchesOfARegion(Dto).subscribe(\r\n      (res) => {\r\n        this.branchList = res?.responseObject;\r\n      },\r\n      (error) => {\r\n        this.branchList = null;\r\n      }\r\n    );\r\n  }\r\n\r\n  changeBranch(value) {\r\n    this.branchId = value\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      branchId: this.branchId\r\n    }\r\n    if (this.branchId != '') {\r\n      this.http.post(`${this.httpService.baseURL}branch/getListOfAllHcoITL`, Dto).subscribe((res: any) => {\r\n        this.fromUserList = res?.responseObject;\r\n        this.noUserPresent = (this.fromUserList.length == 0) ? true : false;\r\n      });\r\n    }\r\n    this.locationForm.controls.fromUser.patchValue('');\r\n    this.locationForm.controls.toUser.patchValue('');\r\n    if (!this.locationForm.value.branch) {\r\n      this.fromUserList = [];\r\n      this.toUserList = [];\r\n    }\r\n  }\r\n\r\n  changeFromUser(value) {\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      branchId: this.branchId\r\n    }\r\n    if (this.branchId != '') {\r\n      this.http.post(`${this.httpService.baseURL}branch/getListOfActiveHcoITL`, Dto).subscribe((res: any) => {\r\n        this.toUserList = res?.responseObject.filter(item => item.user_id != value);\r\n      });\r\n    }\r\n    this.locationForm.controls.toUser.patchValue('');\r\n  }\r\n\r\n  changeToUser(value) {\r\n\r\n  }\r\n\r\n  remapUser() {\r\n    console.log(this.locationForm.value.fromUser, this.locationForm.value.toUser)\r\n    let Dto = {\r\n      dataAccessDTO: this.httpService.dataAccessDTO,\r\n      fromUserId: this.locationForm.value.fromUser,\r\n      toUserId: this.locationForm.value.toUser\r\n    }\r\n\r\n\r\n    this.confirmationDialogService.confirm('', `Do you want to remap?`).then(() => {\r\n      this.loader = false;\r\n      if (this.locationForm.value.fromUser != '' && this.locationForm.value.toUser != '') {\r\n        this.http.post(`${this.httpService.baseURL}remap/remapAllHhAndSsOfOneUserToAnother`, Dto).subscribe((res: any) => {\r\n          if (res.status) {\r\n            this.showSuccess(res.message);\r\n            this.loader = true;\r\n            this.locationForm.controls.region.patchValue('');\r\n            this.locationForm.controls.branch.patchValue('');\r\n            this.locationForm.controls.fromUser.patchValue('');\r\n            this.locationForm.controls.toUser.patchValue('');\r\n          } else {\r\n            this.showError('Error');\r\n            this.loader = true;\r\n          }\r\n        })\r\n      }\r\n    }).catch(() => '');\r\n\r\n  }\r\n\r\n  showSuccess(message) {\r\n    this.toaster.success(message, 'Success', {\r\n      timeOut: 5000,\r\n    });\r\n  }\r\n\r\n  /* Show Error message toaster */\r\n  showError(message) {\r\n    this.toaster.error(message, 'Error', {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n}\r\n","<app-loader [hidden]=\"loader\"></app-loader>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"white_box QA_section mb_30\">\r\n\r\n          <div id=\"header-fixed\" style=\"display: flex;\">\r\n            <h2 class=\"page-title\">User Household SS Remap</h2>\r\n        </div>\r\n        \r\n        <form class=\"form-signin\" [formGroup]=\"locationForm\">\r\n            <div class=\"row\">\r\n                <div class=\"form-group col-md\">\r\n                    <label for=\"region\"\r\n                      >Region :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n                    >\r\n                    <select\r\n                      class=\"form-select\"\r\n                      (change)=\"changeRegion($event.target.value)\"\r\n                      formControlName=\"region\"\r\n                      id=\"region\"\r\n                      [ngClass]=\"{\r\n                        'is-invalid': f.region.invalid && f.region.touched,\r\n                        'is-valid':\r\n                          f.region.valid && (f.region.dirty || f.region.touched)\r\n                      }\"\r\n                    >\r\n                      <option value=\"\">-- Select Region --</option>\r\n                      <option *ngFor=\"let region of regionList\" [value]=\"region.regionMasterId\">\r\n                        {{region.regionName}}\r\n                      </option>\r\n                    </select>\r\n                    <div *ngIf=\"f.region.errors\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.region.errors.required\">Region selection is required</div>\r\n                    </div>\r\n                  </div>\r\n              \r\n                  <div class=\"form-group col-md\">\r\n                    <label for=\"branch\"\r\n                      >Branch :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n                    >\r\n                    <select\r\n                      class=\"form-select\"\r\n                      (change)=\"changeBranch($event.target.value)\"\r\n                      formControlName=\"branch\"\r\n                      id=\"branch\"\r\n                      [ngClass]=\"{\r\n                        'is-invalid': f.branch.invalid && f.branch.touched,\r\n                        'is-valid':\r\n                          f.branch.valid && (f.branch.dirty || f.branch.touched)\r\n                      }\"\r\n                    >\r\n                      <option value=\"\">-- Select Branch --</option>\r\n                      <option *ngFor=\"let branch of branchList\" [value]=\"branch.branchId\">\r\n                        {{ branch.branchName }}\r\n                      </option>\r\n                    </select>\r\n                    <div *ngIf=\"f.branch.errors\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.branch.errors.required\">Branch selection is required</div>\r\n                    </div>\r\n                  </div>\r\n            </div>\r\n            <div class=\"text-center text-danger\" *ngIf=\"noUserPresent\"><br>*No user present on this branch*</div>\r\n            <br>\r\n            <div class=\"row\">\r\n                <div class=\"form-group col-md\">\r\n                    <label for=\"fromUser\"\r\n                      >From User:&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n                    >\r\n                    <select\r\n                      class=\"form-select\"\r\n                      (change)=\"changeFromUser($event.target.value)\"\r\n                      formControlName=\"fromUser\"\r\n                      [ngClass]=\"{\r\n                        'is-invalid': f.fromUser.invalid && f.fromUser.touched,\r\n                        'is-valid':\r\n                          f.fromUser.valid && (f.fromUser.dirty || f.fromUser.touched)\r\n                      }\"\r\n                    >\r\n                      <option value=\"\">-- Select From User --</option>\r\n                      <option *ngFor=\"let fromUser of fromUserList\" [value]=\"fromUser.user_id\">\r\n                        {{fromUser.user_firstname}} {{fromUser.user_middlename}} {{fromUser.user_lastname}}\r\n                      </option>\r\n                    </select>\r\n                    <div *ngIf=\"f.fromUser.errors\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.fromUser.errors.required\">From User selection is required</div>\r\n                    </div>\r\n                  </div>\r\n              \r\n                  <div class=\"form-group col-md\">\r\n                    <label for=\"toUser\"\r\n                      >To User :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label\r\n                    >\r\n                    <select\r\n                      class=\"form-select\"\r\n                      (change)=\"changeToUser($event.target.value)\"\r\n                      formControlName=\"toUser\"\r\n                      id=\"toUser\"\r\n                      [ngClass]=\"{\r\n                        'is-invalid': f.toUser.invalid && f.toUser.touched,\r\n                        'is-valid':\r\n                          f.toUser.valid && (f.toUser.dirty || f.toUser.touched)\r\n                      }\"\r\n                    >\r\n                      <option value=\"\">-- Select To User --</option>\r\n                      <option *ngFor=\"let toUser of toUserList\" [value]=\"toUser.user_id\">\r\n                        {{toUser.user_firstname}} {{toUser.user_middlename}} {{toUser.user_lastname}}\r\n                      </option>\r\n                    </select>\r\n                    <div *ngIf=\"f.toUser.errors\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.toUser.errors.required\">To User selection is required</div>\r\n                    </div>\r\n                  </div>\r\n            </div>\r\n            <br>\r\n              <div class=\"text-center\">\r\n                <i class=\"fa fa-arrow-circle-right fa-4x\" style=\"color: #499;\" aria-hidden=\"true\"\r\n                (click)=\"remapUser()\"></i>\r\n              </div>\r\n        </form>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserHhSsRemapHomeComponent } from './user-hh-ss-remap-home/user-hh-ss-remap-home.component';\r\n\r\nconst routes: Routes = [{ path: '', component: UserHhSsRemapHomeComponent },];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserHhSsRemapRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserHhSsRemapRoutingModule } from './user-hh-ss-remap-routing.module';\r\nimport { UserHhSsRemapHomeComponent } from './user-hh-ss-remap-home/user-hh-ss-remap-home.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { LoaderModule } from '../shared/loader/loader.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserHhSsRemapHomeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UserHhSsRemapRoutingModule, ReactiveFormsModule, FormsModule, LoaderModule\r\n  ]\r\n})\r\nexport class UserHhSsRemapModule { }\r\n"],"names":["Validators","i0","UserHhSsRemapHomeComponent","constructor","httpService","http","fb","sidebarService","confirmationDialogService","baselineService","toaster","router","ngOnInit","createForm","loader","checkRoledetailDTO","then","res","regionBranchHide","regionList","region","subMenuList","find","functionShortName","subMenuDetailList","item","subFunctionMasterId","accessDetailList","accessType","navigate","locationForm","group","required","branch","fromUser","toUser","f","controls","changeRegion","value","Dto","dataAccessDTO","regionId","listOfBranchesOfARegion","subscribe","branchList","responseObject","error","changeBranch","branchId","post","baseURL","fromUserList","noUserPresent","length","patchValue","toUserList","changeFromUser","filter","user_id","changeToUser","remapUser","console","log","fromUserId","toUserId","confirm","status","showSuccess","message","showError","catch","success","timeOut","selectors","decls","vars","consts","template","ctx","RouterModule","routes","path","component","UserHhSsRemapRoutingModule","forChild","imports","exports","CommonModule","ReactiveFormsModule","FormsModule","LoaderModule","UserHhSsRemapModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}