{"version":3,"file":"src_app_modules_village-setup_village-setup_module_ts.js","mappings":"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","sources":["./src/app/modules/village-setup/village-setup-routing.module.ts","./src/app/modules/village-setup/village-setup.component.ts","./src/app/modules/village-setup/village-setup.component.html","./src/app/modules/village-setup/village-setup.module.ts","./src/app/modules/village-setup/village-setup.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VillageSetupComponent } from './village-setup.component';\n\nconst routes: Routes = [{ path: '', component: VillageSetupComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VillageSetupRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from '../core/http/http.service';\nimport { ConfirmationDialogService } from '../shared/confirmation-dialog/confirmation-dialog.service';\nimport { ValidationService } from '../shared/services/validation.service';\nimport { SidebarService } from '../shared/sidebar/sidebar.service';\nimport { VillageSetupService } from './village-setup.service';\n\n@Component({\n  selector: 'app-village-setup',\n  templateUrl: './village-setup.component.html',\n  styleUrls: ['./village-setup.component.css']\n})\nexport class VillageSetupComponent implements OnInit {\n  villageForm: UntypedFormGroup;\n  villCreateForm: UntypedFormGroup;\n  stateList: Array<any> = [];\n  districtList: Array<any> = [];\n  blockList: Array<any> = [];\n  gpList: Array<any> = [];\n  villList: Array<any> = [];\n  page = 1;\n  pageSize = 6;\n  p: any;\n  GPType: any;\n  blockType: any;\n  districtType: any;\n  stateType: any;\n  villageId: any;\n  editVillData: any;\n  modalContent: any;\n  modalReference: any;\n  gpId: any;\n  searchText: any;\n  searchFullscreen: boolean;\n  isDisabled: boolean = false;\n  createMode: boolean;\n  updateMode: boolean;\n  deleteMode: boolean;\n  role: any;\n\n\n  constructor(private fb: UntypedFormBuilder, private httpService: HttpService, private villageService: VillageSetupService,\n    private sidebarService: SidebarService, private modalService: NgbModal, private validationService: ValidationService,\n    private toaster: ToastrService, private confirmationDialogService: ConfirmationDialogService, private router: Router) { }\n\n  ngDoCheck(): void {\n    this.searchFullscreen = this.validationService.val;\n  }\n\n  ngOnInit(): void {\n    this.role = this.sidebarService.RoleDTOName;\n    console.log(this.role);\n    this.createForm();\n\n    // Api call for viewing state list\n    let obj = {\n      dataAccessDTO: this.httpService.dataAccessDTO\n    }\n\n    this.villageService.getStateList(obj).subscribe((res) => {\n      this.stateList = res.responseObject.stateList;\n      console.log(this.stateList);\n    });\n\n    this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\n      .find(item => item.subFunctionMasterId == 49 || item.subFunctionMasterId == 50 || item.subFunctionMasterId == 51 || item.subFunctionMasterId == 52)?.accessDetailList\n      .find(accessType => accessType.accessType == 'view')?.accessType ? this.router.navigate(['/village-setup']) : this.router.navigate(['/error']);\n\n    this.createMode = this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\n      .find(item => item.subFunctionMasterId == 49 || item.subFunctionMasterId == 50 || item.subFunctionMasterId == 51 || item.subFunctionMasterId == 52)?.accessDetailList\n      .find(accessType => accessType.accessType == 'create')?.accessType ? true : false;\n\n    this.updateMode = this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\n      .find(item => item.subFunctionMasterId == 49 || item.subFunctionMasterId == 50 || item.subFunctionMasterId == 51 || item.subFunctionMasterId == 52)?.accessDetailList\n      .find(accessType => accessType.accessType == 'update')?.accessType ? true : false;\n\n    this.deleteMode = this.sidebarService.subMenuList\n      .find(functionShortName => functionShortName.functionShortName == 'Branch Setup')?.subMenuDetailList\n      .find(item => item.subFunctionMasterId == 49 || item.subFunctionMasterId == 50 || item.subFunctionMasterId == 51 || item.subFunctionMasterId == 52)?.accessDetailList\n      .find(accessType => accessType.accessType == 'delete')?.accessType ? true : false;\n\n  }\n\n  createForm() {\n    this.villageForm = this.fb.group({\n      state: ['', Validators.required],\n      district: ['', Validators.required],\n      block: ['', Validators.required],\n      gp: ['', Validators.required]\n    });\n  }\n\n  get f() {\n    return this.villageForm.controls;\n  }\n\n  changeState(stateId) {\n\n    let obj = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      stateId: stateId\n    }\n\n    this.villageService.getDistrictAndBlockList(obj).subscribe((res) => {\n      this.districtList = res.responseObject.stateWiseDistrictList;\n      console.log(this.districtList);\n    })\n\n    this.stateType = this.stateList.find(state => state.stateMasterId == stateId);\n    console.log(this.stateType, 'stateType');\n\n    this.villageForm.controls.district.setValue('');\n    this.villageForm.controls.block.setValue('');\n    this.villageForm.controls.gp.setValue('');\n    this.villList = [];\n    if (this.villageForm.value.state == '') {\n      this.villageForm.controls.district.setValue('');\n      this.villageForm.controls.block.setValue('');\n      this.villageForm.controls.gp.setValue('');\n      this.villList = [];\n    }\n\n  }\n\n  changeDistrict(districtId) {\n    console.log(districtId);\n    this.districtType = this.districtList.find(district => district.districtMasterId == districtId);\n    console.log(this.districtType);\n\n    this.blockList = this.districtList.find(block => block.districtMasterId == districtId)?.blockList;\n    console.log(this.blockList);\n\n    this.villageForm.controls.block.setValue('');\n    this.villageForm.controls.gp.setValue('');\n    this.villList = [];\n\n    if (this.villageForm.value.district == '') {\n      this.villageForm.controls.block.setValue('');\n      this.villageForm.controls.gp.setValue('');\n      this.villList = [];\n    }\n  }\n\n  changeBlock(blockId) {\n    console.log(blockId);\n    this.blockType = this.blockList.find(block => block.blockMasterId == blockId);\n    console.log(this.blockType, 'blockType');\n\n    this.gpList = this.blockList.find(gp => gp.blockMasterId == blockId)?.gpDtoList;\n    console.log(this.gpList);\n    this.villageForm.controls.gp.setValue('');\n    this.villList = [];\n    if (this.villageForm.value.block == '') {\n      this.villageForm.controls.gp.setValue('');\n      this.villList = [];\n    }\n  }\n\n  changeGp(GPID) {\n    console.log(GPID);\n    this.gpId = GPID;\n    this.GPType = this.gpList.find(gp => gp.gpMunicipalId == this.gpId);\n    console.log(this.GPType, 'GPType');\n\n    let obj = { dataAccessDTO: this.httpService.dataAccessDTO, gpId: this.gpId };\n    this.villageService.getVillageListByGpId(obj).subscribe((res) => {\n      this.villList = res.responseObject;\n      console.log(this.villList);\n    });\n\n    this.villList = [];\n    if (this.villageForm.value.gp == '') {\n      this.villList = [];\n    }\n\n  }\n\n  createVillage(createVill) {\n    console.log(this.villageId, 'villge idcreate');\n    this.modalContent = '';\n    this.modalReference = this.modalService.open(createVill, {\n      windowClass: 'createVill',\n    });\n    this.createVillForm();\n  }\n\n  editVillForm(vill, createVill) {\n    console.log(this.villageId, 'villge idedit');\n    this.villageId = vill.villageMasterId;\n    this.editVillData = vill;\n    console.log(this.villageId, this.editVillData, 'villageId');\n    this.createVillage(createVill);\n  }\n\n  createVillForm() {\n    this.villCreateForm = this.fb.group({\n      village: [this.editVillData?.villageName ? this.editVillData?.villageName : '', Validators.compose([Validators.required, Validators.minLength(3)])]\n    });\n\n    if (this.villageId) {\n      this.villCreateForm.markAllAsTouched();\n    }\n  }\n\n  get c() {\n    return this.villCreateForm.controls;\n  }\n\n  villModalDismiss() {\n    console.log(this.villageId);\n\n    if (this.villageId) {\n      this.editVillData = [];\n      this.villageId = 0;\n      this.modalReference?.close();\n    }\n    else {\n      this.modalReference?.close();\n    }\n\n  }\n\n  saveVillForm() {\n\n    this.villCreateForm.value.village = this.validationService.firstCaps(\n      this.villCreateForm.value.village.trim()\n    );\n\n    if (this.villCreateForm.valid) {\n      let obj = {\n        dataAccessDTO: this.httpService.dataAccessDTO,\n        villageCreationDto: {\n          villageMasterId: this.villageId ? this.villageId : 0,\n          villageName: this.validationService.camelize(this.villCreateForm.value.village.trim()),\n          gpMunicipalId: this.gpId,\n          active_flag: 'Y'\n        }\n      }\n\n      console.log(obj);\n\n      this.villCheckDuplicates(obj);\n    }\n\n  }\n\n  villCheckDuplicates(obj) {\n\n    var userEnteredVill: string;\n    userEnteredVill = this.villCreateForm.value.village;\n\n    var checkDuplicateVillName: any;\n\n    checkDuplicateVillName = this.villList?.find((vill) => vill.villageName == userEnteredVill)?.villageName;\n    console.log(checkDuplicateVillName);\n\n    if (userEnteredVill == checkDuplicateVillName) {\n      this.showError(userEnteredVill + ' ' + 'already exists in the GP. Please retry with a different name');\n      return;\n    }\n\n    this.villageService.saveVillage(obj).subscribe((res: any) => {\n      console.log(res);\n      if (this.villageId == 0 || this.villageId == undefined) {\n        if (res.status == true) {\n          this.showSuccess(res.message);\n          this.villModalDismiss();\n          this.changeGp(this.gpId);\n        }\n        else {\n          this.showError(res.message);\n        }\n      } else {\n\n        if (res.status == true) {\n          this.showSuccess(res.message);\n          this.villModalDismiss();\n          this.villageForm.controls.state.setValue('');\n          this.villageForm.controls.district.setValue('');\n          this.villageForm.controls.block.setValue('');\n          this.villageForm.controls.gp.setValue('');\n          this.villList = [];\n\n        }\n        else {\n          this.showError(res.message);\n        }\n\n      }\n\n    })\n  };\n\n  deleteVillForm(vill, i) {\n    console.log(vill);\n\n    this.confirmationDialogService.confirm('', 'Are you sure you want to delete ?')\n      .then(() => this.delete(vill, i)\n      )\n      .catch(() => '');\n  }\n\n  delete(vill, i) {\n    let obj = {\n      dataAccessDTO: this.httpService.dataAccessDTO,\n      villageCreationDto: {\n        villageMasterId: vill.villageMasterId,\n        villageName: vill.villageName,\n        gpMunicipalId: this.gpId,\n        active_flag: 'N'\n      }\n    }\n\n    console.log(obj);\n    this.villageService.saveVillage(obj).subscribe((res: any) => {\n      console.log(res);\n      if (res.status == true) {\n        this.showSuccess(res.message);\n        this.villList.splice(i, 1);\n        this.changeGp(this.gpId);\n      }\n      else {\n        this.showError(res.message);\n      }\n    })\n\n  }\n\n  showSuccess(message) {\n    this.toaster.success(message, 'Create Village', {\n      timeOut: 3000,\n    });\n  }\n\n  showError(message) {\n    this.toaster.error(message, 'Create Village', {\n      timeOut: 3000,\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"white_box QA_section mb_30\">\n\n                <div id=\"header-fixed\" style=\"display: flex;\">\n                    <h2 class=\"page-title\">Create Village/ Gram Sansad/ Locality </h2>\n\n                    <div class=\"box_right d-flex lms_block col-md-6\" *ngIf=\"villageForm.value.gp\">\n                        <div class=\"serach_field_2\">\n                            <div [ngClass]=\" searchFullscreen ? 'search_inner_fullscreen ' : ' search_inner' \">\n                                <form active=\"#\">\n                                    <div class=\"search_field\">\n                                        <input type=\"text\" name=\"search\" placeholder=\"Search Village Info here...\"\n                                            [(ngModel)]=\"searchText\">\n                                    </div>\n                                    <button type=\"submit\"> <i class=\"fa fa-search\"></i> </button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <form class=\"form-signin\" [formGroup]=\"villageForm\">\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\">\n                            <label for=\"state\">State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeState($event.target.value)\"\n                                formControlName=\"state\" [ngClass]=\"{'is-invalid': f.state.invalid && f.state.touched, 'is-valid': \n                                f.state.valid && (f.state.dirty || f.state.touched)}\">\n                                <option value=\"\">-- Select State --</option>\n                                <option *ngFor=\"let state of stateList; index as i\" value=\"{{state.stateMasterId}}\">\n                                    {{state.stateName}}</option>\n                            </select>\n                            <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.state.errors.required\">\n                                    State selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"district\">District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeDistrict($event.target.value)\"\n                                formControlName=\"district\" [ngClass]=\"{'is-invalid': f.district.invalid && f.district.touched,\n                                'is-valid': f.district.valid && (f.district.dirty || f.district.touched)}\">\n                                <option value=\"\">-- Select District --</option>\n                                <option *ngFor=\"let district of districtList; index as i\"\n                                    value=\"{{district.districtMasterId}}\">\n                                    {{district.districtName}}</option>\n                            </select>\n                            <div *ngIf=\"f.district.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.district.errors.required\">\n                                    District selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"block\">Block :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBlock($event.target.value)\"\n                                formControlName=\"block\" [ngClass]=\"{'is-invalid': f.block.invalid && f.block.touched,\n                                'is-valid': f.block.valid && (f.block.dirty || f.block.touched)}\">\n                                <option value=\"\">-- Select Block --</option>\n                                <option *ngFor=\"let block of blockList; index as i\" value=\"{{block.blockMasterId}}\">\n                                    {{block.blockName}} </option>\n                            </select>\n                            <div *ngIf=\"f.block.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.block.errors.required\">\n                                    Block selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\">\n                            <label for=\"gp\">GP/ Municipality :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeGp($event.target.value)\" formControlName=\"gp\"\n                                id=\"gp\" [ngClass]=\"{'is-invalid': f.gp.invalid && f.gp.touched,\n                              'is-valid': f.gp.valid && (f.gp.dirty || f.gp.touched) }\">\n                                <option value=\"\">-- Select GP/ Municipality --</option>\n                                <option *ngFor=\"let gp of gpList\" value=\"{{gp.gpMunicipalId}}\">\n                                    {{ gp.name }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"f.gp.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.gp.errors.required\">\n                                    GP selection is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\" *ngIf=\"villageForm.value.gp && createMode\" style =\"display: flex; justify-content:flex-end\">\n                            <button class=\"btn btn-primary\" (click)=\"createVillage(createVill)\">Create</button>\n                        </div>\n                    </div>\n\n                    <div class=\"white_box_tittle list_header\">\n\n                        <div class=\"QA_table \">\n                            <div id=\"DataTables_Table_0_wrapper\" class=\"dataTables_wrapper no-footer\">\n                                <table\n                                    class=\"table lms_table_active dataTable no-footer dtr-inline collapsed table table-striped\"\n                                    role=\"grid\" aria-describedby=\"DataTables_Table_0_info\" style=\"table-layout: fixed;\">\n\n                                    <thead id=\"header-fixed\">\n                                        <tr>\n                                            <th>SL No</th>\n                                            <th>GP/ Municipality<br> Name</th>\n                                            <th>GP/ Municipality<br> Type</th>\n                                            <th>Village/ Gram Sansad/<br>Locality </th>\n                                            <th>Branch Name</th>\n                                            <th *ngIf=\"deleteMode || updateMode\">Action</th>\n                                        </tr>\n                                    </thead>\n\n                                    <tbody>\n\n                                        <tr\n                                            *ngFor=\"let vill of villList |  filter:  searchText  |paginate: { itemsPerPage: 5, currentPage: p }; index as i\">\n                                            <td>{{(p-1)*5+i+1 ? (p-1)*5+i+1 : i+1}}</td>\n                                            <td>{{GPType.name}}</td>\n                                            <td>{{GPType.type}}</td>\n                                            <td>{{vill.villageName}}</td>\n                                            <td>{{vill.branchDetails?.branchName ? vill.branchDetails?.branchName :\n                                                '-'}}</td>\n                                            <td style=\"padding: 0px;\"  *ngIf=\"deleteMode || updateMode\"><i class=\"fas fa-edit\" title=\"Edit Village\"\n                                                    *ngIf=\"updateMode\" (click)=\"editVillForm(vill, createVill)\"></i>\n                                                <i class=\"fas fa-trash\" title=\"Delete Village\" *ngIf=\"deleteMode\"\n                                                    (click)=\"deleteVillForm(vill, i)\"></i>\n                                            </td>\n\n                                        </tr>\n                                    </tbody>\n\n                                </table>\n                                <pagination-controls class=\"d-flex justify-content-end p-1 current ngx-pagination1\"\n                                    (pageChange)=\"p = $event\" (pageBoundsCorrection)=\"p = $event \">\n                                </pagination-controls>\n\n                            </div>\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #createVill>\n\n    <div class=\"modal-content\">\n        <div class=\"modal-header\">\n\n            <div class=\"row\">\n                <div class=\"col-md-7\">\n                    <h3 class=\"modal-title\" id=\"modal-basic-title\" *ngIf=\"!villageId\">Create Village</h3>\n                    <h3 class=\"modal-title\" id=\"modal-basic-title\" *ngIf=\"villageId\">Edit Village</h3>\n                </div>\n\n                <div class=\"col-md-2\">\n                    <span class=\"close\" (click)=\"villModalDismiss()\"\n                        style=\"cursor: pointer;font-size: 35px;\">&times;</span>\n                </div>\n            </div>\n\n        </div>\n\n        <div class=\"modal-body\">\n            <form class=\"form-signin\" [formGroup]=\"villCreateForm\">\n\n                <form class=\"form-signin\" [formGroup]=\"villageForm\">\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\" *ngIf=\"villageId\">\n                            <label for=\"state\">State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeState($event.target.value)\"\n                                formControlName=\"state\" [ngClass]=\"{'is-invalid': f.state.invalid && f.state.touched, 'is-valid': \n                                f.state.valid && (f.state.dirty || f.state.touched)}\">\n                                <option value=\"\">-- Select State --</option>\n                                <option *ngFor=\"let state of stateList; index as i\" value=\"{{state.stateMasterId}}\">\n                                    {{state.stateName}}</option>\n                            </select>\n                            <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.state.errors.required\">\n                                    State selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\" *ngIf=\"!villageId\">\n                            <label for=\"state\">State :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeState($event.target.value)\"\n                                formControlName=\"state\" [ngClass]=\"{'is-invalid': f.state.invalid && f.state.touched, 'is-valid': \n                                f.state.valid && (f.state.dirty || f.state.touched)}\" [attr.disabled]=\"isDisabled\">\n                                <option value=\"\">-- Select State --</option>\n                                <option *ngFor=\"let state of stateList; index as i\" value=\"{{state.stateMasterId}}\">\n                                    {{state.stateName}}</option>\n                            </select>\n                            <div *ngIf=\"f.state.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.state.errors.required\">\n                                    State selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\" *ngIf=\"villageId\">\n                            <label for=\"district\">District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeDistrict($event.target.value)\"\n                                formControlName=\"district\" [ngClass]=\"{'is-invalid': f.district.invalid && f.district.touched,\n                                'is-valid': f.district.valid && (f.district.dirty || f.district.touched)}\">\n                                <option value=\"\">-- Select District --</option>\n                                <option *ngFor=\"let district of districtList; index as i\"\n                                    value=\"{{district.districtMasterId}}\">\n                                    {{district.districtName}}</option>\n                            </select>\n                            <div *ngIf=\"f.district.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.district.errors.required\">\n                                    District selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\" *ngIf=\"!villageId\">\n                            <label for=\"district\">District :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeDistrict($event.target.value)\"\n                                formControlName=\"district\" [ngClass]=\"{'is-invalid': f.district.invalid && f.district.touched,\n                                'is-valid': f.district.valid && (f.district.dirty || f.district.touched)}\"\n                                [attr.disabled]=\"isDisabled\">\n                                <option value=\"\">-- Select District --</option>\n                                <option *ngFor=\"let district of districtList; index as i\"\n                                    value=\"{{district.districtMasterId}}\">\n                                    {{district.districtName}}</option>\n                            </select>\n                            <div *ngIf=\"f.district.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.district.errors.required\">\n                                    District selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"form-group col-md\" *ngIf=\"villageId\">\n                            <label for=\"block\">Block :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBlock($event.target.value)\"\n                                formControlName=\"block\" [ngClass]=\"{'is-invalid': f.block.invalid && f.block.touched,\n                                'is-valid': f.block.valid && (f.block.dirty || f.block.touched)}\">\n                                <option value=\"\">-- Select Block --</option>\n                                <option *ngFor=\"let block of blockList; index as i\" value=\"{{block.blockMasterId}}\">\n                                    {{block.blockName}} </option>\n                            </select>\n                            <div *ngIf=\"f.block.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.block.errors.required\">\n                                    Block selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\" *ngIf=\"!villageId\">\n                            <label for=\"block\">Block :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeBlock($event.target.value)\"\n                                formControlName=\"block\" [ngClass]=\"{'is-invalid': f.block.invalid && f.block.touched,\n                                'is-valid': f.block.valid && (f.block.dirty || f.block.touched)}\"\n                                [attr.disabled]=\"isDisabled\">\n                                <option value=\"\">-- Select Block --</option>\n                                <option *ngFor=\"let block of blockList; index as i\" value=\"{{block.blockMasterId}}\">\n                                    {{block.blockName}} </option>\n                            </select>\n                            <div *ngIf=\"f.block.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.block.errors.required\">\n                                    Block selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\" *ngIf=\"villageId\">\n                            <label for=\"gp\">GP/ Municipality :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeGp($event.target.value)\" formControlName=\"gp\"\n                                id=\"gp\" [ngClass]=\"{'is-invalid': f.gp.invalid && f.gp.touched,\n                              'is-valid': f.gp.valid && (f.gp.dirty || f.gp.touched) }\">\n                                <option value=\"\">-- Select GP/ Municipality --</option>\n                                <option *ngFor=\"let gp of gpList\" value=\"{{gp.gpMunicipalId}}\">\n                                    {{ gp.name }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"f.gp.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.gp.errors.required\">\n                                    GP selection is required\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group col-md\" *ngIf=\"!villageId\">\n                            <label for=\"gp\">GP/ Municipality :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                            <select class=\"form-select\" (change)=\"changeGp($event.target.value)\" formControlName=\"gp\"\n                                id=\"gp\" [ngClass]=\"{'is-invalid': f.gp.invalid && f.gp.touched,\n                              'is-valid': f.gp.valid && (f.gp.dirty || f.gp.touched) }\" [attr.disabled]=\"isDisabled\">\n                                <option value=\"\">-- Select GP/ Municipality --</option>\n                                <option *ngFor=\"let gp of gpList\" value=\"{{gp.gpMunicipalId}}\">\n                                    {{ gp.name }}\n                                </option>\n                            </select>\n                            <div *ngIf=\"f.gp.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.gp.errors.required\">\n                                    GP selection is required\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n\n                <div class=\"row\">\n                    <div class=\"form-group col-md\">\n                        <label for=\"village\">Village/ Gram Sansad/ Locality :&nbsp;<span class=\"text-danger\">*&nbsp;</span></label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Village Name\" formControlName=\"village\"\n                            maxlength=\"45\" style=\"text-transform: capitalize\" [ngClass]=\"{'is-invalid': c.village.invalid && c.village.touched,'is-valid': c.village.valid && \n                            (c.village.dirty || c.village.touched)}\" />\n                        <div *ngIf=\"c.village.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"c.village.errors.required\">\n                                Village Name is required\n                            </div>\n                            <div *ngIf=\"c.village.errors.minlength\">\n                                Minimum length should be 3\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n        <div class=\"modal-footer\">\n            <div class=\"row\">\n                <button type=\"button\" class=\" btn btn-primary bttn\" (click)=\"saveVillForm()\">Save</button>\n            </div>\n        </div>\n\n    </div>\n\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VillageSetupRoutingModule } from './village-setup-routing.module';\nimport { VillageSetupComponent } from './village-setup.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\n\n@NgModule({\n  declarations: [VillageSetupComponent],\n  imports: [\n    CommonModule,\n    VillageSetupRoutingModule,\n    ReactiveFormsModule,\n    NgxPaginationModule,\n    Ng2SearchPipeModule,\n    FormsModule,\n  ]\n})\nexport class VillageSetupModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VillageSetupService {\n  baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getStateList(obj): any {\n    return this.http.post(`${this.baseURL}state/getListOfAllStates`, obj)\n  }\n\n  getDistrictAndBlockList(obj): any {\n    return this.http.post(`${this.baseURL}district/getListOfDistrictAndBlock`, obj)\n  }\n\n  getVillageListByGpId(obj): any {\n    return this.http.post(`${this.baseURL}village/getVillagesOfAGp`, obj)\n  }\n\n  saveVillage(obj): any {\n    return this.http.post(`${this.baseURL}village/saveOrUpdate`, obj)\n  }\n\n}\n\n"],"names":["RouterModule","VillageSetupComponent","routes","path","component","VillageSetupRoutingModule","forChild","imports","exports","Validators","i0","constructor","fb","httpService","villageService","sidebarService","modalService","validationService","toaster","confirmationDialogService","router","ngDoCheck","searchFullscreen","val","ngOnInit","role","RoleDTOName","console","log","createForm","obj","dataAccessDTO","getStateList","subscribe","res","stateList","responseObject","subMenuList","find","functionShortName","subMenuDetailList","item","subFunctionMasterId","accessDetailList","accessType","navigate","createMode","updateMode","deleteMode","villageForm","group","state","required","district","block","gp","f","controls","changeState","stateId","getDistrictAndBlockList","districtList","stateWiseDistrictList","stateType","stateMasterId","setValue","villList","value","changeDistrict","districtId","districtType","districtMasterId","blockList","changeBlock","blockId","blockType","blockMasterId","gpList","gpDtoList","changeGp","GPID","gpId","GPType","gpMunicipalId","getVillageListByGpId","createVillage","createVill","villageId","modalContent","modalReference","open","windowClass","createVillForm","editVillForm","vill","villageMasterId","editVillData","villCreateForm","village","villageName","compose","minLength","markAllAsTouched","c","villModalDismiss","close","saveVillForm","firstCaps","trim","valid","villageCreationDto","camelize","active_flag","villCheckDuplicates","userEnteredVill","checkDuplicateVillName","showError","saveVillage","undefined","status","showSuccess","message","deleteVillForm","i","confirm","then","delete","catch","splice","success","timeOut","error","selectors","decls","vars","consts","template","ctx","CommonModule","FormsModule","ReactiveFormsModule","NgxPaginationModule","Ng2SearchPipeModule","VillageSetupModule","declarations","environment","VillageSetupService","http","apiUrl","post","baseURL","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}